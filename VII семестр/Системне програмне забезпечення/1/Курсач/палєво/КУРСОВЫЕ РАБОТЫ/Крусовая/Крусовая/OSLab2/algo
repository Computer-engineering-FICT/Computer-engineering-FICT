Алгоритм WS Clock
0. Пусть текущий запущенный процесс это P. Записи активных страниц процесса P хранятся в кольцевом списке, так же как и в алготритме часов. В каждой записи есть биты M (modified - страница была изменена) и R (readed - страница была прочитанна), которые выставляются аппаратным путем при каждом обращении к памяти, так же как и в алгритме NRU (not recently used). На каждый такт часов все биты R сбрасываются, так же как и в NRU.
1. Каждая запись описывающая страницу содержит поле хранящее последнее время обращения к ней. На каждый такт часов, текущее накопительное время ЦПУ для процесса P сохраняется в записи каждой страницы у который бит R был установлен в 1. Таким образом, значение поля времени приблизительно равно времени последнего доступа к странице, с точностью равной периоду такта часов. Это очень похоже на принцип действия алгоритма LRU (least recently used), но не требует от оборудования обновления поля времени при каждом доступе к памяти.
2. Вводится параметр постоянный Тау и все страницы время доступа к которым меньше чем Тау, считаются кандидатами на замещение. Предполагается, что страницы время доступа к которым меньше чем Тау не входят в рабочее множество. Создатели ОС ищут оптимальное значение этого параметра и практика показывает, что это предположение более или менее правильно.
Основное преимущество в том, что нет нужды совершать обход всех страниц и находить такую, к которой не было обращений дольше всего. Достаточно найти первую страницу время доступа к которой меньше Тау. 
Если таких страниц нет, то выбирается страница с наименьшим временем последнего доступа (то есть такая, к которой дольше всего не было обращений).
3. В вопросе замещения, предпочтение отдается "чистым" ("clean", не измененные) страницам в сравнении с "грязными" ("dirty", измененные страницы), так как "чистные" страницы не нужно копировать в своп. Поэтому мы ищем первую попавшуюся "чистую" страницу, старше Тау. Если таких нет - мы замещаем "грязную" страницу, страрше Тау.

