<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0050)http://www.nestor.minsk.by/kg/kg01/20/kg12008.html -->
<HTML><HEAD><TITLE>КОМПЬЮТЕРНАЯ ГАЗЕТА</TITLE>
<META content="text/html; charset=windows-1251" http-equiv=Content-Type>
<META content="компьютер, интернет, программа, игры, новости, CD, литература" 
http-equiv=keys>
<META content="MSHTML 5.00.2314.1000" name=GENERATOR></HEAD>
<BODY topMargin=0>
<BLOCKQUOTE><BR><FONT face=Arial size=+1><B>Файловая система</B></FONT><FONT 
  face=Arial> <FONT size=-1>
  <P><B>Многих интересует, как в Linux организована файловая система, чем она 
  отличается от той, которая используется в Windows. В данной статье мы 
  рассмотрим основные концепции файловой системы Linux.<BR><BR></B>Любая 
  файловая система Linux включает в себя несколько основных концепций, связанных 
  с операционной системой Unix: файлы представляются индексными дескрипторами 
  (inode), каталоги это просто файлы, содержащие список записей, а доступ к 
  устройствам может быть осуществлен посредством запросов через файлы 
  устройств.<BR>Индексные дескрипторы. Любой файл представлен структурой, 
  называемой индексным дескриптором. Каждый дескриптор содержит описание файла, 
  которое включает в себя тип файла, права доступа, владельцев, ячейки времени 
  изменения файла, размер, указатели на блоки данных.&nbsp;<BR>Адреса блоков 
  данных, зарезервированных для файла, хранятся в его индексном дескрипторе. При 
  запросе пользователем операции ввода/вывода к файлу, ядро преобразует текущее 
  смещение в номер блока, использует этот номер в качестве указателя в таблице 
  адресов блоков, а затем производит требуемую операцию 
  ввода/вывода.<BR>Каталоги. Каталоги являются элементами иерархического дерева. 
  Любой каталог может содержать файлы и подкаталоги. Каталоги — это файлы 
  отдельного типа. В действительности, каталог — это файл, содержащий список 
  записей. Каждая запись содержит номер индексного дескриптора и имя файла. 
  Когда какой-либо процесс использует путь к файлу, ядро ищет в каталогах 
  соответствующий номер индексного дескриптора. После того, как имя файла было 
  преобразовано в номер индексного дескриптора, этот дескриптор помещается в 
  память и затем используется в последующих запросах.<BR>Ссылки. Концепция 
  файловых систем Unix включает в себя понятие ссылки. Один индексный дескриптор 
  может быть связан с несколькими именами файлов. Дескриптор содержит поле, 
  хранящее число, с которым ассоциируется файл. Добавление ссылки заключается в 
  создании записи каталога, где номер индексного дескриптора указывает на другой 
  дескриптор, и увеличении счетчика ссылок в дескрипторе.&nbsp;<BR>При удалении 
  ссылки ядро уменьшает счетчик ссылок и удаляет дескриптор, если этот счетчик 
  станет равным нулю. Такие ссылки называются жесткими и могут использоваться 
  только внутри одной файловой системы (нельзя создать ссылку для файла из 
  другой файловой системы). Более того, жесткая ссылка может указывать только на 
  файл (жесткая ссылка на каталог может привести к зацикливанию в файловой 
  системе). В большинстве Unix-систем существует еще один тип 
  ссылок.&nbsp;<BR>Эти ссылки, содержащие только имя файла, называются 
  символическими. При обработке ядром таких ссылок, во время преобразования пути 
  к файлу в индексный дескриптор, ядро заменяет имя ссылки на содержимое 
  дескриптора (т.е. на имя файла назначения) и заново интерпретирует путь к 
  файлу. Так как символическая ссылка не указывает на индексный дескриптор, то 
  возможно создание ссылок на файлы, расположенные в другой файловой системе. 
  Эти ссылки могут указывать на файл любого типа, даже на 
  несуществующий.<BR>Символические ссылки широко используются, так как они не 
  имеют тех ограничений, которые есть у жестких ссылок. Однако они занимают 
  некоторый объем на диске, где располагается индексный дескриптор и блоки 
  данных. Их использование может привести к определенным задержкам при 
  преобразовании пути к файлу в индексный дескриптор, что связано с тем, что при 
  обработке символической ссылки ядро должно заново интерпретировать путь к 
  файлу.<BR>Файлы устройств. В Unix-подобных операционных системах доступ к 
  устройствам осуществляется через специальные файлы. Такой файл не занимает 
  места в файловой системе. Он является только точкой доступа к драйверу 
  устройства.<BR>Существует два типа файлов устройств: символьные и 
  блочные.&nbsp;<BR>При использовании символьного типа имеется возможность 
  обмена данными с устройством только в символьном режиме, в то время как файлы 
  устройств блочного типа позволяют производить обмен только блоками с 
  использованием буфера. При запросе ввода/вывода к файлу устройства, этот 
  запрос перенаправляется к драйверу соответствующего устройства. Каждому 
  подобному файлу соответствует старший номер, который определяет тип 
  устройства, и младший номер, который определяет само устройство.<BR>Таким 
  образом, все устройства, диски, файлы соединены в одну файловую систему, что 
  является довольно удобным. В Linux файловая система имеет четко определенную 
  структуру каталогов, которая позволяет быстро определять, где что находится и 
  не путаться по каталогам в поисках нужной информации. Хотя никто не запрещает 
  изменить структуру каталогов под себя. Просто это такой 
  стандарт.&nbsp;<BR>Основные каталоги в Linux:<BR>/ — корневой каталог; /bin — 
  основные программы; /boot — каталог с файлами, используемыми при загрузке 
  системы; /dev — каталог с файлами устройств; /etc — файлы конфигурации; /home 
  — домашние каталоги пользователей, зарегистрированных в системе; /lib — 
  библиотеки и модули ядра; /mnt — точки монтирования (подключения) дисковых 
  накопителей (CD-ROM, Floppy), т.е. каталоги, которые будут указывать на 
  разделы, накопители; /root — каталог администратора системы; /sbin — основные 
  системные программы; /tmp — каталог временных файлов; /usr — каталог, в 
  котором содержатся все установленные пользовательские программы, документация 
  и т.д.; /var — каталог с различными данными для программ; /proc — виртуальный 
  каталог, в котором файлы хранят информацию о системных процессах.<BR>Вот такая 
  она, файловая система Linux. Конечно, самих файловых систем (реализаций) для 
  Linux множество. Но принципы построения одни.<BR><B><BR>X-Stranger<BR><A 
  href="mailto:xstranger@tut.by">xstranger@tut.by</A>&nbsp;</B></P>
  <P>(c)<A href="http://www.nestor.minsk.by/kg">компьютерная 
  газета</A></FONT></P>
  <P><!-- SpyLOG v2 f:0111 -->
  <SCRIPT language=javascript> 
                   u="u581.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1; 
                   bv=Math.round(parseFloat(nv.appVersion)*100); 
                   n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random(); z="p="+p+"&rn="+rn;y=""; 
                   y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>"; 
                   y+="<img src='http://"+u+"/cnt?"+z+ 
                   "&r="+escape(d.referrer)+ "&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>"; 
                   y+="</a>"; d.write(y); if(!n) { d.write("<"+"!--"); } //--></SCRIPT>
  <NOSCRIPT><A href="http://u581.71.spylog.com/cnt?f=3&amp;p=1" 
  target=_blank><IMG alt=SpyLOG border=0 src=""> </A></NOSCRIPT>
  <SCRIPT language=javascript1.2><!-- 
                   if(!n) { d.write("--"+">"); }//--></SCRIPT>
<!-- SpyLOG --></P><!-- Russian LinkExchange code START --><A 
  href="http://www.linkexchange.ru/users/002726/goto.map" target=_top><IMG 
  alt="Russian LinkExchange Banner Network" border=0 
  src="КОМПЬЮТЕРНАЯ ГАЗЕТА_files/057744-4.gif"></A><BR><A 
  href="http://www.linkexchange.ru/"><FONT size=2>Russian LinkExchange 
  Member</FONT></A><!-- Russian LinkExchange code END --></BLOCKQUOTE></FONT></BODY></HTML>
