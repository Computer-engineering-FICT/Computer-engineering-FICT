#define MAX_NODES 1024	// гранична кількість вузлів графа
#define MAX_CCNST 1024	// граничний обсяг символьних констант
#define MAX_UCNST 1024	// граничний обсяг числових констант
#define MAX_SCNST 1024	// граничний обсяг символьних образів
#define BRK_LIM	  1024	// граничний обсяг стеку дужок
#define LENGTHKW  230	// кільість наперед визначених слів для Verilog HDL
#define NTYPE 35
enum tokPrec // передування основних типів лексем
{nil,	// кінець файлу
 pend,//кінцевого символу програми-модуля - '.' або 'endmodule' 
 pclf,// закритої операторної дужки - '}' або 'end' чи 'join'
 pclb,// закритої дужки - ')'
 peos,// кінця оператора - ';'
 pekw,// початкового ключового слова конструкції - 'enum', 'struct'
 pmkw,// проміжного ключового слова конструкції - 'else', ...
 pskw,// початкового ключового слова конструкції - 'if', 'for'
 prep,// початкового ключового слова конструкції - 'do', 'repeat'
 popf,// відкритої операторної дужки - '{' або 'begin' чи 'fork'
 pcld,// закритої дужки даних - '}'
 pbkw,// початкового ключового слова конструкції - 'int', 'float'
 pdol,// роздільника списка - ',' для параметрів ^ одну позицію
 pcls,// закритої дужки - ']'
 pass,// присвоювань - '=', '+=', ... 
 psmc,// двокрапки - ':'
 pcnd,// умовної операції - '?'
 pacf,// доступу до полів - '.' та '->'
 porl,// логічної диз'юнкції - '||'
 panl,// логічної кон'юнкції - '&&'
 porw,// побітової диз'юнкції - '|' та '~|'
 pxrw,// додавання за модулем 2 - '^', '^~' та '~^'
 panw,// побітової кон'юнкції - '&' та '~&'
 pequ,//відношень рівності-нерівності - '==', '!=', '===','!==' 
 prel,// відношень більше-менше  - '<', '<=', '>=' та '>'
 pshf,// зсувів - '<<', '>>', '<<<' та '>>>'
 padd,// додавання-віднімання - '+' та '-'
 pmul,// множення-ділення - '*', '/' та '%'
 ppwr,// піднесення до ступеню  
 popd,// відкритої дужки даних - '{'
 pops,// відкритої дужки - '['
 popb,// відкритої дужки - '('
 puno,// унарної операції
 ptrm,// терму: константи та імені змінної, функції, тощо
 pprg//кінцевого символу програми-модуля- 'progam' або 'module' 
};
void SxAnInit(char nl);
int nxtProd(struct lxNode * nd,	// вказівник на початок масиву вузлів 
 		  int nR,	// номер кореневого вузла
 		  int nC);	// номер поточного вузла
int	prCmpr(struct lxNode*nd, int nn, int nr); //компресія для скорочення графа
