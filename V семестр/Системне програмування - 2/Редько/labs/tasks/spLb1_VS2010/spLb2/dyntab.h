#include "..\tables.h"
struct sgTbStr // структура сегмента
{int	nRsEl;   //	кількість зарезервованих елементів
 int	nFlEl;   //	кількість використаних елементів
 struct sgTbStr*pNxtSg;//адреса наступного сегмента
 struct recrd* pRcPtr; //вказівник на блок записів
};
struct hdTbStr // структура динамічної таблиці
{int	nSgLm; // гранична кількість елементів сегмента
 int	nSgBg; // довжина початкового виділення
 int	nSgSc;	// довжина повторного виділення
 int	nFlEl;	// кількість заповнених елементів
 struct sgTbStr* frstSg;//адреса початкового сегмента
};
// створення динамічної таблиці
struct	hdTbStr*crDnTb(int nLm, int nBg, int nSc);
// включення сторінки статичної таблиці до динамічної таблиці
void	impDnTb(struct hdTbStr*p,	//адреса заголовку таблиці 
				struct recrd*tb, int n);//адреса і довжина імпорту
//---!!! реалізації дописуються за варіантом!!!---
// вибірка елементу з динамічної таблиці
void	selDnTb(struct hdTbStr*p,	//адреса заголовку таблиці 
				struct recrd*r);	//адреса елемента для вставки
// вставка елементу до динамічної таблиці
void	insDnTb(struct hdTbStr*p,	//адреса заголовку таблиці  
				struct recrd*r);	//адреса елемента для вставки
// вилучення елементу з динамічної таблиці
void	delDnTb(struct hdTbStr*p,	//адреса заголовку таблиці  
				struct recrd*r);	//адреса елемента для вставки
// корекція елементу динамічної таблиці
void	updDnTb(struct keyStr, struct hdTbStr*p,	//адреса заголовку таблиці 
				struct recrd*r);	//адреса елемента для вставки
// розширення динамічної таблиці
void	extDnTb(struct hdTbStr*p); //адреса заголовку таблиці 
