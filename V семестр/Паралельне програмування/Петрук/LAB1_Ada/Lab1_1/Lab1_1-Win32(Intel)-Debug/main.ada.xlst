    1	-- Laboratorna robota 1
    2	-- Petruk Vadim, IO-92
    3	-- Variant: 1.13  C = A - B + D
    4	--			2.28  MD = MIN(MA)*MB*MC
    5	--			3.14  D = (A + B)*(MA - MB)
    6	---------------------------------------
    7	with Ada.Integer_Text_IO, Ada.Text_iO;
    8	use Ada.Integer_Text_IO, Ada.Text_IO;
    9	--------------------------------------- 
   10	procedure main is
   11		n:constant := 5;
   12		type Vector is array (1..N) of Integer;
   13		type Matrix is array (1..N) of Vector;
   14	
   15		A:Vector;
   16		b:Vector;
   17		c:Vector;
   18		D:Vector;
   19		MA:Matrix;
   20		MB:Matrix;
   21		MC:Matrix;
   22		MD:Matrix;
   23	---------------------------------------
   24		--service procedures
   25			
   26		procedure VectorIn (x : out Vector) is
   27		begin								
   28			for i in 1..N loop
   29				x(i):=2;		
   30			end loop;
   31		end VectorIn;
   32	---------------------------------------
   33		procedure VectorOut (x : in Vector ) is
   34		begin
   35			for i in 1..N loop
   36				put(x(i));		
   37			end loop;				
   38			New_line;
   39		end VectorOut;
   40	---------------------------------------
   41		procedure MatrixIn (MX : out Matrix) is
   42		begin
   43			for i in 1..N loop
   44				for j in 1..n loop
   45					MX(i)(j):=2;		
   46				end loop;
   47			end loop;
   48		end MatrixIn;				
   49	---------------------------------------
   50		procedure MatrixOut (MX : in Matrix) is
   51		begin
   52			for i in 1..N loop
   53				for j in 1..n loop
   54					put(MX(i)(j));												
   55					if (j=n) then
   56						New_line;
   57					end if;
   58				end loop;
   59			end loop;
   60			New_line;
   61		end MatrixOut;
   62	---------------------------------------
   63		--local Procedures
   64			--Func1:  C:=A-B+D
   65		procedure Func1 (A, B, d : in Vector; c : out Vector) is
   66		begin
   67			for i in 1..n loop
   68				c(i) := a(i)-B(i)+D(i);
   69			end loop;
   70		end Func1;
   71	---------------------------------------
   72		--Func2: MD := MIN(MA)*MB*MC
   73		procedure Func2 (MA, MB, MC : in Matrix; MD : out Matrix) is
   74		min:Integer;
   75		begin
   76			--MD := (0)
   77			for i in 1..n loop
   78				for j in 1..n loop
   79					MD(i)(j) := 0;
   80				end loop;
   81			end loop;
   82			--MD := MB*MC
   83			for i in 1..n loop
   84				for j in 1..n loop
   85					for k in 1..n loop 
   86						MD(i)(j) := MD(i)(j)+MB(i)(k)*MC(k)(j);
   87					end loop;
   88				end loop;
   89			end loop;
   90			--serching	min(MA)
   91			min := Ma(1)(1);	
   92			for i in 1..N loop
   93				for j in 1..n loop
   94					if MA(i)(j)<min then
   95	 			    	min := MA(i)(j);
   96				   	end if;
   97				end loop;
   98			end loop;
   99			-- MD := Min(MA)*MB*MC
  100	 		for i in 1..N loop
  101				for j in 1..n loop
  102					MD(i)(j) := MD(i)(j)*Min;
  103				end loop;
  104			end loop;
  105		end Func2;
  106	---------------------------------------
  107			--Func3: D := (A + B)*(MA - MB)
  108		procedure Func3(A, B: in Vector;MA, MB: in Matrix; D: out vector) is
  109		C:Vector;
  110		MC:Matrix;
  111		begin
  112			--C:=A + B
  113			for i in 1..N loop
  114				C(i) := A(i) + B(i);
  115			end loop;
  116			--MC:=MA - MB
  117	    	for i in 1..N loop
  118				for j in 1..n loop
  119					MC(i)(j) := MA(i)(j) + MB(i)(j);
  120				end loop;
  121			end loop;
  122			--D := (0)
  123			for i in 1..n loop
  124				d(i) := 0;
  125			end loop;
  126			--D := C * MC
  127			for i in 1..n loop
  128				for j in 1..n loop
  129					D(j):= D(j) + C(j)*MC(j)(i);
  130				end loop;
  131			end loop;
  132		end func3;
  133	---------------------------------------					
  134	begin	
  135		VectorIn(A);
  136		VectorIn(b);
  137		VectorIn(d);
  138		Func1(A,B,D,C);
  139		put_Line("Func1: C:=A-B+D ");
  140		VectorOut(c);
  141	--------------------------
  142		matrixIn(MA);
  143		MatrixIn(MB);
  144		MatrixIn(MC);
  145		func2(MA,MB,MC,MD);
  146		put_Line("Func2: MD := MIN(MA)*MB*MC");
  147		MatrixOut(MD);
  148	--------------------------
  149		VectorIn(A);
  150		VectorIn(b);
  151		MatrixIn(MA);
  152		MatrixIn(MB);
  153		func3(a,b,MA,MB,d);
  154		put_Line("Func3: D := (A + B)*(MA - MB)");
  155		vectorOut(d);
  156	--------------------------
  157	end Main;

A                    object              15          135 138 149 153 
A                    parameter           65          68 
A                    parameter          108          114 
Ada                  File 1:f1ada.ada            7 
B                    parameter           65          68 
B                    parameter          108          114 
C                    object             109          114 129 
D                    object              18          137 138 153 155 
D                    parameter          108          124 129 
Func1                subprogram body     65          70 138 
Func2                subprogram body     73          105 145 
Func3                subprogram body    108          132 153 
Integer_Text_IO      File 2:f62ada.ada           7 8 
MA                   object              19          142 145 151 153 
MA                   parameter           73          91 94 95 
MA                   parameter          108          119 
MB                   object              20          143 145 152 153 
MB                   parameter          108          119 
MB                   parameter           73          86 
MC                   object              21          144 145 
MC                   object             110          119 129 
MC                   parameter           73          86 
MD                   object              22          145 147 
MD                   parameter           73          79 86 102 
MX                   parameter           41          45 
MX                   parameter           50          54 
Matrix               type                13          19 20 21 22 41 50 73 108 
                                                 110 
MatrixIn             subprogram body     41          48 142 143 144 151 152 
MatrixOut            subprogram body     50          61 147 
New_line             File 3:f110spc.ada          38 56 60 
Text_IO              File 3:f110spc.ada          7 8 
Vector               type                12          13 15 16 17 18 26 33 65 
                                                 108 109 
VectorIn             subprogram body     26          31 135 136 137 149 150 
VectorOut            subprogram body     33          39 140 155 
b                    object              16          136 138 150 153 
c                    object              17          138 140 
c                    parameter           65          68 
d                    parameter           65          68 
i                    object              52          54 
i                    object              92          94 95 
i                    object              28          29 
i                    object             127          129 
i                    object              77          79 
i                    object             100          102 
i                    object              83          86 
i                    object             123          124 
i                    object             113          114 
i                    object             117          119 
i                    object              35          36 
i                    object              67          68 
i                    object              43          45 
j                    object              84          86 
j                    object              53          54 55 
j                    object              78          79 
j                    object             101          102 
j                    object              93          94 95 
j                    object              44          45 
j                    object             118          119 
j                    object             128          129 
k                    object              85          86 
main                 library subp body   10          157 
min                  object              74          91 94 95 102 
n                    object              11          55 
put                  File 3:f110spc.ada          36 54 
put_Line             File 3:f110spc.ada          139 146 154 
x                    parameter           33          36 
x                    parameter           26          29 
    File #1 src\f1ada.ada
    File #2 src\f62ada.ada
    File #3 src\f110spc.ada
