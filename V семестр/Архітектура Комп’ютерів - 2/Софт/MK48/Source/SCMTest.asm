
; Демострационная программа возможностей
; компилятора и модели однокристальной микроЭВМ
; семейства MK48 в совокупности с внешними портами
; КР580ВР43 и блоком внешней памяти данных

Org        0      
           Jmp    Program_start ; прыжок в начало программы
Org        3      
           Jmp    External_inthandler ; обработка внешнего прерывания
Org        7      
           Jmp    Timer_inthandler ; обработка прерывания таймера

External_inthandler:
           Anl    A, #7FH    ; Сбросить 7-ой бит
           Dis    I          ; запретить внешнее прерывание
           Retr
Timer_inthandler:
           Clr    A          ; По прерыванию таймера обнулим акумулятор
           Retr              ; возврат в программу

Program_start:; начало программы
           Outl   Bus, A
           Ins    A, Bus
           En     Tcnti      ; разрешения прерывания таймера

; Формирование низкоуровневого сигнала на всех выводах порта P1
; длительностью ~1000 мкс. с использованием прерывания таймера
           Clr    A          ; A=0 
           Outl   P1, A      ; записать A в P1 
           Mov    A, #0h-#12 ; 12*80=960 мкс.
           Mov    T, A       ; занести значение в регистр таймера
           Strt   T          ; запустить таймер
L1:
           Jb7    L1         ; Ждём завершения обработки прерывания (при A.7=0)
           Cpl    A          ; инвертируем A (A=#0FFh)
           Outl   P1, A      ; подготовим порт для чтения
           Dis    Tcnti      ; запретим прерывание от таймера

; Формирование сигнала (#0C0h) через порт P2
; длительностью ~350 мкс. с использованием таймера 
L2:        Jtf    L2         ; Заметим, что флаг TF сбрасывается только командой JTF
           Mov    A, #0C0H   ; Заносим значение сигнала в аккумулятор
           Outl   P2, A      ; Выдаём значение в порт
           Mov    A, #0h-#4  ; 4*80=320 мкс.
           Mov    T, A       ; запустить таймер
           Mov    A, #0FFH   ; сразу аккумулятор приравняем исходному значению порта 
           Strt   T          ; запустить таймер
L3:        Jtf    L4
           Jmp    L3
L4:        Nop               ; Задержка на 2.5 мкс
           Nop               ; Задержка на 2.5 мкс
           Outl   P2, A      ; Восстановление порта P2


; Формирование чередующихся сигналов (#0F0h и #0Fh) через порт Bus
; 8 чередований длительнось #0F0h=7.5мкс., а #0Fh - 15.0мкс.
; для формирования таких коротких сигналов таймер использовать невозможно
           Mov    R1, 8      ; R1 будем использовать как счётчик циклов
L5:
           Mov    A, #0F0H   ; Сигнал #0F0h (5 мкс)
           Outl   Bus, A     ; выведем сигнал в порт (5 мкс)
           Cpl    A          ; Инвертируем аккумулятор (2.5 мкс)
           Outl   Bus, A     ; Выводим сигнал #0F (5 мкс)
           Djnz   R1, L5     ; Проверим счётчик циклов (5 мкс)
           Mov    A, #0FFH   ; Исходное состояние порта Bus (5 мкс)
           Outl   Bus, A     ; Запиcь в порт Bus (5 мкс) 


; Тест двоично десятичных операций
; Получить число 95 (1001 0101) суммируя цифры 5 (0101)
; записать старшую тетраду в порт P5, малдшую - P4
           Clr    A          ; Очистим аккумулятор
           Mov    R1, #95/#5 ; R1 - счётчик циклов (R1 = 95/5 = 19)
           Mov    R0, #5     ; R0 - цифра 5 (будум суммировать с аккумулятором)

L6:        Add    A, R0      ; Прибавить 5 к аккумулятору 
           Da     A          ; Выполним десятичную коррекцию 
           Djnz   R1, L6     ; повторим

           Movd   P4, A      ; Запишем младшую тетраду в порт P4
           Swap   A          ; Выполним обмен тетрадами
           Movd   P5, A      ; запишем старшую тетраду в порт P5

; Тест дополнительных портов
; Значения читаются из буфера соответстующих портов
; предполагаем, что числа поступающие на входы портов первоначально
; не были упакованы в двоично-десятичном представлении, 
; поэтому будем выполнять десятичную коррекцию после считывания 
; первое число считывается из портf P6, второе - P7
; необходимо сложить эти два числа
; и выполнить операцию And между полученным двоично-десятичным
; результатом и портами P6 и P7 (младшая тетрада с P6, старшая - c P7)
; Если первоначально буферы портов не модифицировались и
; порты P6 и P7 не изменялись, то в результате выполнения 
; теста порт P6 примет значение 0 (0000), а P7 - 3 (0011) 
           Clr    A          ; очистить аккумулятор
           Movd   A, P6      ; прочитать входы порта P6
           Da     A          ; десятичная коррекция  
           Mov    R0, A      ; сохранить число для сложения
           Movd   A, P7      ; прочитать входы порта P7
           Da     A          ; десятичная коррекция
           Add    A, R0      ; сложить два числа
           Da     A          ; десятичная коррекция
           Anld   P6, A      ; Запишем младшую тетраду в порт P6
           Swap   A          ; Выполним обмен тетрадами
           Anld   P7, A      ; запишем старшую тетраду в порт P7


; Тест внешней памяти данных
; заполним всю дополнительную память числами в возрастающем
; порядке
           Clr    A          ; очистить аккумулятор
           Mov    R2, A      ; очистить счётчик циклов (256 циклов)
L7:        Mov    R0, A      ; R0 - адрес ячейки внешней памяти
           Movx   @R0, A     ; записать в ячейку внешней памяти аккумулятор
           Inc    A          ; увеличить значение аккумулятора на 1
           Djnz   R2, L7     ; повторить (следующий цикл)
           Nop


; Тест внешнего прерывания
; в этом тесте программа зацикливается, но по
; внешнему сигналу Int продолжает работать дальше
           Orl    A, #80H    ; установить 7-ой бит в 1
           En     I          ; разрешение внешнего прерывания

L8:        Jb7    L8         ; В обработчике внешнего прерывания
           Nop               ; 7-ой бит аккумулятора сбрасывается в 0


; Тест процессора и команд чтения ПЗУ
; Вычисление формулы Y=X*X+10  на интервале (X = 0..15)
; Результаты вычислений для каждого X заносятся в соответствующую
; ячейку внешней памяти данных
           Jmp    Start_pp_test

; подпрограмма унможения 4-разрядных чисел X*Y=Z
; на входе:   R0 - X
;             R1 - Y
; возвращает: A  - Z
Mulr0r1:
           Clr    A          ; отчистить аккумулятор
           Mov    A, R0      ; Записать в аккумулятор значение X
           Swap   A          ; сдвинуть влево на 4 разряда
           Orl    A, R1      ; записать в младшие 4-е разряда Y
           Movp3  A, @A      ; обратиться за результатом в третью страницу памяти
           Ret               ; возврат из подпрограммы 


Start_pp_test:

           Clr    A          ; Обнулим X
L9:
           Mov    R0, A      ; R0 = X
           Mov    R1, A      ; R1 = X
           Call   Mulr0r1    ; Вызов процедуры умножения A=R0*R1
           Add    A, #10     ; Прибавим 10 к A
           Movx   @R1, A     ; Запишем результат
           Mov    A, R0      ; A = X 
           Inc    A          ; Увеличим X
           Jb4    L10        ; Если X>15, то всё
           Jmp    L9         ; иначе продолжаем
L10:
           Nop

;Проверка команды Jnz/Jz
           Mov    A, 3
L11:
           Dec    A
           Jnz    L11

; Проверка команды ANL A,R1

           Mov    A, #0FFH
           Mov    R1, #55H
           Anl    A, R1


; Проверка соответствия времени выполнения команд
           Mov    A, 88h
           Nop               ; 1 Цикл  1
           Add    A, R0      ; 1 Цикл 2
           Add    A, R1      ; 1 Цикл 3
           Add    A, R2      ; 1 Цикл 4
           Add    A, R3      ; 1 Цикл 5
           Add    A, R4      ; 1 Цикл 6
           Add    A, R5      ; 1 Цикл 7
           Add    A, R6      ; 1 Цикл 8
           Add    A, R7      ; 1 Цикл 9
           Add    A, @R0     ; 1 Цикл 10
           Add    A, @R1     ; 1 Цикл 11
           Add    A, #00     ; 2 Цикл 12 +1
           Addc   A, R0      ; 1 Цикл 13
           Addc   A, R1      ; 1 Цикл 14
           Addc   A, R2      ; 1 Цикл 15
           Addc   A, R3      ; 1 Цикл 16
           Addc   A, R4      ; 1 Цикл 17
           Addc   A, R5      ; 1 Цикл 18
           Addc   A, R6      ; 1 Цикл 19
           Addc   A, R7      ; 1 Цикл 20
           Addc   A, @R0     ; 1 Цикл 21
           Addc   A, @R1     ; 1 Цикл 22
           Addc   A, #00     ; 2 Цикла 24

           Anl    A, R0      ; 1 Цикл 25
           Anl    A, R1      ; 1 Цикл 26
           Anl    A, R2      ; 1 Цикл 27
           Anl    A, R3      ; 1 Цикл 28
           Anl    A, R4      ; 1 Цикл 29
           Anl    A, R5      ; 1 Цикл 30
           Anl    A, R6      ; 1 Цикл 31
           Anl    A, R7      ; 1 Цикл 32
           Anl    A, @R0     ; 1 Цикл 33
           Anl    A, @R1     ; 1 Цикл 34
           Anl    A, #00     ; 2 Цикла 36

           Anl    Bus, #00   ; 2 Цикла 38
           Anl    P1, #00    ; 2 Цикла 40
           Anl    P2, #00    ; 2 Цикла 42
           Anld   P4, A      ; 2 Цикла 44
           Anld   P5, A      ; 2 Цикла 46
           Anld   P6, A      ; 2 Цикла 48
           Anld   P7, A      ; 2 Цикла 50

           Call   L12        ; 2 Цикла 52
L12:

           Clr    A          ; 1 Цикл 53
           Clr    C          ; 1 Цикл 54
           Clr    F0         ; 1 Цикл 55
           Clr    F1         ; 1 Цикл 56
           Cpl    A          ; 1 Цикл 57
           Cpl    C          ; 1 Цикл 58
           Cpl    F0         ; 1 Цикл 59
           Cpl    F1         ; 1 Цикл 60
           Da     A          ; 1 Цикл 61
           Dec    A          ; 1 Цикл 62
           Dec    R0         ; 1 Цикл 63
           Dec    R1         ; 1 Цикл 64
           Dec    R2         ; 1 Цикл 65
           Dec    R3         ; 1 Цикл 66
           Dec    R4         ; 1 Цикл 67
           Dec    R5         ; 1 Цикл 68
           Dec    R6         ; 1 Цикл 69
           Dec    R7         ; 1 Цикл 70
           Dis    I          ; 1 Цикл 71
           Dis    Tcnti      ; 1 Цикл 72

;           En     I          ; 1 Цикл 73
           En     Tcnti      ; 1 Цикл 74
           In     A, P1      ; 2 Цикла 76
           In     A, P2      ; 2 Цикла 78
           Inc    A          ; 1 Цикл 79
           Inc    R0         ; 1 Цикл 80
           Inc    R1         ; 1 Цикл 81
           Inc    R2         ; 1 Цикл 82
           Inc    R3         ; 1 Цикл 83
           Inc    R4         ; 1 Цикл 84
           Inc    R5         ; 1 Цикл 85
           Inc    R6         ; 1 Цикл 86
           Inc    R7         ; 1 Цикл 87
           Inc    @R0        ; 1 Цикл 88
           Inc    @R1        ; 1 Цикл 89
           Ins    A, Bus     ; 2 Цикла 91

           Mov    A, Psw     ;1 Цикл 92
           Mov    A, R0      ;1 Цикл 93
           Mov    A, R1      ;1 Цикл 94
           Mov    A, R2      ;1 Цикл 95
           Mov    A, R3      ;1 Цикл 96
           Mov    A, R4      ;1 Цикл 97
           Mov    A, R5      ;1 Цикл 98
           Mov    A, R6      ;1 Цикл 99
           Mov    A, R7      ;1 Цикл 100
           Mov    A, @R0     ;1 Цикл 101
           Mov    A, @R1     ;1 Цикл 102
           Mov    A, T       ;1 Цикл 103
           Mov    Psw, A     ;1 Цикл 104
           Mov    R0, A      ;1 Цикл 105
           Mov    R1, A      ;1 Цикл 106
           Mov    R2, A      ;1 Цикл 107
           Mov    R3, A      ;1 Цикл 108
           Mov    R4, A      ;1 Цикл 109
           Mov    R5, A      ;1 Цикл 110
           Mov    R6, A      ;1 Цикл 111
           Mov    R7, A      ;1 Цикл 112

           Mov    R0, #0     ;2 Цикла 114
           Mov    R1, #0     ;2 Цикла 116
           Mov    R2, #0     ;2 Цикла 118
           Mov    R3, #0     ;2 Цикла 120
           Mov    R4, #0     ;2 Цикла 122
           Mov    R5, #0     ;2 Цикла 124
           Mov    R6, #0     ;2 Цикла 126
           Mov    R7, #0     ;2 Цикла 128

           Mov    @R0, A     ;1 Цикл 129
           Mov    @R1, A     ;1 Цикл 130

           Mov    @R0, #0    ;2 Цикл 132
           Mov    @R1, #0    ;2 Цикл 134

           Mov    T, A       ;1 Цикл 135
           Movd   A, P4      ;2 Цикла 137
           Movd   A, P5      ;2 Цикла 139
           Movd   A, P6      ;2 Цикла 141
           Movd   A, P7      ;2 Цикла 143

           Movd   P4, A      ;2 Цикла 145
           Movd   P5, A      ;2 Цикла 147
           Movd   P6, A      ;2 Цикла 149
           Movd   P7, A      ;2 Цикла 151

           Movp   A, @A      ;2 Цикла 153
           Movp3  A, @A      ;2 Цикла 155
           Movx   A, @R0     ;2 Цикла 157
           Movx   A, @R1     ;2 Цикла 159
           Movx   @R0, A     ;2 Цикла 161
           Movx   @R1, A     ;2 Цикла 163


           Orl    A, R0      ;1 Цикл 164
           Orl    A, R1      ;1 Цикл 165
           Orl    A, R2      ;1 Цикл 166
           Orl    A, R3      ;1 Цикл 167
           Orl    A, R4      ;1 Цикл 168
           Orl    A, R5      ;1 Цикл 169
           Orl    A, R6      ;1 Цикл 170
           Orl    A, R7      ;1 Цикл 171

           Orl    A, @R0     ;1 Цикл 172
           Orl    A, @R1     ;1 Цикл 173

           Orl    A, #0      ;2 Цикла 175

           Orl    Bus, #0    ;2 Цикла 177
           Orl    P1, #0     ;2 Цикла 179
           Orl    P2, #0     ;2 Цикла 181

           Orld   P4, A      ;2 Цикла 183
           Orld   P5, A      ;2 Цикла 185
           Orld   P6, A      ;2 Цикла 187
           Orld   P7, A      ;2 Цикла 189

           Outl   Bus, A     ;2 Цикла 191
           Outl   P1, A      ;2 Цикла 193
           Outl   P2, A      ;2 Цикла 195

           Rl     A          ;1 Цикл 196
           Rlc    A          ;1 Цикл 197
           Rr     A          ;1 Цикл 198
           Rrc    A          ;1 Цикл 199
           Sel    Mb1        ;1 Цикл 200
           Sel    Mb0        ;1 Цикл 201
           Sel    Rb0        ;1 Цикл 202
           Sel    Rb1        ;1 Цикл 203
           Strt   T          ;1 Цикл 204
           Stop   Tcnt       ;1 Цикл 205
           Swap   A          ;1 Цикл 206
           Xch    A, R0      ;1 Цикл 207
           Xch    A, R1      ;1 Цикл 208
           Xch    A, R2      ;1 Цикл 209
           Xch    A, R3      ;1 Цикл 210
           Xch    A, R4      ;1 Цикл 211
           Xch    A, R5      ;1 Цикл 212
           Xch    A, R6      ;1 Цикл 213
           Xch    A, R7      ;1 Цикл 214
           Xch    A, @R0     ;1 Цикл 215
           Xch    A, @R1     ;1 Цикл 216
           Xchd   A, @R0     ;1 Цикл 217
           Xchd   A, @R1     ;1 Цикл 218

           Xrl    A, R0      ;1 Цикл 219
           Xrl    A, R1      ;1 Цикл 220
           Xrl    A, R2      ;1 Цикл 221
           Xrl    A, R3      ;1 Цикл 222
           Xrl    A, R4      ;1 Цикл 223
           Xrl    A, R5      ;1 Цикл 224
           Xrl    A, R6      ;1 Цикл 225
           Xrl    A, R7      ;1 Цикл 226
           Xrl    A, @R0     ;1 Цикл 227
           Xrl    A, @R1     ;1 Цикл 228
           Xrl    A, #0      ;2 Цикла 230

           Mov    A, 0ffh

; 230 циклов = 575 mks 
; DONE

           End





; Таблица для табличного умножения
; Располагается в третьей странице внутреннего ПЗУ

Org        300h   

           Db     0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
           Db     0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
           Db     0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30
           Db     0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45
           Db     0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60
           Db     0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75
           Db     0, 6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72, 78, 84, 90
           Db     0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 91, 98, 105
           Db     0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120
           Db     0, 9, 18, 27, 36, 45, 54, 63, 72, 81, 90, 99, 108, 117, 126, 135
           Db     0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150
           Db     0, 11, 22, 33, 44, 55, 66, 77, 88, 99, 110, 121, 132, 143, 154, 165
           Db     0, 12, 24, 36, 48, 60, 72, 84, 96, 108, 120, 132, 144, 156, 168, 180
           Db     0, 13, 26, 39, 52, 65, 78, 91, 104, 117, 130, 143, 156, 169, 182, 195
           Db     0, 14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168, 182, 196, 210
           Db     0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225

           Db     0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210, 225


Org 0FF0h

Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop
Nop



