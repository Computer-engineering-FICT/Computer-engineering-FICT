HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
}
TREE
{
	symbol_rezerv::(0,0):(0): symbol_rezerv.gdf
	{
		output1xxx::(0,0):(200): output1xxx.gdf;
		output0xxx::(0,0):(201): output0xxx.gdf;
		output1xxx::(0,0):(199): output1xxx.gdf;
		output0xxx::(0,0):(198): output0xxx.gdf;
		bit1011::(0,0):(197): bit1011.gdf;
		bit1011::(0,0):(196): bit1011.gdf;
		bit1010::(0,0):(194): bit1010.gdf;
		bit1010::(0,0):(193): bit1010.gdf;
		bit1001::(0,0):(192): bit1001.gdf;
		bit1001::(0,0):(190): bit1001.gdf;
		bit1000::(0,0):(189): bit1000.gdf;
		bit1000::(0,0):(187): bit1000.gdf;
		bit0111::(0,0):(186): bit0111.gdf;
		bit0111::(0,0):(185): bit0111.gdf;
		bit0110::(0,0):(184): bit0110.gdf;
		bit0110::(0,0):(183): bit0110.gdf;
		bit0101::(0,0):(182): bit0101.gdf;
		bit0101::(0,0):(180): bit0101.gdf;
		bit0100::(0,0):(179): bit0100.gdf;
		bit0100::(0,0):(178): bit0100.gdf;
		bit0011::(0,0):(177): bit0011.gdf;
		bit0011::(0,0):(176): bit0011.gdf;
		bit0010::(0,0):(175): bit0010.gdf;
		bit0010::(0,0):(174): bit0010.gdf;
		bit0001::(0,0):(173): bit0001.gdf;
		bit0001::(0,0):(172): bit0001.gdf;
		fm_trigger::(0,0):(10): fm_trigger.gdf;
		fm_trigger::(0,0):(141): fm_trigger.gdf;
		fm_trigger::(0,0):(144): fm_trigger.gdf;
		fm_trigger::(0,0):(147): fm_trigger.gdf;
		fm_trigger::(0,0):(159): fm_trigger.gdf;
		fm_trigger::(0,0):(158): fm_trigger.gdf;
		fm_trigger::(0,0):(157): fm_trigger.gdf;
		fm_trigger::(0,0):(156): fm_trigger.gdf;
		fm_trigger::(0,0):(171): fm_trigger.gdf;
		fm_trigger::(0,0):(170): fm_trigger.gdf;
		fm_trigger::(0,0):(169): fm_trigger.gdf;
		fm_trigger::(0,0):(168): fm_trigger.gdf;
		bit0000::(0,0):(204): bit0000.gdf;
		bit0000::(0,0):(205): bit0000.gdf;
	}
}
