' Copyright (C) 1988-2001 Altera Corporation
' Any megafunction design, and related net list (encrypted or decrypted),
' support information, device programming or simulation file, and any other
' associated documentation or information provided by Altera or a partner
' under Altera's Megafunction Partnership Program may be used only to
' program PLD devices (but not masked PLD devices) from Altera.  Any other
' use of such megafunction design, net list, support information, device
' programming or simulation file, or any other related documentation or
' information is prohibited for any other purpose, including, but not
' limited to modification, reverse engineering, de-compiling, or use with
' any other silicon devices, unless such use is explicitly licensed under
' a separate agreement with Altera or a megafunction partner.  Title to
' the intellectual property, including patents, copyrights, trademarks,
' trade secrets, or maskworks, embodied in any such megafunction design,
' net list, support information, device programming or simulation file, or
' any other related documentation or information provided by Altera or a
' megafunction partner, remains with Altera, the megafunction partner, or
' their respective licensors.  No other licenses, including any licenses
' needed under any third party's intellectual property, are provided herein.

'Device #1: EPM9320 - c:\univer\circuits\pma_schemlab5\pma_schem5\lsm.pof Tue Dec 01 01:32:27 2009

NOTE "CREATOR" "Altera Jam/STAPL Composer Version 10.1 06/12/2001";
NOTE "DATE" "2009/12/01";
NOTE "DEVICE" "EPM9320";
NOTE "FILE" "lsm.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "093200DD";
NOTE "CHECKSUM" "005F220D";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A23, A24, A25, A43";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "12";
ACTION PROGRAM = PR_INIT_PROGRAM, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED, DO_SECURE OPTIONAL,
DO_READ_UES OPTIONAL,
PR_EXECUTE;
ACTION BLANKCHECK = PR_INIT_BLANKCHECK, PR_EXECUTE;
ACTION VERIFY = PR_INIT_VERIFY,
DO_READ_UES OPTIONAL,
PR_EXECUTE;
ACTION ERASE = PR_INIT_ERASE, PR_EXECUTE;
ACTION READ_UES = PR_INIT_READ_UES, PR_EXECUTE;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
INTEGER A12[1] = 8;
INTEGER A59[1] = 504;
INTEGER A60[1] = 1;
INTEGER A61[1] = 154271965;
INTEGER A13[1] = 6;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
BOOLEAN A23[245208] = @
xU700u@@@t@@@l@@t@f1D3oO866_@@zFZX@_@@AK8s4q@@@dCCfq3@@@UhT3@@z@
ZBgaa1Vl@@_@V@lE3y@@t7eFuxz_VKPeNDm@l@l@z@V@t@@_V@@3A3Q43UI6YsAs
CIUN6gv4Qz7ER3_v4I@PAXXq@OmV@@RiqWIu3PJ32KCa7a8BPmZpWw83P99y@@V7
egm@@VV4y1U@t@Dt7q@@VtOb85mW@U@N@@z@_@@xJLI4FOOMzGcE1@x@_nQIgA6u
@@@tx@_@WjYXe7tTLqxzUR@@xtzU@l@x@U@lt@wz_@jtx@lLPW@@@T@_l@dD9u@@
VNl@xVW73_z_@zt@@x_@@pxzUFlt@Tz@l@xN9KLmWt@zVVlt@wzU@jtx@w@lttx@
_F@txVz@@tdX6iFaGXe1Ul@xzzU@7fbW@x@_723y@x@w_@tt@@V@Mr3_@@trxzUR
ltxrzUld@xz_A03_0CmxzV@7G2ktx@w1Ue2G1ltxzyVltV3am@lthxzU@Q13y@@@
F8OW@xzUU@t@wz_lBDCmx@V@id1s@zVpIC8un0x@Ulktx@21Jm@@@hx@VF@@@z__
ltpICuUAXia4ECIm_@thxz_V@txzXC9u_lthvmWaX4MFCGl@xj@Ult@Z4I6amVlt
RaX1__@trxzUVFHIAxFXCCijKHFW7v1ma_erXHQsxzVz@txjGPGGM2_lt@FRCmU@
tlxzUVlt@zJN6OltxV3AXU03S@t@7abWz@@tEE3uzUlht@zFcpWv7FknCu3uXjF6
u_ltV@I2BFamzU@ltxz@@D6SMpWv7O4anWF0FCsnWmS9y603xz@@@RI8lYPP96hX
pOB3AhoWofC_@ao@bS_Vaq@XiIs@@@RK0K2VVLHSvC1OEF5omHGcjBuRdEiHuY6i
u0Rn4_W@@@Xb8n8Z2LIPyA@@_@1MgY@p@@Mc4jNJ6kpq0@3_@n1YH98XalPEMw@s
x_OluIKyyqDcOn3@@@1rgAXW@@@JEAAjLOEODg_R2S0Z7y@1@tKI23m_G8i9e@@@
t@@@RJjCqVx3jQymZiQbYh1E@@@Bqni_7wwZ86g9wXSMsm@@1@0n6qEQ2F4lXlqR
@xN2PYc0@5QilWzezM3MOsWOSCuUv4Cu@@l0G1X9@psEjSjLx9Q@W@@W@A0Ku3W4
wU_X8lKfGRF_03ZxW9n@@_VNsdO@@v@AyJyr@@F_TEEz@@txkB@@@D_x@@lPcajB
un@@dNTHAMvHu_E@vzy@@thU2xlJbtl5@cy9n@@Vl@@jV@@l@k_v@z@@@xVy@tls
@@l_9uVR@VWCFyvz@dnF9yIlxT_@@u_@@_xU9y@@@vxzJFSVCy@@jRtx@l7VIy@Z
@xVnpp@zt@aw6ais3MZ@@z_v@t@l4_@@hXf@xB@@VlXU3U@F4@@zl_VT@xCqWyrP
OkCFy@lghh@V2@@@R@WNvt@FEM26go@4@@uz3xDJi4dq@l1_@V_Vxl5p@t@NmLHW
aRu@FdABILyFdwdSy@7W9qIqDw@@6tB@@VUyUu@tu@zWn6BzdXK9n@t@l@nVBzxJ
@9vfb5MzV@a@@_@PsTu@@Nol7_@zFz@y@dBg1_7@@RG@A@@lNqxtshCLB@s@@_@@
@zz@@KGM2I_@@JBCAVkx__@@@zl6@x@@@t@@5cw@@@ouNoin_lFz@7@Vw@_Vs_z@
FxRsU@tlcz@g_9eDRptvlz7Rps@dzDW_z@D@9x@pzVmpsylt_@V@@@@@PoWVk_@B
SPmV_dl@@@Flt@@uyzVvt@SUOQ5ncQW@@@Jp@x@lVoWVscDt@@@_@Vzr@@@x@x@t
@djPw@Iu@3@oVqIkM@U8vTzp_Q8wj_NVP9g_N@_@V@@6u7_rtwFulh@VTl_@@_@@
@z3@NHKL3t@@@l7_@mkuImH@@d_@@QVq@Vk_JDq@3_dHg1_@Fw7Kb1@Vwl_vm@z7
supwFVtd_NfFV@JMVu@XicWFu@H_@FwD@PW@@@V@5V@_J@@pzd1rVz@_@H@TmLUF
_l1_r@@h@t9@@d@u@D@RulB@@@hA_@@3av@w5ge@VmO_FVPn@@Fqd@dG_1@l_Vz@
36l@@7Hz@@9RNwznRu@FdZ@@@Q@@Kvr@@t@KawwvCW@@@_jy4oO_1@@@v_@Vlxvs
6T@@@h9UY@@@p_tXn@@Vl@@@Nh@@@h9oGxw9qFl4_V@FzVV@t@FC_@p@zyF@lceA
_@yyx@V6@@xk9QRWD_@__@nG@@xV@@CuX@@l@V6yxz@t@l7_qx@yVv@tHk7_d@Dj
t@@t@V5_@@crx@@NDd7_@@vzlnwV2U2V_NX@@VpPytm@@@dzV_@7wFn@lM@syLu@
@@p@@JS@@Ou@@4lGPIy@@@wlYykMl4y@@@nR_dFrwey@@zr@F3_lMyx@t6@VZ@Fz
k1zl@@nUbm@@xlz@@@BfRn9@@V@@Ou@Fj9_VRoRqW_@DmwZLVEcNP_@@Vl1CA639
@@Qn_@D@Z9Ikxyd9ce0B02C@@@lY@@@Rjk8@l@xJXNX@@@Fo@@@_@l@FUtWYsJm@
z@Vaz8v@@Nmg@@zqp5LWv@z@@c3tuVt@@@_zVtw@tWLVaew_4y@@@SmT2PFzW@@@
dd@VmV@a@q_Fu@@@ZVxSVxv@KR@6z0QW@ZrxY_Je_T6y@@xF2K511@mMyFC2e1z@
dW@@hN@w@@_@@zz@w@lwZ7z@xX@t@lQzXH@@vVo@6u@tz@kSFy@@lx@z@N_@lh@x
@7@@@_tXVY@@@NvU@zPEKH@@L8tF@d_@@l7@lN@@pzFzgY@@t@_tDm@@R_H_XO@l
vtz@Rk@z_7w@z@w@_x3Uz4@@@JzFQm2@au@lktx@_l@@@F@Vt@Mt@tsO73@@@tSh
v@hRd1_@@xxJXnVjya5B3_w@TT@t@t@lJ_@th9tz@Vc13_@6ZZVCd5znmVwrVl_C
ethzF_HyyFHzJ@x@lwVCyF_@tYxFz@RWkt@@zz0xoJFy_@@@zb118pZ@@RE_d@@z
@ZX@vVgy_LPgL6MxNB_@jv_y@@x@lBw@@@_1e@3f6iu4fA1V6AyV6@x_tcwEiloi
bvoXn@@Rh@@@Tv_@@B3qbwVZtb8I8G@Gypr_zl_C_VD_zol7r@F6_V@tJc@aFBbe
xV6y@VVtBz6I@@@dZN84r@@z@lXR_v@imv9sE3yFwlwIxqFiTCy@VUk7iGUp@Vv@
ZUUp76_@xzCxzru@@7s@@@lzU@U@i@UM@_VSs@@t@l1_t@zyU@txx@UNl@@l@@@V
@xFN_ztxPs@@xt@@U_V3ux_@xlxVNl@@j@ZzV@@@_wVV@d@t0@@tlR0oWFx@twnD
G@@@6x@vQ@@cztWpW@x_R_@@x__kwJLt0@@V@o_@@Z@F1w@zlktRzzz@_hFk_t@H
@Fz@VVtxz@z@BXN@jFykS@_s@@z@@@AA_@tt@M1_@l@u7Dm@@@d_R@MFxVR_@slv
@@@x@@@J@t2klH@V@@@N9jQW@@VSz@@n_@Vxz@RNuxzkNtDyl7@@x_@Dm@qTV@@C
O_@_Nf@@lt@sF@xzp_lb@vzptxq@hD_H3y@@VuzN@tlu@6_@UlhxDmtx@J0xCet@
tsRlth7@tOto@VUlttzxz@5c8L9pjT8rxvVh@FyVCq@@7x@@Ri@@7YEt0@@@@g@l
dl@l2@Nx@z@BX@@FfoSzOv@Aaxl@VvlA7TkX@@xV@@lV9fNX@_xV@R@@1wN1@s_@
Pvbmx_@Vz@R8dw@@UiAyty@t@l1_V@xkQ@awwPOal4y@V@V9S2_zn@RVd1d@@@Bm
Na@@FVl_@@cx@@3BM2Dtx@DQ1pgcOuVp@FEu4yl@V7yF3FSMHOxRSv36_t@zzxlk
7cV25kcmrk6iy63vvNa@@d@9i6RCVpIRCa0z@n@dhlzx@@z@dnV@@S@@9u@@NrN@
aVLH@q@V8y_@l7Llbaz8PJx7y@r@FnRK_@tlzrV_lsE3y@_@J@@4@pf_PuMa@@tU
@@tuz@7Y@@UtWYpn@@lg@x@z_@9nlktVm@su@y@t@l@VnjXu@@7tV@@@My94WCCU
@@@zx@Jw@BiwnoGQI73@@@n_@jQnUZ@Pizk6Z@Vaw7tB@lL5_lx@zF_@2Y@@t@@u
l@@@XZeC0@@@l@@nVNhA_6@x@z@Z@xu@@t@@@l@NyV@Hn@_@@nz@Nyx@h@rNy@2n
@@@wzDWz@@xt@Cu@@Nq@@Zl@@xVz@@@gz@_z@rFw30Wl@V3y@NyxJ@@du@5l00u@
5LDe@V6yF00w@@@700_2@luQU@@@_7y1U3mWP@Vm@@Eh_zV3w@@tCq@@DR__x@@d
Lj_@3zR@V@@tx_@@@zV@jnsyFtR@Phiz@V@@@@_lVKL@tyZ@@@tV@@R@_9uz@VcD
@@cV@@F@@ThRZRW@@@N@@VFHRmW@DyV@V@@_x@i9y@@R3VKp@@l1@l@V@@jvH3QW
V@@@QxVmRu@V2kCORs_t@V@ltHj@_@DmPR_@X@IuoxRZzhXl@NM3_@@zIo_@v@zL
n_@msx@@lB6xV@@@lu@TVjrx@vVVtd@@@l@@@Ny7gi_dykz@@lu@B@t@@@l@@VMr
@@P_@xxy@VVgxv_NtFsldz@h_@DmVyVTr@Fuo@@J_@@d@@@V@Xw@_@@@TvlzwUt@
jNV3q@x@hVsVXzRltZkLet@_MVjthdzNCXw@@U7tszxzlRt@@VPM9y@izY_@@tTz
Vj@@@Uz@pM_Vz_z@P@n@@xdt@@VQs6SgV2_@l@zrx@R@p_t@V@Vd@6uFt_t@VFl@
@@V@VtOu@o@zt@vsSl1_z@@xkd1@@dnUs@tz@@kAuX@tiPylh@VMPSzx_xPyV@t0
@@tx_t@@j@_zuU6@t@@@l@@hFsV6@f@dW@tpO@@@@spuVzxtVv@@onHx@yNzR49P
2_@_@@lbaXmVxwgMwzE1@@@z0@@@xucX1zPudR6gr@1@3_@zpZ1@V@t4eJm@@@5z
s@@AzdPnULcYEdwnFiS1C6QtWYpmOzXPgPq6@Vm@_@@@tDqW6fCBaX3RllYG6se_
8UAsnWgCFPbE3ozt0@@3_dX1SwLmq@lD_z@@h17Z00P8TU3q@@@79_3zDZX@@Fu_
@RvnNFkyEg@nZQiK3MiscTaI89CIy@Vsvy@@@CO3yV@tlx@61jjHyEAkQwdrCxHG
6I4om37QoGjlFO@@@VOJ6YG2iTpv9QaYMSYjWCg8f6F2PuXPM0hQ0aQ@VfKGQC8Z
tkL_@Qf@VMx@Z5@@Nr@lL_yzUltpxzUVRV36QsWccPe7W4s2G2txzUUltxvzU@lA
0671unZ@Kv@@xrzUld@@@UUlt@wzUlN0eWb2Ou3W7wBWXq2U8tWAoIOis4Imz_lt
70FuzUltt@zkUltRxz_lk@@zyVl@FmW1sxzVT@txLk03kt@zzUltxxzVVB03Slt@
bCG5n3KHK0e4Am9B5aGf19ul@xj706y@x@U513f5OGU0CuV@tpxz@FltxTzU@t76
8NU5cbmX1wzV@pIG2tx@@5TOW_@tV@@_lLFaGm394uX1wz@lztxzcbG2_z_@hKWX
dEIm@z_F@tx@WCCmz_ld@xz_a1Cu2@4I6mWlCImtx@Vz@9aCW4pX_mA89a_GNH6K
XUltV@zVlk@x@APF1@@@l_txzw@t0@U@t7EoWU@tVx@Ul_@@zZbm0@U@tdaNX@xz
V_l@@_@VlpI81U@@@P9WK@@Umx@@VeVRspl2@@l@@2RMT@ya_RE7ovKimUKpm3FU
pmrWyC9k1NuDvB44_ti4He_smo2vxx_Z@@@F@x@VVtVkpcRWxVzVl@@Ry@@tzl@@
xx@@t@@rl@l@VzVlhwd@VT@@@x_@@t@t@hz@@Rz@@@_s@Nz@@@x@V_ty@@l@h@@Y
kJmt@@lt@zV@@xV_@@@zl@@wV@xllR3y@z@FUj1_VV@z@@@xht@xHT3y@@lwz@@t
_@@l@l@tvYDmt@@k@@z@erDm@@ll@p@V@@@y_@@@T_@@x@d@t@@_f@@@V@y@@_@F
@z@x@Z@@@U803ux@@F4W1ZdRWV_@Vt@d@H@RGX06u@@_tv@@@4qUyTE3j6OmZuF4
YE6_@@xNEW1@@z@bwRW@_@_iuDe113SU@Rvt@TV8032MFXDvJm@x@zJ294ul1i@@
@j@@@x@@tENU3y@@@x_V@guv4y@x@xVvVliV3yV@@x@@xt@@zjx@z@QwJm@@tl@@
t@dnroypFlx@@V@@VxwlT_Zbd4@ztV_x@@z@@Wvl@_B303I18XNw3H@ztF_@@V@@
@y6V_vJfNE@@VRssssi@@lx@Vxp@@sc@ljD@@Rx__ssiz@@x@xRpssssV0@qzx@H
uhb@@xR_@ss@lNX@@RR@tss9@xX@@RRssssijjjPRR@ps_@dj@@FRx@R__@th0O0
RRRx2@7p@s_djj@@_@Pm@_sclzz@_@Fnt@tVM9Lq@F9_k@@7KAgimF9tPCIFtW9W
LfXU9YPFdfyJ8CVIyt@@dkF6XiSrRsmysU5LkVouxLKQk7zc@GF_Fu@V@t@t@V4s
gS@j4RuRG11dqh_jlZa0@@RR_@ts_@jjz@VRxtssEf43Ox@@dwl7ijljvVRRpst_
FZU6yRVRxstsdljlTo8FCG@@1yxKZC9ORR@tts_ljj@VRRx@stsswbnWWQguFWVw
@d10;

BOOLEAN A24[214488] = @
xY600u@t@t@@@l@@@V@@@l_@@@z@V@xl@@N@@@VR2_@@@z@F@x@@@t@V@@h7y@@V
wj@Ft@@@X@@@T@xUl__p@YqWfCm@@zlV@@T@@@l_x@t3z1@_t@_Rz@y@Vlxtt_tl
@zl@T@Rz@@V_@@@zr@@x@@ltt@@a@@@VT_@@_@p@zdstw@t@tN@@h@_@V@@w@Pr0
t@l__@x@tc1zD11MSDYnZ@fsw@3j@@tSt18s_@Q@@d62HJLqzl5h_VfmR@NFrbzE
@@_@00W0000400W20000000100G0m04W@4GGH84B_bQh_BWUxVpS5WOw@hzF01Au
OYX50ecL10900mCk2Gc0Cq06WIu@@10000G2GG4WG8OGo8HKK1D0HJgaD0AaU0G1
00eQrbrS0W601yV@@@@_7e@zFG@3I0_t@@@FWn7G@1000000yB00uN0Up@00000u
77yt@Ri4_7m@p39IR9A19I2a49GAa0PGw@Vu@zO@l3_VEw@tmcr9KYnX6a2yXaWF
yM3F@@@zF6yufmXl_4AGv35GJOC86HHJO2Q5F35Q0I8LLDOEI236gOKoCH1GPeIK
JJm8A0Al5ko@@xVH6Iy@l@7581@@@sVIIOHY4X2Om_@@VyWS2AyW@@xV@@@q@M3y
CJ2jOkAk36ViVujK27iDmx@@VKWA25eIK0K25apCv3xCDZ@_@@lQaCKt0l@@_3xD
m_@_txj7y_@Vx@@@EK06Ria8UGBVw4wnF36K8dEFEfcXb6yP3@N@@v4QWl@_@fVI
mV@@@rXFKVu3B5PGKBvut@@t@n@VeBEDoaM528qoBCKzo6y@z@zz@@xxV@FA06kX
PZG1y8U0L250cxioiThJQyqWi72H@@tl@@@F@t@xjS9X@@@Fx@x@X2CJK0ei3M2t
Jvn2IsKA66_ts@x6ZaAmaeeiDwBZ4@@x@DdHI0J6uy@@FMDIMaYalFE9yWMUTHk8
Jbp@@h@UgXu@@dtlt@VbNaug@@lyBIy@N@x@@d@n8Ry_@ptzQ5_N_@FUZ1@@VuFV
bW9@@@XOnmN@xil@x@3@Um@@@STSFO@x_d@tzl@V@V@tz@71pWt@@@9nOm@@_l@z
@Et@@@_@Vll4_XMmOm@@lh@@t@fXD0@@@@4n6ur@@t@lz@oCIu@@_p@p@l@x_@2Z
Dm@p@l@@@J@@x@_Vl@JDE1@lBzlZPGe06u@@@FN33yc@@7j03_@@@u@@@d@d1n2d
Wn@@V@@jtd0_W@_w@7pC8Wu7g2wXCzg8TF3YbuaB2bOV13_QEXJ4C8MYA2NcXeaD
8MYAY2GYR_8vTlD_Tx1@@V@_@@VdQ_XW5VeJGCy@z@x@@pFgh7IS8XWgVePf7y@@
u@Uy@ZrHIEeJk0Q5rWUY@@Fz2Daef2I6@43@l_@pWIIe0Iuz@@dkl@@ysXu@T@t@
@_L83Xu@@jt@@ZVsbUSuk1yz@@rxR@F_T8_Ns@zVkFz1A9rq8X@3z@Hn3nV@zVZa
6Kqf7RGQWx_t@Ol8n@t_VFaXe@@_t@@_Z@z_V@@VzHX5Y@_@xWC8nx@yVm8L4aF3
w@t@z@p@x@l@@tIFy@@@w@@@jHV36_P3@dzzwz@NzVUvv@@rJ_@@l@N@Vjz@@_V_
@z@@tv@@@o@zxl@@_V@_@@_@V@zl@@xr7pd@@@lgp@V@@Vz_@t@zz@p@MX1Sr@@z
@@lxVl_t@@@FVRtV@@@@_rt@zVr@x@@@Nz@xxl59u@N@d@@@ld@@B@@@@_F@_rx@
@x@@xp@@ht_56SkZ1n3OmAe6ut@@t@@lht@zVx@@h_v@@Vzt0@xt@pncGUeCuyll
p@x@ktl@V@@_p_@@sz@@xxVx@Nl@@lz_lR@@@R_lz@dsr0@znus_@@S@Fhw@VVtV
@@l_@@NK@szNXQWt_@V@X@xfqQW@@hOJ5t@Mxcr4@@@Ijb_t@jlkVJ_Ds@Vj_@@z
SNN@xhtw7x@Vl@@zV@@@VkRlfz@E7hzp@tlltc@@lT@@xqUp_@jx@@Rl@xFU03Sz
@@x@@@tVL7lu@@7NrNyy@Nrqtx@7AW1_V@@z@Utf@@@oRzpk@l_@hK2vZcAgv@1T
@@@xrHY@hz@bx8n@@VRCEF483@z@RW@@y@_@9n@@tMehdOj@@F_LIy@E@7wp@JId
W@@v@fL9n@@dR@@Xi4i1XtGYl@@@EZE9e0Isp_d4jb8n0Iw@F1nz@@z@JI5DUu@@
@t@@@ubvIKsj4_@@@yp@@x@N@lUnGy@t@x@@@p@@RtPx9Od@@VAS925m0@@@@DiO
GspRirH27mpmyuOqKk1NnRW@_@@XobOZy4MJC1@@x@bWKHuy6icO23qRGbvIu@l@
t@@twQzCCJV5zfRWM@@@m32fKU9y@7@7Lc4_@t@z@@fMYV8_@@tNGZ1@@@j_@@tF
htWQ_Umt@tl@xx@_@PmxN@V@@6asZ1fldW_@llE_Pm@l@xT@Iu@@Vq@z@VAU6461
9Vwpmhy6u@t@lRN6gwpWh3Jm@l@@Y864Jl1plbmPuFi1e1bsbGeuCSBk4_@k@x@t
WI0Pm@@VS@@94fZ4nFyW@V@V@d@@NjxX@lxV@@@zzAPmfxL4KZ1zpaWh@@@X7nuV
V3k@Cad_J8D@Dy@V@FTg1HpxnY_Cux@@VOG6Ya43@V@@dCQGFvOqyk11qQWV@@@G
fCOvo7sxtWeB3PO9Iyl@@x@@tEx@GYdq0x_@@Ld5oJDd4JqLJuYHCH1sPZAfyhot
4USqEC7yJoK_6Gx@@@HyJ2Jaal99PeV3ctMY0oJmw@@U@@6u_x_t@v@l@z@@etCO
oo@Rw6oVvJe5UFy@@@58Z1V_pmmgFK_l1_Z@lxkrWvwDuzV6q@@@x@V@lyV3y@Vz
h_@@t@N_VOz94hQ27sRm3@6u@@@J@l@l@t@6@t@@zrRmisI4Wd1_l@Zz@@fxt@xV
rdGS@@@dgl1pwBntJCO@p@t@j@l@@xV@@tyT_7Y@_@@nPhu1yDU7EX@wnm@l@Vt_
Fu@@pDQ69k6N2t_@@1c9X@lzVz@@tNvpWzT@V@@wxwx@@7icXc@D8RT3w@t0@@j@
_@@tzUt@7Ik4huBXzV@@Tp3n@__@ElLu@_@@z66y@__x@@@tx@@xmsFu@@tlj96y
@@Mxt@@N@@VTso6KiE3M@@px@d1tVw@N_RW@lz@6pVmz@tVyeCu@@RrVzzVw@FK2
N8w@@@z@t@x@k@ltTFgGsWMqDGJ@@@txUiRB9A@@@xctWVzzuSU3wOtWniD8_nAU
Ys0d_@@nFYnW_9yUk1xVbGyZOu@u@t@@Vl@@tdE_V8_nASz@@NR7CnQdmI_Uu@@j
lYyJgkWXtNtm@s@@ozFig99@m6Ie0XyV@3_@t@VQTZhyJOf_Dq@@@x@f@VpU6YY7
Ze0O8Yz7Q_tWYzFn@Tz@X@ai7l1VPHIj@BLhu9nJZHKwI4Vn3bE_Je0gazl4iz@@
RSlY_wVm@Z_l@@tZrg3f_39Al63l_@@rauHsk9yZ19hyR0__@@Xh3X@@@l@R@@uw
bOfx7y@u@x@@PhsU9UO@X1HC8kQISx@@x@N_l5yD6WFaLyaeLw4yly@7pC6_x@@3
8FXjzb8mV6_AvXedtOe_4y@_@72D64z@@n@Z@NcC3X_M1@@@V@lT@XjdW_@@@wZg
m@Uhe@@Vto@Je79Cy@@Vpr@@Nkj@Vu1XuV@@VuF6C@@tw@_@tztzl@@@U@@Vx_@@
zylz@xx@@tU@dl@@@DVt_@x@pmky9O@@@FIN3yVz_x@@ttk@Vtz@6u@@us_u@lt_
VFu@@lWQl@z@@Xxt6Vpt@Vl@@@VZz@@Sm@kv@@llfX1sT@VzV@@xsV_t@@Vl@@@z
efDmt@@VWx6mx@@VmR3y@cxxt@xt@tiJbx9Wl@@UtR3i@@_pVk@t@t@F@@@V@@Vt
_l@@z@N@9@@@dQ@dl@@VT@t_@HSQWx_@VOXV@y@@xzli@x@@@pdzll@VvVviR__z
tyS@@@v@VvsR@@lv@@V@@le_@@@nm@@dKl1_@y@Tt@@xt@lNr@@lll@Vf@@@s@Vv
zV@@x@v_NN@@lN_ljefJm@n@lz_@DnVzlKxjvzV@hxtaVZz@@Rqq94Nj1_@@@TV@
px@zUtxt@l@V@D@@Vx_@@jzlz@xt@@Fkw4sWx@Ggvy@u7wIp0@t@@o@@@RuD1@d@
@xo@Gg@Rul@@@lK3y@v@Npl1_@k@7NtWWGJu9v4yt@@x@@VlmV3gOUZe0UueNC25
8X56tOF@7EpF1l@@z_@tttqlYNzJGl@@l@x_@pknelN6y@@Rx@V@FiT3UxtWCUVm
7@@@oh64vr6_@@zZwEXe6V8PQ3QUFazaDe@U3y@@zx@N@d_@@@be6C4F3H1yWV@@
zDyDm_@@@sLLacV2U@@@29Z4@@_@_@@BBf7ZBVIuOI6yVl@7s_3l6dW@tzV@z@hP
uRW@@FlYtV8Qw4suEXz@DuHN6onN2@hx@ntinPzpyW49LC6IK0eSgVN5wbGW_UCd
09_@l@Z5xX_@df2N3Q1dXlkVOdx4yw@@@JK5Le@mQxLq2F3bkRGTmLqzU5v4oGfw
mq7@3_@@rx8lYGMb8JV32UKYUwVm@j_l@t@@DsVml@@@NnOis_3XnYn7w9aZd13Y
_me4Oaej1ZdBHu_6uzy@Vqw7gd8dpsDusZJy@_@x@@twwFFg2FXguDe4F3AzN2@x
@@RoRGSw64Yf170kHibCu@t_V_@DYIsWWsVmvVVd@@zFzV@F_@zk5@@jx@@tt@My
ly@@VxzVt_7VqyVx@x_@bt@@@l@@u4R@@Vk@dLTp@lxlu@N@@_Fg@t2@@@@_Vdlr
t@u3DyRs@@zFv@@V@@tOoOY@ztz@xiR_rxV5l@R@N@ErRiu@_z@@xuxk@7_ezlc@
@@e0CmVxjj@@xU@@_z_zz@4@@lxtVlsRVyl@@@V@_z@_7Vyz@t@7FW1_xwvT@@@x
@@ctF@_k@Z@Vz@@lo@DBEEt0z@F_Gh@s3Am0@@VdEl@@j@dl8N@@dUl@k@@VT@p_
@P@RWx_@VVzF@13RW@@@F_ll@_F@@Tk@@xtgFtN@@lw@zNlz@@_y@@z@wlljk1U@
@ly@@@xVVVd@@llVUrN@@VrU@h@zVz@pt@@t@@_l@@VT@z@h_t@@z@n@xh@@t@@N
fph@Vx@rBYrd@ftxlx@_Nt@e@VuL9uhtulX03y@@@xtttt@@TbV@z@a@D8eR3_XK
2@Nxxg@@@ztlroZ@rp@X@l_N@Vg@l4_@@@z@Stf_@n2A_oc@@_Vo_@@_@FFDk_@x
lx@Xk@@hY@xB@@Rz_bptw@t0hFw@UzVEAZt0@@@VsTzTz@VtxtV_UaN3y@lUvjz@
t@@@lx@@F@@@lyzl@Rot0@Vvvk@@@z@Fpwd@VFpS3W@@MV9l1w@V@v6@j7Bc1_@l
xj@y@xlx@tz@yh@@xV@t_@_TxtO@@@7tL2Q@@xx@t0h@zF_@zFj@V@x@tt_hf4K@
@@NcV2BpdW@@FVVV_@w@@@T_y@x@@@t@@@Y@@yV@tl@y@@yb@xtxl@@ty@@l@@@O
NVt@o@fpCVF@x@ZZt@v@l@p@V6yVd_@@yuVq@3VqwJv@@V056O@ztr@hTbr@xV@_
@Qk@@@z@lVvj@_tj@@l@@VU@l@__u@@Jwt0@lzz_z@tzqUxvx@@@SV3qt@xx@x@t
@t@lP@@V@snVXXRpnbX450678IILv5DHQ51b_WU@@V@x@@_l_@z@@_Ncl1lpRmwk
6qtV2_@t@z@@_x@txFeKIY7mZePImV_@@hnI4ZgA5YhL9yKbFF9_t@@z@z@luV2H
oQmf@6u@@_p_@@@UcX49KEdvYH52f52FUB1NnD_6u@@zlUJ62P8XFxDuB83Eq@XG
1y8A0K25Oc92n_MT62omWDuDml@_@PzCul@@EKWPY20b2QzuUWJ_5HenPnuhaeAs
FX9i2n@@@lt@_V@@@@_r@@@xtWZ5Vuvx46QualwDeFQIEsN2@@xtLY_l@@@@WCC8
aX4S@@@r@l1k@_@dLuaUL6hA4mQ8fhG6iP5U3oXFXG6CO_MlxuOc1FmB83pEV8y9
d@Fow@Vy_@6p@Vnz@JiFG@@F0y7V@v@@0m@@1W@00W@@@V@3000u@@trN2@7m128
00yV00u@0_t@00000u@y0g000020004G1WCI009000W2I042000m103q0W1P0m04
0040500GM00080001KO0400GL0LaMG5G10G0Ku0WT900a000iGX1o2000u@KSG81
9y@Rd4@7f@@7BemWi_@@@J6GYe0CGOHzlzNuVJ_@@G5N68r@@x@@Jr3X4SU0Fu@@
@t@@@yyx9agk1zvMnswIu@l@FYV9_Yt0F@@@Q@@@FQF1@@@tXzhIixFm@@@FmkA6
0@1@@@tkxF@z@@_h@@@M@v_@jg6ur@Vt@lvl@V@V_@@t_@@@zN@@x_@xtzksF_@z
_l_Dmz@kl@@kV@@@ty@r@z@@@xd@dldL3Eot0@@@t_@@tzx@@xt@_lyG3uV@@Nml
1k@@@Vvt0xx@@_@@ly_V@7_k1_@rtFwt0t@x@w@@@z@@VdRi1j@RW@t@Vv@@@_V_
@@yt0F@@@_zp@pxt0@v@@U@V_z@t@B@@@t@pxxG09u@F@t@@@Z@@@U@v@@7@RGX0
6ul@Fl3qGcvcXqPDeFz7cr63@V@@B7mGq36u@@@p@t@l@z@@vzDm_@Vk_twN@x_x
Nvdmj_6qUV2s@x@VI81@@@l_@Vxtyt0@lztZ_RW@@@U@_r@H_dWt@@Vo@k@budW@
x@V@zzzDzdW@@xV@t@@_t@@RQxA@@@ycV_xz@@@x@sxNxy@@8xaul@_p@@@l@1xF
@ztVP0OGA09CSV8wlV_z@@@x@v7typ@@Gzov@sscjjjl@V@V@st@_jj@TRR@xts@
sjjjj@@@Vttssijj@@3udh1@FfNjytt_xjjzl@@Ayts@hjj@l@VFytssgjjjLRRR
hs_tMz@lj_@VRr@t_w@ljT503_38ayXBYj@jDx@@@w@PWljzTkxOiRl41HBHM96y
bA9n@RGnqvScAFb_Nn@_6im@9vsYHMYvqdS2jUVoHVLqcvRpClHpjICQx9ntYHam
d4Pl1bL_WV@@Vt@@@PchIOwFank1v2lNpuZv@@jDZ43qss_xljztVR@lts_V@jzl
3bOWssss9H2HVRxlsssMlzl@vKpW_s_MljllQVRx@kz@euro@@lzOC9ms@@cj@lD
x@VRs_@_DoaGIzUy7mF_@@@1;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[29] =
23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[29] =
16,3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[29] =
18,3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[29] =
0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[29] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[29] =
0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[15] =
294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[5 * 3 * 28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0,1025, 4, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 2, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
129, 10, 98, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 97, 1, 0, 97, 0, 2, 96, 0, 1, 96,
0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0, 98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[800];
BOOLEAN A28[791];
BOOLEAN A31[1600];
BOOLEAN A57[1600];
BOOLEAN A45[1600];
BOOLEAN A29[1600];
BOOLEAN A30[1600];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
INTEGER V3 = 0;
INTEGER V4 = 32;
BOOLEAN b;
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A18[21];
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
ENDDATA;
PROCEDURE PR_INIT_PROGRAM USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_SECURE USES TEMP_DATA;
V107 = 1;
V106 = 1;
ENDPROC;
PROCEDURE DO_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_INIT_BLANKCHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE PR_INIT_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE PR_INIT_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_INIT_ERASE USES TEMP_DATA;
V102 = 1;
ENDPROC;
PROCEDURE PR_EXECUTE USES DEVICE_DATA, TEMP_DATA, L6, L26,
L96,
L132, L81, L68, L94,
L257,
L41, L35, L21;
CALL L6;
V3 = 0;
V4 = 2;
CALL L26;
IF (V2 == 0) THEN GOTO L456;
IF (V42 == 0) THEN CALL L132;
IF ((V42 == 0) && V102) THEN CALL L81;
IF ((V42 == 0) && V100) THEN CALL L96;
IF ((V42 == 0) && V103) THEN CALL L68;
IF ((V42 == 0) && V108) THEN CALL L94;
IF ((V42 == 0) && V107) THEN CALL L257;
L456:
IF ((V42 == 0) && V104) THEN CALL L41;
CALL L21;
EXIT V42;
ENDPROC;
PROCEDURE L6 USES DEVICE_DATA, TEMP_DATA, L30, L276, L32;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L463;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L7;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L7:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L8;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L9;
L8:
l = l + 1;
L9:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L10;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L10:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L11;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L11:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L12;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L12:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L13;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L13:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L14;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L15;
L14:
l = l + 1;
L15:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L16;
V2 = A12[i];
j = A0[V2];
L16:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L17;
V2 = A12[i];
j = A0[V2];
L17:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L18;
V2 = A12[i];
j = A0[V2];
L18:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L19;
V2 = A12[i];
j = A0[V2];
L19:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L20;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L20:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L457;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L457:
NEXT i;
CALL L30;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF (V101) THEN CALL L32;
IF (V42 != 0) THEN GOTO L463;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L458;
A18[9..0] = $071;
CALL L276;
WAIT 10000 USEC;
L458:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L459;
A18[9..0] = $332;
CALL L276;
WAIT 10000 USEC;
L459:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L460;
A18[9..0] = $044;
CALL L276;
WAIT 10000 USEC;
L460:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L463;
A18[9..0] = $065;
CALL L276;
WAIT 1000 USEC;
A18[9..0] = $044;
V91 = V103 || V102;
CALL L276;
V91 = 0;
IF (!V103 && !V102) THEN GOTO L462;
k = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L461;
A31[k] = 0;
A57[k] = 1;
k = k + 1;
A31[k] = 1;
A57[k] = 1;
L461:
k = k + 1;
NEXT i;
DRSCAN k, A29[(k - 1)..0], COMPARE A31[(k - 1)..0],
A57[(k - 1)..0], V40;
IF (!V40) THEN V42 = 10;
L462:
WAIT 10000 USEC;
L463:
ENDPROC;
PROCEDURE L21 USES DEVICE_DATA, TEMP_DATA, L31, L276, L32, L35
;
IF (V42 == 1) THEN GOTO L25;
CALL L31;
IF (!V76) THEN GOTO L22;
A18[9..0] = $003;
V4 = 32;
CALL L276;
L22:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L23;
A18[9..0] = $079;
CALL L276;
WAIT 10000 USEC;
L23:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L24;
A18[9..0] = $006;
CALL L276;
L24:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L25;
A18[9..0] = $04A;
CALL L276;
WAIT 10000 USEC;
L25:
IF (!V76) THEN GOTO L454;
V80 = 0;
CALL L32;
IF (V42 != 0) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L455;
L454:
A18[9..0] = $3FF;
CALL L276;
IF (V105) THEN CALL L35;
L455:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF (V42 == 10) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF (V42 == 10) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
ENDPROC;
PROCEDURE L26 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L27;
V2 = 0;
V3 = 0;
GOTO L29;
L27:
V2 = A12[j - 1];
V3 = j;
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048))
THEN GOTO L29;
IF (V58) THEN GOTO L28;
A41[9..0] = $066;
GOTO L29;
L28:
A41[9..0] = $006;
L29:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L30 USES DEVICE_DATA, TEMP_DATA, L31
, L272
;
CALL L31;
IF (V32 == 0) THEN CALL L272;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L31 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L32 USES DEVICE_DATA, TEMP_DATA, L31;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L31;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[9..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & 32) != 0) THEN
A18[9..0] = $006;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L33;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L34;
L33:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L34:
V27 = V27 + 1;
NEXT i;
V27 = 0;
FOR i = 0 TO V1;
IF(A61[i] != 0) THEN GOTO L349;
IF(A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
NEXT i;
GOTO L348;
L349:
V145 = 0;
FOR j = 0 TO 31;
IF(A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
V27 = V27 + 32;
IF(A61[i] != V145) THEN
V42 = 6;
NEXT i;
L348:
ENDPROC;
PROCEDURE L35 USES DEVICE_DATA, TEMP_DATA, L31, L276, L39;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L36;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 2048) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L35_4;
j = V84;
k = V84;
L36:
CALL L31;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L37;
A18[9..0] = $006;
CALL L276;
WAIT 10000 USEC;
L37:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L38;
A18[9..0] = $04A;
CALL L276;
WAIT 10000 USEC;
L38:
A18[9..0] = $3FF;
CALL L276;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (V4 != 0) THEN CALL L39;
POP k; POP j; POP i;
NEXT i;
L35_4:
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA, L276, L40;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
CALL L276;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
if (!(((V4 == 512) || (V4 == 2048)) && V103)) THEN
CALL L40;
ENDPROC;
PROCEDURE L40 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L41 USES DEVICE_DATA, TEMP_DATA, L31
, L47
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L43;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L44;
L42:
j = V84;
k = V84;
L43:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V86 = 0;
IF (((A17[V1 - V84] & 2) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L47;
POP k; POP j; POP i;
NEXT i;
L44:
ENDPROC;
PROCEDURE L47 USES DEVICE_DATA, TEMP_DATA, L222, L194, L50;
V4 = 2;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 2) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] & ~4;
NEXT i;
V2 = A12[j];
L48:
V11 = 4114;
CALL L222;
V49 = 1;
CALL L194;
k = 0;
FOR i = 2 TO 20;
IF ((i == 8) || (i == 9) || (i == 16)) THEN GOTO L49;
V27 = V24 - 1 - i - V84;
IF (A31[V27]) THEN V86 = V86 | (1 << k);
k = k + 1;
L49:
NEXT i;
CALL L50;
ENDPROC;
PROCEDURE L50 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L68 USES DEVICE_DATA, TEMP_DATA, L30, L222, L247, L31;
PRINT "programming 9K device(s)...";
CALL L30;
FOR V11 = 1035 TO 1196;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L222;
CALL L247;
CALL L31;
NEXT V11;
V49 = 1;
FOR V11 = 4097 TO 4114;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 4869 TO 4886;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 8965 TO 8982;
CALL L222;
CALL L247;
NEXT V11;
ENDPROC;
PROCEDURE L69 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = A40[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V38 * 1000) USEC;
IF (V58) THEN GOTO L70;
IF (V82) THEN V83 = 20000;
A18[9..0] = $06A;
CALL L276;
V83 = 5;
A18[9..0] = $06E;
CALL L276;
L70:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L71 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V37 * 100) USEC;
IF (V58) THEN GOTO L72;
A18[9..0] = $06E;
CALL L276;
L72:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L81 USES DEVICE_DATA, TEMP_DATA, L276, L69;
A18[9..0] = $392;
CALL L276;
A18[9..0] = $01E;
CALL L276;
DRSCAN V17, A30[(V17 - 1)..0];
CALL L69;
A18[9..0] = $01E;
CALL L276;
DRSCAN V17, A29[(V17 - 1)..0];
ENDPROC;
PROCEDURE L94 USES DEVICE_DATA, TEMP_DATA, L30, L222, L194, L31;
IF (V74) THEN PRINT "blank checking 9K device(s)...";
IF (!V74) THEN PRINT "verifying 9K device(s)...";
CALL L30;
FOR V11 = 1035 TO 1196;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 1196;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L222;
CALL L194;
CALL L31;
IF (V42 != 0) THEN V11 = 2074;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 4097 TO 4113;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 4113;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V45 = 1;
V11 = 4114;
CALL L222;
CALL L194;
V45 = 0;
IF (V42 != 0) THEN GOTO L95;
FOR V11 = 4869 TO 4886;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 4886;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 8210;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
FOR V11 = 8965 TO 8982;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 8982;
NEXT V11;
L95:
ENDPROC;
PROCEDURE L96 USES DEVICE_DATA, TEMP_DATA
, L94
;
V74 = 1;
IF (V4 == 2) THEN CALL L94;
V74 = 0;
ENDPROC;
PROCEDURE L132 USES DEVICE_DATA, TEMP_DATA, L30, L222, L194, L290;
CALL L30;
V37 = 100;
V38 = 100;
V29 = 1;
V11 = 8192;
CALL L222;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L133;
CALL L194;
GOTO L134;
L133:
CALL L290;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L134:
V30 = V24 - 1;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L152;
V2 = A12[i];
V30 = V30 - (A4[V2] - 1);
FOR j = 0 TO 14;
INTEGER V70 = 0;
A16[j] = 0;
V27 = 0;
IF (j > 7) THEN GOTO L135;
V27 = j * 8;
V70 = 8;
L135:
IF (j != 8) THEN GOTO L136;
V27 = 64;
V70 = 5;
L136:
IF (j != 9) THEN GOTO L137;
V27 = 69;
V70 = 3;
L137:
IF (j != 10) THEN GOTO L138;
V27 = 72;
V70 = 3;
L138:
IF (j != 11) THEN GOTO L139;
V27 = 75;
V70 = 5;
L139:
IF (j != 12) THEN GOTO L140;
V27 = 80;
V70 = 3;
L140:
IF (j != 13) THEN GOTO L141;
V27 = 83;
V70 = 5;
L141:
IF (j != 14) THEN GOTO L142;
V27 = 88;
V70 = 1;
L142:
FOR k = 0 TO (V70 - 1);
INTEGER V71 = 0;
l = 0;
IF (V2 != 8) THEN GOTO L143;
IF ((k + V27) >= 57) THEN V71 = 1;
IF ((k + V27) >= 83) THEN V71 = 3;
L143:
IF (V2 != 9) THEN GOTO L144;
IF ((k + V27) >= 65) THEN V71 = 1;
L144:
IF (V2 != 10) THEN GOTO L145;
IF ((k + V27) >= 73) THEN V71 = 1;
L145:
IF (V2 != 11) THEN GOTO L146;
IF ((k + V27) >= 81) THEN V71 = 1;
L146:
l = 3 * (k + V27 + V71);
IF (USE_FIXED_ALGORITHM) THEN GOTO L147;
IF (A31[l + V30]) THEN
A16[j] = A16[j] | (1 << ((V70 - 1) - k));
GOTO L148;
L147:
IF ((A55[j << 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A31[l + V30] = 1;
IF ((A55[(j << 1) + 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A57[l + V30] = 1;
L148:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A55[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L149;
PUSH i;
CALL L194;
POP i;
IF (V39) THEN V42 = 6;
L149:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L152;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[8] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 100;
V73 = 100;
IF ((A17[i] & 64) == 0) THEN
GOTO L150;
V72 = 300;
V73 = 100;
L150:
IF (((V36 & 24) == 8) || ((V36 & 24) == 16)) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1]) ||
(((A17[i] & 64) != 0) && (j != 1))) THEN
GOTO L151;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L151;
V72 = A14[A16[11] & 31];
V73 = A15[A16[10] & 7];
A48[i] = A48[i] | 64;
L151:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L152:
V30 = V30 - 1;
NEXT i;
ENDPROC;
PROCEDURE L188 USES DEVICE_DATA, TEMP_DATA, L276
;
A18[9..0] = A19[9..0];
A18[19..10] = A19[19..10];
A18[20] = 1;
IF (V57) THEN GOTO L189;
CALL L276;
GOTO L190;
L189:
V57 = 0;
CALL L276;
V57 = 1;
L190:
A18[20] = 0;
WAIT 15 USEC;
A18[9..0] = A20[9..0];
CALL L276;
IF (V34 == 0) THEN GOTO L191;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L193;
L191:
IF (V74) THEN GOTO L192;
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A24[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L193;
L192:
DRSCAN V24, A29[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L193:
IF (!V40) THEN V39 = 1;
ENDPROC;
PROCEDURE L194 USES DEVICE_DATA, TEMP_DATA, L290, L276, L188, L305;
V39 = 0;
V40 = 1;
IF (V49) THEN CALL L290;
IF (V34 == 1) THEN GOTO L195;
V30 = V15;
V31 = V30 + (V24 - 1);
GOTO L196;
L195:
V30 = 0;
V31 = V24 - 1;
L196:
V28 = 0;
IF ((V10 & 64512) == 1024) THEN GOTO L197;
IF ((V10 & 64512) == 2048) THEN GOTO L204;
GOTO L207;
L197:
IF (V29 == 0) THEN
A19[9..0] = $042;
IF (V29 == 0) THEN
A19[19..10] = $042;
IF (V29 == 1) THEN
A19[9..0] = $03E;
IF (V29 == 1) THEN
A19[19..10] = $062;
IF (V29 == 2) THEN
A19[9..0] = $03E;
IF (V29 == 2) THEN
A19[19..10] = $03E;
V81 = 0;
IF ((V10 >= 1059) && (V10 <= 1172)) THEN
V28 = 4;
IF (V28 == 0) THEN GOTO L198;
A18[9..0] = $396;
CALL L276;
DRSCAN V22, A27[(V22 - 1)..0];
L198:
FOR i = 0 TO V28;
IF (i == V28) THEN V81 = 1;
PUSH i;
FOR j = 0 TO 4;
IF (V10 > 1172) THEN GOTO L200;
k = 10 * j;
A20[9..0] = A36[(k + 9)..k];
PUSH j;
CALL L188;
IF (V29 != 0) THEN GOTO L199;
A19[9..0] = $03E;
CALL L188;
A19[9..0] = $042;
L199:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L200:
IF (V10 < 1059) THEN GOTO L202;
k = 10 * j;
A20[9..0] = A37[(k + 9)..k];
PUSH j;
CALL L188;
IF (V29 != 0) THEN GOTO L201;
A19[9..0] = $03E;
CALL L188;
A19[9..0] = $042;
L201:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L202:
NEXT j;
IF (V81) THEN GOTO L203;
A18[9..0] = $396;
CALL L276;
POP i;
DRSCAN V22, A27[(((i + 2) * V22) - 1)..((i + 1) * V22)];
PUSH i;
L203:
POP i;
NEXT i;
GOTO L212;
L204:
IF (V29 == 0) THEN
A19[9..0] = $03A;
IF (V29 == 0) THEN
A19[19..10] = $03A;
IF (V29 == 1) THEN
A19[9..0] = $036;
IF (V29 == 1) THEN
A19[19..10] = $052;
IF (V29 == 2) THEN
A19[9..0] = $036;
IF (V29 == 2) THEN
A19[19..10] = $036;
FOR i = 0 TO (V33 - 1);
V57 = 1;
j = 10 * i;
A20[9..0] = A38[(j + 9)..j];
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L205;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L205:
NEXT j;
PUSH i;
CALL L188;
IF (V29 != 0) THEN GOTO L206;
A19[9..0] = $036;
V57 = 1;
CALL L188;
A19[9..0] = $03A;
L206:
POP i;
V30 = V30 + V24;
V31 = V31 + V24;
NEXT i;
GOTO L212;
L207:
IF (V29 == 0) THEN
A19[9..0] = $04A;
IF (V29 == 0) THEN
A19[19..10] = $04A;
IF (V29 == 1) THEN
A19[9..0] = $046;
IF (V29 == 1) THEN
A19[19..10] = $05E;
IF (V29 == 2) THEN
A19[9..0] = $046;
IF (V29 == 2) THEN
A19[19..10] = $046;
IF ((V10 & 64512) == 4096) THEN
A20[9..0] = $032;
IF ((V10 & 64512) == 8192) THEN
A20[9..0] = $02E;
IF (V10 != 8192) THEN GOTO L208;
A18[9..0] = $04E;
CALL L276;
L208:
IF (!V45) THEN GOTO L209;
b = 0;
CALL L305;
L209:
CALL L188;
IF (V29 != 0) THEN GOTO L210;
A19[9..0] = $046;
CALL L188;
A19[9..0] = $04A;
L210:
IF (!V45) THEN GOTO L211;
b = 1;
CALL L305;
L211:
V30 = V30 + V24;
V31 = V31 + V24;
L212:
V15 = V30;
IF (!V39 || (V34 == 1)) THEN
GOTO L213;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L213:
ENDPROC;
PROCEDURE L222 USES DEVICE_DATA, TEMP_DATA, L276;
V31 = 0;
A18[9..0] = $01E;
CALL L276;
IF ((V11 == 1035) || ((V11 & 64512) == 1024)) THEN GOTO L226;
IF ((V11 == 2069) || ((V11 & 64512) == 2048)) THEN GOTO L229;
IF ((V11 == 4097) || (V11 == 4869) || ((V11 & 64512) == 4096)) THEN GOTO L232;
IF ((V11 == 8192) || (V11 == 8193) || (V11 == 8965) || ((V11 & 64512) == 8192)) THEN GOTO L235;
IF (V11 == 0) THEN GOTO L223;
L223:
i = V11;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L224;
V31 = V31 + 790;
A28[V31 - i] = 1;
L224:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L225;
V31 = V31 + 790;
A28[V31 - i] = 0;
L225:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L226:
i = V11 - 1035;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L227;
V31 = V31 + 790;
A28[V31 - 619 - i] = 1;
A28[V31 - 467 - i] = 1;
A28[V31 - 315 - i] = 1;
A28[V31 - 163 - i] = 1;
A28[V31 - 11 - i] = 1;
L227:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L228;
V31 = V31 + 790;
A28[V31 - 619 - i] = 0;
A28[V31 - 467 - i] = 0;
A28[V31 - 315 - i] = 0;
A28[V31 - 163 - i] = 0;
A28[V31 - 11 - i] = 0;
L228:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L229:
i = V11 - 2069;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L230;
V31 = V31 + 790;
A28[V31 - 765 - i] = 1;
A28[V31 - 629 - i] = 1;
A28[V31 - 613 - i] = 1;
A28[V31 - 477 - i] = 1;
A28[V31 - 461 - i] = 1;
A28[V31 - 325 - i] = 1;
A28[V31 - 309 - i] = 1;
A28[V31 - 173 - i] = 1;
A28[V31 - 157 - i] = 1;
A28[V31 - 21 - i] = 1;
L230:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L231;
V31 = V31 + 790;
A28[V31 - 765 - i] = 0;
A28[V31 - 629 - i] = 0;
A28[V31 - 613 - i] = 0;
A28[V31 - 477 - i] = 0;
A28[V31 - 461 - i] = 0;
A28[V31 - 325 - i] = 0;
A28[V31 - 309 - i] = 0;
A28[V31 - 173 - i] = 0;
A28[V31 - 157 - i] = 0;
A28[V31 - 21 - i] = 0;
L231:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L232:
i = V11 - 4097;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L233;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L233:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L234;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L234:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L235:
IF (V11 == 8192) THEN GOTO L238;
i = V11 - 8193;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L236;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L236:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L237;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L237:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L238:
DRSCAN V17, A28[(V17 - 1)..0];
L239:
A18[9..0] = $392;
CALL L276;
V10 = V11;
ENDPROC;
PROCEDURE L247 USES DEVICE_DATA, TEMP_DATA, L290, L71, L276;
V30 = V14;
IF (V49) THEN CALL L290;
V31 = V30 + (V23 - 1);
IF ((V10 & 64512) == 0) THEN GOTO L248;
IF ((V10 & 64512) == 1024) THEN GOTO L249;
IF ((V10 & 64512) == 2048) THEN GOTO L251;
IF ((V10 & 64512) == 4096) THEN GOTO L253;
IF ((V10 & 64512) == 8192) THEN GOTO L254;
L248:
CALL L71;
GOTO L256;
L249:
IF (V10 > 1172) THEN GOTO L250;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A34[(j + 9)..j];
PUSH i;
CALL L276;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L71;
L250:
IF (V10 < 1059) THEN GOTO L256;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A35[(j + 9)..j];
PUSH i;
CALL L276;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L71;
GOTO L256;
L251:
FOR i = 0 TO (V33 - 1);
j = 10 * i;
A18[9..0] = A38[(j + 9)..j];
V57 = 1;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L252;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L252:
NEXT j;
PUSH i;
CALL L276;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L71;
POP i;
NEXT i;
GOTO L256;
L253:
A20[9..0] = $032;
GOTO L255;
L254:
A20[9..0] = $02E;
L255:
A18[9..0] = A20[9..0];
CALL L276;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L71;
L256:
V14 = V30;
ENDPROC;
PROCEDURE L257 USES DEVICE_DATA, TEMP_DATA, L30, L287, L276
, L222, L247
;
IF (V107 == 0) THEN GOTO L271;
CALL L30;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L258;
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L258:
NEXT i;
IF (!V106 && (V75 == 0)) THEN
GOTO L271;
IF (V106 && (V75 == 0)) THEN
GOTO L263;
V11 = 0;
CALL L222;
CALL L247;
L263:
IF (!V106) THEN GOTO L271;
IF (V4 == 1) THEN
A18[9..0] = $03E;
IF ((V4 == 2) || (V4 == 256)) THEN
A18[9..0] = $3FF;
CALL L276;
CALL L30;
V75 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L266;
IF ((A17[i] & 16) != 0) THEN GOTO L264;
A17[i] = A17[i] | 16;
GOTO L265;
L264:
A17[i] = A17[i] & ~16;
L265:
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L266:
NEXT i;
IF (V75 == 0) THEN GOTO L271;
V11 = 0;
CALL L222;
CALL L247;
L271:
V75 = 0;
ENDPROC;
PROCEDURE L272 USES DEVICE_DATA, TEMP_DATA
, L275
;
IF (V4 == 2) THEN CALL L275;
ENDPROC;
PROCEDURE L275 USES DEVICE_DATA, TEMP_DATA;
V32 = 8983;
ENDPROC;
PROCEDURE L276 USES DEVICE_DATA, TEMP_DATA;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L277;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L277;
V27 = 50;
A32[49..0] = A30[49..0];
L277:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L278;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L280;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L281;
L278:
IF ((A17[i] & 2) != 0) THEN GOTO L279;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L281;
L279:
IF (!V57) THEN GOTO L280;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L281;
L280:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
L281:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L282;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L282:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L283;
STATE IDLE;
WAIT 3 CYCLES;
L283:
ENDPROC;
PROCEDURE L287 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L288;
V2 = A12[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L289;
L288:
IF (V74) THEN A30[V24] = 0;
L289:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L290 USES DEVICE_DATA, TEMP_DATA, L293, L294, L295, L296;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L291;
V2 = A12[i];
IF (((V10 >= 1035) && (V10 <= 1197)) ||
(V10 == 0)) THEN
CALL L293;
IF ((V10 >= 2069) && (V10 <= 2074)) THEN
CALL L294;
IF (((V10 >= 4097) && (V10 <= 4114)) ||
((V10 >= 4869) && (V10 <= 4886))) THEN
CALL L295;
IF (((V10 >= 8192) && (V10 <= 8210)) ||
((V10 >= 8965) && (V10 <= 8982))) THEN
CALL L296;
GOTO L292;
L291:
IF (V74) THEN A30[V24] = 0;
L292:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L293 USES DEVICE_DATA, TEMP_DATA;
V25 = A1[V2];
V26 = A5[V2];
ENDPROC;
PROCEDURE L294 USES DEVICE_DATA, TEMP_DATA;
V25 = A2[V2];
V26 = V25;
ENDPROC;
PROCEDURE L295 USES DEVICE_DATA, TEMP_DATA;
V25 = A3[V2];
V26 = V25;
ENDPROC;
PROCEDURE L296 USES DEVICE_DATA, TEMP_DATA;
V25 = A4[V2];
V26 = V25;
ENDPROC;
PROCEDURE L305 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L306;
V2 = A12[i];
j = j + (A3[V2] - 1);
FOR V27 = 27 TO 31;
A30[j - V27] = b;
NEXT V27;
L306:
j = j + 1;
NEXT i;
ENDPROC;
' END OF FILE
CRC 2CDB;
