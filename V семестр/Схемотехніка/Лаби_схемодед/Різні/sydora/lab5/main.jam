' Copyright (C) 1988-2000 Altera Corporation
' Any megafunction design, and related net list (encrypted or decrypted),
' support information, device programming or simulation file, and any other
' associated documentation or information provided by Altera or a partner
' under Altera's Megafunction Partnership Program may be used only to
' program PLD devices (but not masked PLD devices) from Altera.  Any other
' use of such megafunction design, net list, support information, device
' programming or simulation file, or any other related documentation or
' information is prohibited for any other purpose, including, but not
' limited to modification, reverse engineering, de-compiling, or use with
' any other silicon devices, unless such use is explicitly licensed under
' a separate agreement with Altera or a megafunction partner.  Title to
' the intellectual property, including patents, copyrights, trademarks,
' trade secrets, or maskworks, embodied in any such megafunction design,
' net list, support information, device programming or simulation file, or
' any other related documentation or information provided by Altera or a
' megafunction partner, remains with Altera, the megafunction partner, or
' their respective licensors.  No other licenses, including any licenses
' needed under any third party's intellectual property, are provided herein.

'Device #1: EPM9320 - c:\kslabs\myshem2\main.pof Thu Oct 01 21:07:18 2009

NOTE "CREATOR" "Altera Jam/STAPL Composer Version 10.0 RC6 10/5/2000";
NOTE "DATE" "2009/10/01";
NOTE "DEVICE" "EPM9320";
NOTE "FILE" "main.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "093200DD";
NOTE "CHECKSUM" "006016EE";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A23, A24, A25, A43";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "10";
ACTION PROGRAM = PR_INIT_PROGRAM, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED, DO_SECURE OPTIONAL,
DO_READ_UES OPTIONAL,
PR_EXECUTE;
ACTION BLANKCHECK = PR_INIT_BLANKCHECK, PR_EXECUTE;
ACTION VERIFY = PR_INIT_VERIFY, PR_EXECUTE;
ACTION READ_UES = PR_INIT_READ_UES, PR_EXECUTE;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
INTEGER A12[1] = 8;
INTEGER A59[1] = 504;
INTEGER A60[1] = 1;
INTEGER A61[1] = 154271965;
INTEGER A13[1] = 6;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
BOOLEAN A23[245208] = @
xU700u@@@@3q6aP86Zm6O@@@VE3_@@VZi2@@t@1RJB3fMQDYdu@ltxEPm@_lNFin
JomCyGH_mi_mV_pKpW@V@@xympv9_@_lJLL4PIuk6oAx1@@z@fK6kOFyMV8vQW@@
xV@@l@hY7wQsSxsmxz@@2eWCU5_xz_x1Rytdnx@_@2z1_l@@vLXu@@@tz@@@aa1d
86yfOGWe1s@zUTl@@d9cW@@ltX39A8OeT43@_lttY6uzU@@cu1_@@xwzU@z@xzwU
ltR1eWA05I1e8AO3txz_D26et@zt_ltx7G2wzU@h5C85D1@@UlBKCu@txFBX1@@_
lHVOutx@UTB1_l@@_@@lBJJm@xzkUltx836yxzVNQa0ltxV@@l@Z49mxz_t@@@Tu
H5Ul@xz@@lhtxzsUl@VaX1__@trxzURl@xrz@ldtxzUU@@@9fZ5oKqWGGfF25Pm6
ltxVz_@@NMCe@@@lsY1@_@@JNLuzU@V@A1t@zVbL9Ol@xzKoWWC6_PUu3uXz6Co8
amWW4UcOGi43wVKn7W7w1WHrG6yxzU7K81Ult@_@VlpTbGV16ohaMMYnwHcJ0j7I
26L1KI6RXHbmIVYwNc3FQiEMuJK7zANRv7QkSb@Vm@iolzCnC@7y@jW_V5bqxoKt
1Xsu@@x@bC6_5ugeT2q_l@V_E@7an@RPYqe5UyTnCL8GR0MivFu@Fh462pX1@W@@
hQroYKFaQ2I7dKNNP46gG5Bd9thQR4SRQrkHL7mCye395PLnwSjiY7L309H9GKTh
7LzCpGUVBjvy67bCpVOpuz@_FXQ6oqBau2Fyiu7y@p@@dD3_@@yNVscTjzmy@@@j
tCuF@@@mn@BiiQN@@@rS2i@@r@jFhsy@V@fzmmxNz@GKFy@V_FjF3@w@W@@@Frz@
@Z_7Yk@@@jxKv1FR2hI23h7yz@pWVV@@MrPm_z@@Jg5v@uFACH@yLz@NbhnVnaf@
@@FL@@@nxVY@@@ZhD@Fkv@VhMtreU8p@Sy@lrl7kAlHzGCNsqHyL_N@@tJ0C@s@@
FhpWx@V@xrVu3W7syk2@@VzFvRW@zt@RZCmr@_VY1CS2E3_@@VvV@@@gV2_h@wFs
dXF0Uu4@Jy@@lkNB3_l@tmVVRLtV2_F6@Ryd1@7@n_@@lIwl27x@u5xQWm_@R@x@
@_@@zm@@@t@l1_xu@z@@nxd@@Vqo4u@t@@xF3_tZ@@Q81@@@l_t@n3zF4@7z@f@@
GjlIu@t_Fyg@3f_@Ax@VoVHZ_8aqu@@C@@Vlw@suDRzq3ZhF@EZVOwMCAUEXhlWn
@@@TFqCy1m3PsdZz@@@_2vn@@Vl@@@jfqVm@zxjv_@@djTAzqAyw@@VyVNiVz@d@
@1@p@@z@7b@Ftx_Nbc@@lV@@UK4n3VyRJNUUu@V_F0v@h_NQ@Vu@HnkX@V__aDmG
@d@NVjjaqVKMT@@t_@X_wteHOCy@ttcU@6lAto@kFC_YAzg3ctjEF2Z_@H@ZX@@@
gZ_Pu3W7w@l5@Pz@1DrbrDidb5hOm9dy@@X7To@Bt@@gm@7gy@VI@@wsyt5j4Nua
J@@9Gz@@@_@Py@@7fk@@V8D3u@@@5iK8L58K8SL4WC39u@Z@l@V@@klz@@WEjSkg
@7p@xzQ@@9u@tN5@zzV@@9u@QzlfV6yVzNlsF6k_drx@t0b@y@_@@@z@F@ft@@lj
P3y@vvnRLpVBS6uy@@V@V2_@@vzyN@l3E3_@drx@F4@d@@d0CH@@Cuh@dsv@@@n1
9u@x@U5V6ywz@t3G2Xe@WxzxV@@@@_tF@j@V_x@@@t@_zV@@6u@t@cbz_Dx@_@S5
Pe5J6y@@@E0t3tL5oyMLulmxRbnDYE@X7EBA0P23Hxa_@3qVz@Vry9u@@@Z@@@zi
zCqYQ8_Fj@jx@_s@@3I@B@w@VZdLUeT5I6ThY3NPm@@FVPYCixw3nkGYxV@@r2Um
@@xhJx@@w@tmxt@@y@Cu@R@lcRRqcT@NqUK_@U_22N5V_@@nldP1SRSB8IXj3Ptz
Zv@@@SBXnQjHY5@1p@@zT@@2v@lVDW1mMev@_@tm@@zBz@@@0TCxxBXcEr3l5MHr
_Fc@@pm_@Jm@vll@@J@_@dn@y_V@@6u@t@q@@@l@@T_eqJuDA3w@d1l@v@TTdW@@
V7lp@@z@dW@@VdB1Ie@@My@vzt@F3S@0y5@H@t@V2Yn@722d1nVy@2_e@ZKh2tDE
l_@@@z@@WnxtzZ@@@l@wY@O9Imm@@l@Z@Z_@Jm@@ujtzl@_@Jm@NtbB_H@_@Jm@N
tdx6@@_@3Hq@@V@@FOtz@l6s4y@@_xBzdFoW4y@@v4TE3_@@yT_@17PG5_@f@DFl
@x@@@t@ovlt@pV@@@@wp@@x@t0@@xp_@@@D@7@t@V2_v@tpGd1V@tFH6mWl@x@Rm
g8o0Fy@@x@X73_FzPr@Vwt@V2_@U@x@dXDoOe@@7SFDlt@l1U@vFv@@@x@Vc_DN3
y@@@uFv@lSl7uyd_74U2_@@PqCr@t@V2_@@PqFDxt@@C_@qyhzNwg2bm@F_V@@Cu
@@ZljaSw@VZL1UmF_@VHu@V@V20@@@dW@gDBp9w_hys@@lXqm1wFppqm4eVH_p@@
MuNkRrt8WCTz@Vm7sUK_@@VRf@1zN@_RI2sFSZ5FIBzPSrk@OOm@@l6Ov6YtuzfO
O4ZS6If5@@@hkV@@x@F1@p@@NxJb@h@@GtTwkbAwbKkESBg@@@hzF7@@1@V0yG@@
@t@@@NdzVrR@FTt@H@z@dy_v@@VNltxjzUlNtxzUU@@@@0WXU0UOBW7g0GXK0Omz
_ltH0Fuz_@VC@ty@@zsNW137mm70FSi@C_zUlhFWXi4kwOX7yzUl@pG2U@t@vzVl
tr03NCuH83OuUl@xnXGg58a11QHl@xlzVltw8Ou3W7w1uXR2EP716ADGh4EUp@@x
V27Ce@x@_EX4uzU@h@x@FBXPyUl@xxz_FdQ6IWd1@t@zyU@@@0W1Vl@@1PCZ@@Ul
q76xk36qx@@tRV2_@@tzx@UF9D3_@VlNzT6@@@z__l@RI5ZT4Um@zVV8SXa9I5Pu
AnqnIKDd457EpwkCO@@@t@@lt9lIqFdS5u@v53UqqA9zuJRSk1E_Sr_@t@T@@@De
y3N@_W@@@D@hllz@RWT@@V@@@@_@_xnt_@F_F3_Jv@xOcXXYaG@@_@9nFqsi1hRd
G2_6iER2_@x@@dD1@p@lZs_W@@@VV_@zbt_G5x6S_U2_y@@zV@@x@@@Z@@@lx@@@
JSPm@@@hl@zN@@xVXtwX@xzl2ahucQ6M3F1@@@V_l@@7uKYsaVeep4Mhs0@@_@h2
ymXdFO@@@FYNFy@Qtxhx@FCx4y@@Vx_@@hlV6ylR@Nvh7r@2Jy@Fu@xlVAO3qV@z
tf59_@l@ytV@x@@@7O@zd@_xlC0C8503swF4@tV@x@RWxll_UYV86U9sldAjjzjQ
RxxrtstglllLRVVhs__MjzjjQRRR@0m0jz@@@1yJhy@twCUhV7YzzzT@xxxs@ttz
ll@V0m0D0OW@zz@O0C8DSmy@@_x@@zrx@xV@@Fuzzzt@xxV@@rv@z@t@@@xAyauz
@@VB03MwMqha_VqSRob1cKqzOmQXcZES@@xxst@tjll@RV@@pt@@t103ux@@pt@_
_G9642I8lXOWzzz@fxPm@@_k@@zz@089cx@Ryd7@ljjQRRRF0O0jjjjURRRz_ssw
zjjrxxRxA06ejjz@FWVw@F40;

BOOLEAN A24[214488] = @
xY600u@@@@3u@@@t@@_l@@VV@@@@_x@@NJetWIIqs0@@@7_@@Ny@@Vu@@@t@xyl@
@xV@@x@znW@@@N@@l@@Xnz9u@B_t@VyF@@@V@@@@_@@Ny@@Vxl@@n@@@l@@xN@z_
@_@z@RL2@o0yp@@_@@@mF@@NL6ylE@x@N@FZ6u_@Ttt@@Bm@@Vv@@@u@@@f@@@x@
@Nq@u@g@V7S00007OW6O00040e28001W@zF4@xVM@t@Qyl@@@VJ@lh_y@V0C00G2
00mh00WF000000z0mLe1GC0@WIu@@1OKOO3Q8PO0800mKKXy100y300q70000080
0e01013E00u@3O000m@000000@0uVu1Gy@@l@1u@3O0@3m@_@@@Dm@0uX@T00@@@
ABHUKn_6oHOa61Fbm7y@z@x@@@t@@@TZWdMJWT47NUguz@@FXbGfouPeXz@@z@0S
mnpIH1e4A0rlK815d4JRGKeAH1e4A0LaPBBcXFBAvpYR4LqWPTlvxl@@otC_@w@l
RYHhpDkszVGc@RPAKMpby@t@V@y@ZLOux@@jdD6_V@@z@@@x_@@DQh1_zl@35qIK
0K25ypKOCg__SdU9cNXKbIOoCGrbLOKwbSw@@@t7qW2imurG9sGpW9S2fKBykxnZ
Hy29vDyi@@@lxd4_@x@dbCXzvsuxB5VmCXFr2PoG3ErZmEUsOGnAc_qW2pcPlH3M
Pq3@@_@_@@lZUqWe029Ij@pja@8oYAsieQPieG1WQWaDEMDX2ECOQo7_hZXEGDm@
v@VNhFu@@R@vE3YfqWpMDm@@t_SS85K061bcm4cLuVx@VjEIy@@qNXr3dzX1x@@V
@@r@n88HW2Cq9i1H1aGbnRu@@ZFAW7YMDaDSJuf03_LKk8O@CgsnY8kY4LbuLrAo
MjYG1E90recU6l0K@Fur@x7UZKJI8xx7y@@FNU26PwQpbuF4WC6xNRGy0BLfz971
FJKt9e_@@@1W3y@@tltj1nFQmnZ6yYU5TIRGZ@6u@@@r@@xRyt6ut@@t@r@@3064
A031HQWz@@VR@@@puka@@@d4uPeRM6u@@@72733ORW@v@V@@@xPzRWl@@V@@@cJx
QmT09u@v_FAW4yw@@Jl@@FHU3iz@yw@@@tt@_l@__V@@@@_@VR3Co0y@@@_ly@zl
_@x@@hEsV3u_@@x@l@q@@yzHc6aZx6_@@lz@@@TKl1HvYNGlu5UrdXK@VtuCdn_@
pn@Vix@ll_@fa3MRug7ew9H1WIe0Gv@t@t@@N@9m64P53DX9H0yOicF3NcN1l_@V
@@@@_@@mtGt0U@@@13pJhz9uV@@t@@@NDjKTal71Pbmm_OKuf1FlRWF_@@_@Ho@w
@VthpFbjDJLhYF@@@QzhOYL3ESdXxxVem4r7@trjMVuPz4c_d1@@@_hk_mnh9aZ_
3k@@@jx@@@d_3w@@@z@@J@kF3X28HXAdqq_6HxBX_@@@uuP8_UFIhDahXDeZ@4Yv
FXW@P861CQDmchcDeivDMntW4aJu5O6y@@VB_@@FK0Iy3y@lR83h@ZX@@N_KsV8e
WAy@@@Pz@@V1RIyB_@lbD9_@Vt3BcaQxDeg@72Ke2@r_@nyJIyo6yu_@1l6UJ@@t
@@@PF@VeeFtCc7HC2vA@6yr_318BX@N@@1RPml@@@_@Lu@@d@@z46_r3x@ll15So
WamKGW1t@ZHiTFi9dA1AiH@@60@@@FEEIYasWNusOCJ9yV_@xV_@t@@hUap6mv@@
t@@lSiS6ub@VNy@@l@l@V@F@@_@@Tlhs0w@@@_z@@zlx@x@@@tx@l@z_6uTs@t@@
Vl@@@sOehm@R@F@@@V@@zl_@Fhx@tWugt8oP3yy@@NzV2lFdm_29Cbj1_@l@zVw@
x@@@RkS3IVkYEkDm@Vxl@@@VF_@@__@@Zhk2@tx@XKRWl_@V@@z@NCnG4sCitT2_
lz@z@@Vx@@lBCxDy@@@Naj1VxdGFNU4sU21X1ph0aa1yUR6Bwxz94YU2ne@mls6i
bE3pFOW@@VztsDmj@@VZx6u@@lVLT3Qtt0@pw@NwRmKjU4nU2_t_@JxdaL@J8J_4
U_FXk@D8r@4cn0Z0ubepjAkvFXy@DeW53yx@@FnY1n88X@@z@S@DG_@@l@@z@hG3
n@_@VyPXqv_3@zlHj_LKYd4_@p@NqekyihOl3UY@uaOTxAiTOM_DgrWbRS5Lyw@@
FcEInZoG2xUypR2RGwHRCHrG3UDvCPbrdC1j1lNJYV@x@rCgp@q@Vfrgy4C9Y@@@
Zua4@k_@XTIY@@VyXfDeESdy@@_w@@@tg@@l@@@V@3@@_@@@z@@ax@@@t@d@lr@@
V@@@p_@r@x8p0__@@RURGrK94cD3__@VZbjY_@nm@@htEu6uz@@t@r_l@@w@0kJW
x@@l@@_x88Cm_@@lv@@V@dx@_dz@z@@gx@@rEkB3y@@BuVy@t@@@lN@@T@z@@_@s
@z@K@x@@xFA03yw@@Jh@@FTS3iv@y6UL2_@@@Z203@lz@yz@@z@t@w@@_k@V3Or@
@7Km6__@Vyz@@x@z@FzR3YEt0@_@@pc_GWR9Cwc1__@@z_@@x@t@t@V@VAw6u@T_
7@@@@Uu9K8W1H6GY@lw@m3Iml@@Fj_@@_@DOY13YC81@@lTHBuHS39Gt@@FuXA_F
pWW7Im@@@l@@Ft8rCW_@@Fz@@@WqCmp@l@3C6uz@@t@@Vl@@tsO9E9UW4y@@bt@l
1g_@@z@@p7B1CnDOmArgVLkD_@z@z@@V7ol1nVZHK0a4AWAFXRyhPX450AHIkHXs
F4zl1n34LuzT5F0Ud@ZqO@94elGvaDpf_Ryme1BZhIiO4sry9jExHpx9q@i71anG
JqIiY@3H1WnZ_Fu@l@FVsGEf66N@@@XskKyAgibV5hz@GpxRqu@9H1WIe0GTu9gh
eQmZvX450AX20LG1dioC3w@@@3QcaMIsOAM3y@p@tplJH7PGZIKDoS5nheIGBpq@
Fy5PRGbDX450AX20LG1dq@@@z@@Vp7@lSo@9ly@nD@dKVE_@V00W@00W@100@300
0000008000022rWo@Vm@@7W@@70@@F0@qdW@70Wy0a0@0008000A100S00025m00
00Ht2OG306a1G200L000W00001e7W40100K5W4f5K10S700K900eM0g581Oy@@Q@
@@Lu@@ho@@@FV3y@@RaCW400Y@zVk@xVb@t@E_V@@9ug@@tx@@lA@@Vr_@@txRW@
@VlxqCml@@VXz9u@@@p@@_Z@@@lmWjvJ032ntWV@vvLiMy@@@w@x@tV@@UdxUuj@
rdl@@l@@@V@lx@9vRWxvR@_@PmV@fSrLUu@_@Daz7YotWXyJu9m4sxt0@@@tJydW
@@dV@_@@o@@@da@Xf_VG_V@l@@@V@@@vLpdmI_6uF@@FrV3A4W1@_zl_z@Vxv@Xw
@Vm@@txV@FS_V2tzdmm@Cul@xVDJ9cnNYT@DetV3y@@llAW4pzpW@t@@ctzm@@lc
x@w_fKPmtt@@Q@Cu@@TBAUOYbl5@@@zk@_@z@@@x@_xN@z@VKiaul@_p@@@l@1xF
@ztVP0OGA09i9P8TIQW@l@UrV@@Hc9d@RRRtsssklljTRVVxss__0W1SRRVpsssc
jzzjRRxRtss@@1yp5R@@bBU9X7Y@ttNl@llUV@Vz_@_w@@zz0W1Q0mWO0Cmxx@@s
lZntt@@yt7y@xxp@@tFQNRw@@dNrDml@@Vt_Xu@t@VBW4wFMkcE7kHSBZ@FXnPXP
WOFAMrfw5msxxxltttN@ll@_xx@F0O0@zz@_xxV7An0lll@lp7YtttV@lll5YpW@
@@Nl@@l@1SIOe@twVE_@@jPRRRV0m0ijjjPxRRpsttcjllDRVV@L0IeqTF_3u7@@
@@0;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[28] =
96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[28] =
3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[28] =
3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[28] =
32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[28] =
512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[15] =
294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[5 * 3 * 27] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0,1025, 4, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 2, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
129, 10, 98, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 97, 1, 0, 97, 0, 2, 96, 0, 1, 96,
0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0, 98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[800];
BOOLEAN A28[791];
BOOLEAN A45[791];
BOOLEAN A29[791];
BOOLEAN A30[791];
BOOLEAN A31[1600];
BOOLEAN A57[1600];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
INTEGER V3 = 0;
INTEGER V4 = 32;
BOOLEAN b;
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A18[21];
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
ENDDATA;
PROCEDURE PR_INIT_PROGRAM USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_SECURE USES TEMP_DATA;
V107 = 1;
V106 = 1;
ENDPROC;
PROCEDURE DO_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_INIT_BLANKCHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE PR_INIT_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE PR_INIT_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_EXECUTE USES DEVICE_DATA, TEMP_DATA, L6, L26,
L96,
L132, L81, L68, L94,
L257,
L41, L35, L21;
CALL L6;
V3 = 0;
V4 = 2;
CALL L26;
IF (V2 == 0) THEN GOTO L5;
IF (V42 == 0) THEN CALL L132;
IF ((V42 == 0) && V102) THEN CALL L81;
IF ((V42 == 0) && V100) THEN CALL L96;
IF ((V42 == 0) && V103) THEN CALL L68;
IF ((V42 == 0) && V108) THEN CALL L94;
IF ((V42 == 0) && V107) THEN CALL L257;
L5:
IF ((V42 == 0) && V104) THEN CALL L41;
CALL L21;
EXIT V42;
ENDPROC;
PROCEDURE L6 USES DEVICE_DATA, TEMP_DATA, L30, L276, L32;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L16;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L7;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L7:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L8;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L9;
L8:
l = l + 1;
L9:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L10;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L10:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L11;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L11:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L12;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L12:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L13;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L14;
L13:
l = l + 1;
L14:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L15;
V2 = A12[i];
j = A0[V2];
L15:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L16;
V2 = A12[i];
j = A0[V2];
L16:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L17;
V2 = A12[i];
j = A0[V2];
L17:
V17 = V17 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L18;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L18:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L19;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L19:
NEXT i;
CALL L30;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF (V101) THEN CALL L32;
IF (V42 != 0) THEN GOTO L20;
A18[9..0] = $071;
V4 = 1 | 2;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $332;
V4 = 256;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $044;
V4 = 512;
CALL L276;
WAIT 10000 USEC;
L20:
ENDPROC;
PROCEDURE L21 USES DEVICE_DATA, TEMP_DATA, L31, L276, L32, L35;
IF (V42 == 1) THEN GOTO L25;
CALL L31;
IF (!V76) THEN GOTO L22;
A18[9..0] = $003;
V4 = 32;
CALL L276;
L22:
A18[9..0] = $079;
V4 = 1 | 2;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $006;
V4 = 256;
CALL L276;
A18[9..0] = $04A;
V4 = 512;
CALL L276;
WAIT 10000 USEC;
L23:
IF (!V76) THEN GOTO L24;
V80 = 0;
CALL L32;
IF (V42 != 0) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L25;
L24:
A18[9..0] = $3FF;
CALL L276;
IF (V105) THEN CALL L35;
L25:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF (V42 == 10) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF (V42 == 10) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
ENDPROC;
PROCEDURE L26 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L27;
V2 = 0;
V3 = 0;
GOTO L29;
L27:
V2 = A12[j - 1];
V3 = j;
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512))
THEN GOTO L29;
IF (V58) THEN GOTO L28;
A41[9..0] = $066;
GOTO L29;
L28:
A41[9..0] = $006;
L29:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L30 USES DEVICE_DATA, TEMP_DATA, L31
, L272
;
CALL L31;
IF (V32 == 0) THEN CALL L272;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L31 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L32 USES DEVICE_DATA, TEMP_DATA, L31;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L31;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[9..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & 32) != 0) THEN
A18[9..0] = $006;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L33;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L34;
L33:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L34:
V27 = V27 + 1;
NEXT i;
V27 = 0;
FOR i = 0 TO V1;
IF(A61[i] != 0) THEN GOTO L32_3;
IF(A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
NEXT i;
GOTO L32_4;
L32_3:
V145 = 0;
FOR j = 0 TO 31;
IF(A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
V27 = V27 + 32;
IF(A61[i] != V145) THEN
V42 = 6;
NEXT i;
L32_4:
ENDPROC;
PROCEDURE L35 USES DEVICE_DATA, TEMP_DATA, L31, L276, L39;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L37;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L38;
L36:
j = V84;
k = V84;
L37:
CALL L31;
V4 = 256;
A18[9..0] = $006;
CALL L276;
V4 = 512;
A18[9..0] = $04A;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $3FF;
CALL L276;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (V4 != 0) THEN CALL L39;
POP k; POP j; POP i;
NEXT i;
L38:
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA, L276, L40;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 512) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
CALL L276;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L40;
ENDPROC;
PROCEDURE L40 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L41 USES DEVICE_DATA, TEMP_DATA, L31
, L47
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L43;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L44;
L42:
j = V84;
k = V84;
L43:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V86 = 0;
IF (((A17[V1 - V84] & 2) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L47;
POP k; POP j; POP i;
NEXT i;
L44:
ENDPROC;
PROCEDURE L47 USES DEVICE_DATA, TEMP_DATA, L222, L194, L50;
V4 = 2;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 2) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] & ~4;
NEXT i;
V2 = A12[j];
L48:
V11 = 4114;
CALL L222;
V49 = 1;
CALL L194;
k = 0;
FOR i = 2 TO 20;
IF ((i == 8) || (i == 9) || (i == 16)) THEN GOTO L49;
V27 = V24 - 1 - i - V84;
IF (A31[V27]) THEN V86 = V86 | (1 << k);
k = k + 1;
L49:
NEXT i;
CALL L50;
ENDPROC;
PROCEDURE L50 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L68 USES DEVICE_DATA, TEMP_DATA, L30, L222, L247, L31;
PRINT "programming 9K device(s)...";
CALL L30;
FOR V11 = 1035 TO 1196;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L222;
CALL L247;
CALL L31;
NEXT V11;
V49 = 1;
FOR V11 = 4097 TO 4114;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 4869 TO 4886;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 8965 TO 8982;
CALL L222;
CALL L247;
NEXT V11;
ENDPROC;
PROCEDURE L69 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = A40[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V38 * 1000) USEC;
IF (V58) THEN GOTO L70;
IF (V82) THEN V83 = 20000;
A18[9..0] = $06A;
CALL L276;
V83 = 5;
A18[9..0] = $06E;
CALL L276;
L70:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L71 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V37 * 100) USEC;
IF (V58) THEN GOTO L72;
A18[9..0] = $06E;
CALL L276;
L72:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L81 USES DEVICE_DATA, TEMP_DATA, L276, L69;
A18[9..0] = $392;
CALL L276;
A18[9..0] = $01E;
CALL L276;
DRSCAN V17, A30[(V17 - 1)..0];
CALL L69;
A18[9..0] = $01E;
CALL L276;
DRSCAN V17, A29[(V17 - 1)..0];
ENDPROC;
PROCEDURE L94 USES DEVICE_DATA, TEMP_DATA, L30, L222, L194, L31;
IF (V74) THEN PRINT "blank checking 9K device(s)...";
IF (!V74) THEN PRINT "verifying 9K device(s)...";
CALL L30;
FOR V11 = 1035 TO 1196;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 1196;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L222;
CALL L194;
CALL L31;
IF (V42 != 0) THEN V11 = 2074;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 4097 TO 4113;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 4113;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V45 = 1;
V11 = 4114;
CALL L222;
CALL L194;
V45 = 0;
IF (V42 != 0) THEN GOTO L95;
FOR V11 = 4869 TO 4886;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 4886;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 8210;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
FOR V11 = 8965 TO 8982;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 8982;
NEXT V11;
L95:
ENDPROC;
PROCEDURE L96 USES DEVICE_DATA, TEMP_DATA
, L94
;
V74 = 1;
IF (V4 == 2) THEN CALL L94;
V74 = 0;
ENDPROC;
PROCEDURE L132 USES DEVICE_DATA, TEMP_DATA, L30, L222, L194, L290;
CALL L30;
V37 = 100;
V38 = 100;
V29 = 1;
V11 = 8192;
CALL L222;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L133;
CALL L194;
GOTO L134;
L133:
CALL L290;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L134:
V30 = V24 - 1;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L152;
V2 = A12[i];
V30 = V30 - (A4[V2] - 1);
FOR j = 0 TO 14;
INTEGER V70 = 0;
A16[j] = 0;
V27 = 0;
IF (j > 7) THEN GOTO L135;
V27 = j * 8;
V70 = 8;
L135:
IF (j != 8) THEN GOTO L136;
V27 = 64;
V70 = 5;
L136:
IF (j != 9) THEN GOTO L137;
V27 = 69;
V70 = 3;
L137:
IF (j != 10) THEN GOTO L138;
V27 = 72;
V70 = 3;
L138:
IF (j != 11) THEN GOTO L139;
V27 = 75;
V70 = 5;
L139:
IF (j != 12) THEN GOTO L140;
V27 = 80;
V70 = 3;
L140:
IF (j != 13) THEN GOTO L141;
V27 = 83;
V70 = 5;
L141:
IF (j != 14) THEN GOTO L142;
V27 = 88;
V70 = 1;
L142:
FOR k = 0 TO (V70 - 1);
INTEGER V71 = 0;
l = 0;
IF (V2 != 8) THEN GOTO L143;
IF ((k + V27) >= 57) THEN V71 = 1;
IF ((k + V27) >= 83) THEN V71 = 3;
L143:
IF (V2 != 9) THEN GOTO L144;
IF ((k + V27) >= 65) THEN V71 = 1;
L144:
IF (V2 != 10) THEN GOTO L145;
IF ((k + V27) >= 73) THEN V71 = 1;
L145:
IF (V2 != 11) THEN GOTO L146;
IF ((k + V27) >= 81) THEN V71 = 1;
L146:
l = 3 * (k + V27 + V71);
IF (USE_FIXED_ALGORITHM) THEN GOTO L147;
IF (A31[l + V30]) THEN
A16[j] = A16[j] | (1 << ((V70 - 1) - k));
GOTO L148;
L147:
IF ((A55[j << 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A31[l + V30] = 1;
IF ((A55[(j << 1) + 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A57[l + V30] = 1;
L148:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A55[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L149;
PUSH i;
CALL L194;
POP i;
IF (V39) THEN V42 = 6;
L149:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L152;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[8] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 100;
V73 = 100;
IF ((A17[i] & 64) == 0) THEN
GOTO L150;
V72 = 300;
V73 = 100;
L150:
IF (((V36 & 24) == 8) || ((V36 & 24) == 16)) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1]) ||
(((A17[i] & 64) != 0) && (j != 1))) THEN
GOTO L151;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L151;
V72 = A14[A16[11] & 31];
V73 = A15[A16[10] & 7];
A48[i] = A48[i] | 64;
L151:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L152:
V30 = V30 - 1;
NEXT i;
ENDPROC;
PROCEDURE L188 USES DEVICE_DATA, TEMP_DATA, L276
;
A18[9..0] = A19[9..0];
A18[19..10] = A19[19..10];
A18[20] = 1;
IF (V57) THEN GOTO L189;
CALL L276;
GOTO L190;
L189:
V57 = 0;
CALL L276;
V57 = 1;
L190:
A18[20] = 0;
WAIT 15 USEC;
A18[9..0] = A20[9..0];
CALL L276;
IF (V34 == 0) THEN GOTO L191;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L193;
L191:
IF (V74) THEN GOTO L192;
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A24[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L193;
L192:
DRSCAN V24, A29[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L193:
IF (!V40) THEN V39 = 1;
ENDPROC;
PROCEDURE L194 USES DEVICE_DATA, TEMP_DATA, L290, L276, L188, L305;
V39 = 0;
V40 = 1;
IF (V49) THEN CALL L290;
IF (V34 == 1) THEN GOTO L195;
V30 = V15;
V31 = V30 + (V24 - 1);
GOTO L196;
L195:
V30 = 0;
V31 = V24 - 1;
L196:
V28 = 0;
IF ((V10 & 64512) == 1024) THEN GOTO L197;
IF ((V10 & 64512) == 2048) THEN GOTO L204;
GOTO L207;
L197:
IF (V29 == 0) THEN
A19[9..0] = $042;
IF (V29 == 0) THEN
A19[19..10] = $042;
IF (V29 == 1) THEN
A19[9..0] = $03E;
IF (V29 == 1) THEN
A19[19..10] = $062;
IF (V29 == 2) THEN
A19[9..0] = $03E;
IF (V29 == 2) THEN
A19[19..10] = $03E;
V81 = 0;
IF ((V10 >= 1059) && (V10 <= 1172)) THEN
V28 = 4;
IF (V28 == 0) THEN GOTO L198;
A18[9..0] = $396;
CALL L276;
DRSCAN V22, A27[(V22 - 1)..0];
L198:
FOR i = 0 TO V28;
IF (i == V28) THEN V81 = 1;
PUSH i;
FOR j = 0 TO 4;
IF (V10 > 1172) THEN GOTO L200;
k = 10 * j;
A20[9..0] = A36[(k + 9)..k];
PUSH j;
CALL L188;
IF (V29 != 0) THEN GOTO L199;
A19[9..0] = $03E;
CALL L188;
A19[9..0] = $042;
L199:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L200:
IF (V10 < 1059) THEN GOTO L202;
k = 10 * j;
A20[9..0] = A37[(k + 9)..k];
PUSH j;
CALL L188;
IF (V29 != 0) THEN GOTO L201;
A19[9..0] = $03E;
CALL L188;
A19[9..0] = $042;
L201:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L202:
NEXT j;
IF (V81) THEN GOTO L203;
A18[9..0] = $396;
CALL L276;
POP i;
DRSCAN V22, A27[(((i + 2) * V22) - 1)..((i + 1) * V22)];
PUSH i;
L203:
POP i;
NEXT i;
GOTO L212;
L204:
IF (V29 == 0) THEN
A19[9..0] = $03A;
IF (V29 == 0) THEN
A19[19..10] = $03A;
IF (V29 == 1) THEN
A19[9..0] = $036;
IF (V29 == 1) THEN
A19[19..10] = $052;
IF (V29 == 2) THEN
A19[9..0] = $036;
IF (V29 == 2) THEN
A19[19..10] = $036;
FOR i = 0 TO (V33 - 1);
V57 = 1;
j = 10 * i;
A20[9..0] = A38[(j + 9)..j];
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L205;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L205:
NEXT j;
PUSH i;
CALL L188;
IF (V29 != 0) THEN GOTO L206;
A19[9..0] = $036;
V57 = 1;
CALL L188;
A19[9..0] = $03A;
L206:
POP i;
V30 = V30 + V24;
V31 = V31 + V24;
NEXT i;
GOTO L212;
L207:
IF (V29 == 0) THEN
A19[9..0] = $04A;
IF (V29 == 0) THEN
A19[19..10] = $04A;
IF (V29 == 1) THEN
A19[9..0] = $046;
IF (V29 == 1) THEN
A19[19..10] = $05E;
IF (V29 == 2) THEN
A19[9..0] = $046;
IF (V29 == 2) THEN
A19[19..10] = $046;
IF ((V10 & 64512) == 4096) THEN
A20[9..0] = $032;
IF ((V10 & 64512) == 8192) THEN
A20[9..0] = $02E;
IF (V10 != 8192) THEN GOTO L208;
A18[9..0] = $04E;
CALL L276;
L208:
IF (!V45) THEN GOTO L209;
b = 0;
CALL L305;
L209:
CALL L188;
IF (V29 != 0) THEN GOTO L210;
A19[9..0] = $046;
CALL L188;
A19[9..0] = $04A;
L210:
IF (!V45) THEN GOTO L211;
b = 1;
CALL L305;
L211:
V30 = V30 + V24;
V31 = V31 + V24;
L212:
V15 = V30;
IF (!V39 || (V34 == 1)) THEN
GOTO L213;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L213:
ENDPROC;
PROCEDURE L222 USES DEVICE_DATA, TEMP_DATA, L276;
V31 = 0;
A18[9..0] = $01E;
CALL L276;
IF ((V11 == 1035) || ((V11 & 64512) == 1024)) THEN GOTO L226;
IF ((V11 == 2069) || ((V11 & 64512) == 2048)) THEN GOTO L229;
IF ((V11 == 4097) || (V11 == 4869) || ((V11 & 64512) == 4096)) THEN GOTO L232;
IF ((V11 == 8192) || (V11 == 8193) || (V11 == 8965) || ((V11 & 64512) == 8192)) THEN GOTO L235;
IF (V11 == 0) THEN GOTO L223;
L223:
i = V11;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L224;
V31 = V31 + 790;
A28[V31 - i] = 1;
L224:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L225;
V31 = V31 + 790;
A28[V31 - i] = 0;
L225:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L226:
i = V11 - 1035;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L227;
V31 = V31 + 790;
A28[V31 - 619 - i] = 1;
A28[V31 - 467 - i] = 1;
A28[V31 - 315 - i] = 1;
A28[V31 - 163 - i] = 1;
A28[V31 - 11 - i] = 1;
L227:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L228;
V31 = V31 + 790;
A28[V31 - 619 - i] = 0;
A28[V31 - 467 - i] = 0;
A28[V31 - 315 - i] = 0;
A28[V31 - 163 - i] = 0;
A28[V31 - 11 - i] = 0;
L228:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L229:
i = V11 - 2069;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L230;
V31 = V31 + 790;
A28[V31 - 765 - i] = 1;
A28[V31 - 629 - i] = 1;
A28[V31 - 613 - i] = 1;
A28[V31 - 477 - i] = 1;
A28[V31 - 461 - i] = 1;
A28[V31 - 325 - i] = 1;
A28[V31 - 309 - i] = 1;
A28[V31 - 173 - i] = 1;
A28[V31 - 157 - i] = 1;
A28[V31 - 21 - i] = 1;
L230:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L231;
V31 = V31 + 790;
A28[V31 - 765 - i] = 0;
A28[V31 - 629 - i] = 0;
A28[V31 - 613 - i] = 0;
A28[V31 - 477 - i] = 0;
A28[V31 - 461 - i] = 0;
A28[V31 - 325 - i] = 0;
A28[V31 - 309 - i] = 0;
A28[V31 - 173 - i] = 0;
A28[V31 - 157 - i] = 0;
A28[V31 - 21 - i] = 0;
L231:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L232:
i = V11 - 4097;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L233;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L233:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L234;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L234:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L235:
IF (V11 == 8192) THEN GOTO L238;
i = V11 - 8193;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L236;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L236:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L237;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L237:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L238:
DRSCAN V17, A28[(V17 - 1)..0];
L239:
A18[9..0] = $392;
CALL L276;
V10 = V11;
ENDPROC;
PROCEDURE L247 USES DEVICE_DATA, TEMP_DATA, L290, L71, L276;
V30 = V14;
IF (V49) THEN CALL L290;
V31 = V30 + (V23 - 1);
IF ((V10 & 64512) == 0) THEN GOTO L248;
IF ((V10 & 64512) == 1024) THEN GOTO L249;
IF ((V10 & 64512) == 2048) THEN GOTO L251;
IF ((V10 & 64512) == 4096) THEN GOTO L253;
IF ((V10 & 64512) == 8192) THEN GOTO L254;
L248:
CALL L71;
GOTO L256;
L249:
IF (V10 > 1172) THEN GOTO L250;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A34[(j + 9)..j];
PUSH i;
CALL L276;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L71;
L250:
IF (V10 < 1059) THEN GOTO L256;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A35[(j + 9)..j];
PUSH i;
CALL L276;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L71;
GOTO L256;
L251:
FOR i = 0 TO (V33 - 1);
j = 10 * i;
A18[9..0] = A38[(j + 9)..j];
V57 = 1;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L252;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L252:
NEXT j;
PUSH i;
CALL L276;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L71;
POP i;
NEXT i;
GOTO L256;
L253:
A20[9..0] = $032;
GOTO L255;
L254:
A20[9..0] = $02E;
L255:
A18[9..0] = A20[9..0];
CALL L276;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L71;
L256:
V14 = V30;
ENDPROC;
PROCEDURE L257 USES DEVICE_DATA, TEMP_DATA, L30, L287, L276
, L222, L247
;
IF (V107 == 0) THEN GOTO L271;
CALL L30;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L258;
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L258:
NEXT i;
IF (!V106 && (V75 == 0)) THEN
GOTO L271;
IF (V106 && (V75 == 0)) THEN
GOTO L263;
V11 = 0;
CALL L222;
CALL L247;
L263:
IF (!V106) THEN GOTO L271;
IF (V4 == 1) THEN
A18[9..0] = $03E;
IF ((V4 == 2) || (V4 == 256)) THEN
A18[9..0] = $3FF;
CALL L276;
CALL L30;
V75 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L266;
IF ((A17[i] & 16) != 0) THEN GOTO L264;
A17[i] = A17[i] | 16;
GOTO L265;
L264:
A17[i] = A17[i] & ~16;
L265:
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L266:
NEXT i;
IF (V75 == 0) THEN GOTO L271;
V11 = 0;
CALL L222;
CALL L247;
L271:
V75 = 0;
ENDPROC;
PROCEDURE L272 USES DEVICE_DATA, TEMP_DATA
, L275
;
IF (V4 == 2) THEN CALL L275;
ENDPROC;
PROCEDURE L275 USES DEVICE_DATA, TEMP_DATA;
V32 = 8983;
ENDPROC;
PROCEDURE L276 USES DEVICE_DATA, TEMP_DATA;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L277;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L277;
V27 = 50;
A32[49..0] = A30[49..0];
L277:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L278;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L280;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L281;
L278:
IF ((A17[i] & 2) != 0) THEN GOTO L279;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L281;
L279:
IF (!V57) THEN GOTO L280;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L281;
L280:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
L281:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L282;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L282:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L283;
STATE IDLE;
WAIT 3 CYCLES;
L283:
ENDPROC;
PROCEDURE L287 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L288;
V2 = A12[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L289;
L288:
IF (V74) THEN A30[V24] = 0;
L289:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L290 USES DEVICE_DATA, TEMP_DATA, L293, L294, L295, L296;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L291;
V2 = A12[i];
IF (((V10 >= 1035) && (V10 <= 1197)) ||
(V10 == 0)) THEN
CALL L293;
IF ((V10 >= 2069) && (V10 <= 2074)) THEN
CALL L294;
IF (((V10 >= 4097) && (V10 <= 4114)) ||
((V10 >= 4869) && (V10 <= 4886))) THEN
CALL L295;
IF (((V10 >= 8192) && (V10 <= 8210)) ||
((V10 >= 8965) && (V10 <= 8982))) THEN
CALL L296;
GOTO L292;
L291:
IF (V74) THEN A30[V24] = 0;
L292:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L293 USES DEVICE_DATA, TEMP_DATA;
V25 = A1[V2];
V26 = A5[V2];
ENDPROC;
PROCEDURE L294 USES DEVICE_DATA, TEMP_DATA;
V25 = A2[V2];
V26 = V25;
ENDPROC;
PROCEDURE L295 USES DEVICE_DATA, TEMP_DATA;
V25 = A3[V2];
V26 = V25;
ENDPROC;
PROCEDURE L296 USES DEVICE_DATA, TEMP_DATA;
V25 = A4[V2];
V26 = V25;
ENDPROC;
PROCEDURE L305 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L306;
V2 = A12[i];
j = j + (A3[V2] - 1);
FOR V27 = 27 TO 31;
A30[j - V27] = b;
NEXT V27;
L306:
j = j + 1;
NEXT i;
ENDPROC;
' END OF FILE
CRC CF7E;
