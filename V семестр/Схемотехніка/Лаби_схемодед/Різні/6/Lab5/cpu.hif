HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	au.gdf
	{
		au [] []
		{
			1 [] [];
		}
	}
	cop.gdf
	{
		cop [] []
		{
			12 [] [];
		}
	}
	ictr.gdf
	{
		ictr [] []
		{
			13 [] [];
		}
	}
	my3.gdf
	{
		my3 [] []
		{
			23 [] [];
		}
	}
	ctrr.gdf
	{
		ctrr [] []
		{
			14 [] [];
		}
	}
	sm.gdf
	{
		sm [] []
		{
			17 [] [];
		}
	}
	rgictrgdf.gdf
	{
		rgictrgdf [] []
		{
			21 [] [];
		}
	}
	fm4.gdf
	{
		fm4 [] []
		{
			2 [] [];
		}
	}
	dec38.gdf
	{
		dec38 [] []
		{
			3 [] [];
		}
	}
	plm2q.gdf
	{
		plm2q [] []
		{
			4 [] [];
		}
	}
	plmq3.gdf
	{
		plmq3 [] []
		{
			5 [] [];
		}
	}
	plmdr.gdf
	{
		plmdr [] []
		{
			6 [] [];
		}
	}
	lab2.gdf
	{
		lab2 [] []
		{
			7 [] [];
		}
	}
	reg.gdf
	{
		reg [] []
		{
			8 [] [];
		}
	}
	bitrg.gdf
	{
		bitrg [] []
		{
			9 [] [];
		}
	}
	shu.gdf
	{
		shu [] []
		{
			10 [] [];
		}
	}
	bitshu.gdf
	{
		bitshu [] []
		{
			11 [] [];
		}
	}
	ctrbit.gdf
	{
		ctrbit [] []
		{
			15 [] [];
		}
	}
	xf3f1.gdf
	{
		xf3f1 [] []
		{
			16 [] [];
		}
	}
	smbit.gdf
	{
		smbit [] []
		{
			18 [] [];
		}
	}
	sumbit.gdf
	{
		sumbit [] []
		{
			19 [] [];
		}
	}
	cobit.gdf
	{
		cobit [] []
		{
			20 [] [];
		}
	}
	rgplmt2.gdf
	{
		rgplmt2 [] []
		{
			22 [] [];
		}
	}
	ram.gdf
	{
		ram [] []
		{
			24 [] [];
		}
	}
	cpu.gdf
	{
		cpu [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	cpu::(0,0):(0): cpu.gdf
	{
		my3:23:(0,0):(4): my3.gdf
		{
			ram:24:(0,0):(17): ram.gdf;
			ram:24:(0,0):(21): ram.gdf;
			ram:24:(0,0):(16): ram.gdf;
			ram:24:(0,0):(20): ram.gdf;
			ram:24:(0,0):(15): ram.gdf;
			ram:24:(0,0):(19): ram.gdf;
			ram:24:(0,0):(14): ram.gdf;
			ram:24:(0,0):(18): ram.gdf;
			dec38:3:(0,0):(58): dec38.gdf;
		}
		ictr:13:(0,0):(3): ictr.gdf
		{
			ctrr:14:(0,0):(1): ctrr.gdf
			{
				ctrbit:15:(0,0):(20): ctrbit.gdf
				{
					xf3f1:16:(0,0):(3): xf3f1.gdf;
				}
				ctrbit:15:(0,0):(55): ctrbit.gdf
				{
					xf3f1:16:(0,0):(3): xf3f1.gdf;
				}
				ctrbit:15:(0,0):(54): ctrbit.gdf
				{
					xf3f1:16:(0,0):(3): xf3f1.gdf;
				}
				ctrbit:15:(0,0):(47): ctrbit.gdf
				{
					xf3f1:16:(0,0):(3): xf3f1.gdf;
				}
				ctrbit:15:(0,0):(46): ctrbit.gdf
				{
					xf3f1:16:(0,0):(3): xf3f1.gdf;
				}
				ctrbit:15:(0,0):(45): ctrbit.gdf
				{
					xf3f1:16:(0,0):(3): xf3f1.gdf;
				}
			}
			sm:17:(0,0):(2): sm.gdf
			{
				smbit:18:(0,0):(36): smbit.gdf
				{
					sumbit:19:(0,0):(3): sumbit.gdf;
					cobit:20:(0,0):(4): cobit.gdf;
				}
				smbit:18:(0,0):(38): smbit.gdf
				{
					sumbit:19:(0,0):(3): sumbit.gdf;
					cobit:20:(0,0):(4): cobit.gdf;
				}
				smbit:18:(0,0):(37): smbit.gdf
				{
					sumbit:19:(0,0):(3): sumbit.gdf;
					cobit:20:(0,0):(4): cobit.gdf;
				}
				smbit:18:(0,0):(1): smbit.gdf
				{
					sumbit:19:(0,0):(3): sumbit.gdf;
					cobit:20:(0,0):(4): cobit.gdf;
				}
			}
			rgictrgdf:21:(0,0):(3): rgictrgdf.gdf
			{
				rgplmt2:22:(0,0):(1): rgplmt2.gdf;
				rgplmt2:22:(0,0):(30): rgplmt2.gdf;
				rgplmt2:22:(0,0):(29): rgplmt2.gdf;
				rgplmt2:22:(0,0):(28): rgplmt2.gdf;
			}
		}
		cop:12:(0,0):(2): cop.gdf
		{
			reg:8:(0,0):(3): reg.gdf
			{
				bitrg:9:(0,0):(32): bitrg.gdf;
				bitrg:9:(0,0):(36): bitrg.gdf;
				bitrg:9:(0,0):(35): bitrg.gdf;
				bitrg:9:(0,0):(33): bitrg.gdf;
			}
			reg:8:(0,0):(49): reg.gdf
			{
				bitrg:9:(0,0):(32): bitrg.gdf;
				bitrg:9:(0,0):(36): bitrg.gdf;
				bitrg:9:(0,0):(35): bitrg.gdf;
				bitrg:9:(0,0):(33): bitrg.gdf;
			}
			reg:8:(0,0):(48): reg.gdf
			{
				bitrg:9:(0,0):(32): bitrg.gdf;
				bitrg:9:(0,0):(36): bitrg.gdf;
				bitrg:9:(0,0):(35): bitrg.gdf;
				bitrg:9:(0,0):(33): bitrg.gdf;
			}
		}
		au:1:(0,0):(1): au.gdf
		{
			fm4:2:(0,0):(47): fm4.gdf
			{
				dec38:3:(0,0):(3): dec38.gdf;
				dec38:3:(0,0):(2): dec38.gdf;
				plm2q:4:(0,0):(11): plm2q.gdf;
				plm2q:4:(0,0):(22): plm2q.gdf;
				plm2q:4:(0,0):(23): plm2q.gdf;
				plm2q:4:(0,0):(21): plm2q.gdf;
				plm2q:4:(0,0):(20): plm2q.gdf;
				plm2q:4:(0,0):(19): plm2q.gdf;
				plm2q:4:(0,0):(13): plm2q.gdf;
				plm2q:4:(0,0):(12): plm2q.gdf;
				plmq3:5:(0,0):(30): plmq3.gdf;
				plmq3:5:(0,0):(54): plmq3.gdf;
				plmq3:5:(0,0):(53): plmq3.gdf;
				plmq3:5:(0,0):(31): plmq3.gdf;
				plmq3:5:(0,0):(28): plmq3.gdf;
				plmq3:5:(0,0):(29): plmq3.gdf;
				plmq3:5:(0,0):(26): plmq3.gdf;
				plmq3:5:(0,0):(27): plmq3.gdf;
				plmdr:6:(0,0):(32): plmdr.gdf;
				plmdr:6:(0,0):(34): plmdr.gdf;
				plmdr:6:(0,0):(35): plmdr.gdf;
				plmdr:6:(0,0):(36): plmdr.gdf;
			}
			lab2:7:(0,0):(23): lab2.gdf;
			lab2:7:(0,0):(22): lab2.gdf;
			lab2:7:(0,0):(21): lab2.gdf;
			lab2:7:(0,0):(4): lab2.gdf;
			reg:8:(0,0):(6): reg.gdf
			{
				bitrg:9:(0,0):(32): bitrg.gdf;
				bitrg:9:(0,0):(36): bitrg.gdf;
				bitrg:9:(0,0):(35): bitrg.gdf;
				bitrg:9:(0,0):(33): bitrg.gdf;
			}
			shu:10:(0,0):(54): shu.gdf
			{
				bitshu:11:(0,0):(4): bitshu.gdf;
				bitshu:11:(0,0):(1): bitshu.gdf;
				bitshu:11:(0,0):(3): bitshu.gdf;
				bitshu:11:(0,0):(2): bitshu.gdf;
			}
		}
	}
}
