' Copyright (C) 1988-2000 Altera Corporation
' Any megafunction design, and related net list (encrypted or decrypted),
' support information, device programming or simulation file, and any other
' associated documentation or information provided by Altera or a partner
' under Altera's Megafunction Partnership Program may be used only to
' program PLD devices (but not masked PLD devices) from Altera.  Any other
' use of such megafunction design, net list, support information, device
' programming or simulation file, or any other related documentation or
' information is prohibited for any other purpose, including, but not
' limited to modification, reverse engineering, de-compiling, or use with
' any other silicon devices, unless such use is explicitly licensed under
' a separate agreement with Altera or a megafunction partner.  Title to
' the intellectual property, including patents, copyrights, trademarks,
' trade secrets, or maskworks, embodied in any such megafunction design,
' net list, support information, device programming or simulation file, or
' any other related documentation or information provided by Altera or a
' megafunction partner, remains with Altera, the megafunction partner, or
' their respective licensors.  No other licenses, including any licenses
' needed under any third party's intellectual property, are provided herein.

'Device #1: EPM9320 - e:\topsecret\5_sem\shemtechnik\labs\shem3\ram64.pof Thu Oct 15 18:24:07 2009

NOTE "CREATOR" "Altera Jam/STAPL Composer Version 10.0 RC6 10/5/2000";
NOTE "DATE" "2009/10/15";
NOTE "DEVICE" "EPM9320";
NOTE "FILE" "ram64.pof";
NOTE "TARGET" "1";
NOTE "IDCODE" "093200DD";
NOTE "CHECKSUM" "005C2136";
NOTE "SAVE_DATA" "DEVICE_DATA";
NOTE "SAVE_DATA_VARIABLES" "V0, A12, A13, A23, A24, A25, A43";
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "10";
ACTION PROGRAM = PR_INIT_PROGRAM, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED, DO_SECURE OPTIONAL,
DO_READ_UES OPTIONAL,
PR_EXECUTE;
ACTION BLANKCHECK = PR_INIT_BLANKCHECK, PR_EXECUTE;
ACTION VERIFY = PR_INIT_VERIFY, PR_EXECUTE;
ACTION READ_UES = PR_INIT_READ_UES, PR_EXECUTE;
DATA DEVICE_DATA;
INTEGER V0 = 1;
INTEGER V1 = 0;
INTEGER A12[1] = 8;
INTEGER A59[1] = 504;
INTEGER A60[1] = 1;
INTEGER A61[1] = 154271965;
INTEGER A13[1] = 6;
INTEGER A25[1] = 10;
INTEGER A43[1] = 0;
BOOLEAN A23[245208] = @
xU700u@@@t@@@kV@@V@@V@_@@@F3qOG63nOW@@zlVl@Rx@@@RJm@t@@Sau@_lFO3
yt@@Fj7_@xzh86p0ZwMnqOm@@xVlDevFi_Gy@@llPLu@@@tx@UFltxV@_@@n93w@
UlztxzwU@@RpIOkIelOm@@Vl@@xTzUltsx@@Vt7_K6yt@z@am4oCCcjyaOe2Yncn
W5cA_z@@z@@@wUlt@3aGoq0l@xz5f4E26qcCe3bW@@@Tz_ltx896JLieaGltxzpy
1@@U@@sDQOFu@txjcnm7z1x@@@TI3QT9uV@tFFxnAR3@@@_Ul@@z@Vlh@@@t@ltV
581z@@ttJ3yV@@xx@@FVzGiqWDT5bL3Uh9COhe52pxs9_@_@JVCm@zUFltxTzUlt
1P9a_OW@_l@WC3uzU@d_OG1c1ZY6O@txDz91@V@@326a_yWtxz_Q13_5Cu3W1t@z
Uz0Ry6aWU@txe0FEvaOG9gVB3itxzxUltBOC1@@U@j96uxz_N@@@jzV@tnJ3ohCu
Sr0ltxzy@lt@jIeq8Xqi4AIOO4Z1txzU_lt@v@_@7McmSh1w@V@ztxzwVl@xDbXG
cAy@U@VoPm3B3XCRSnGIU0FfFE5BbG8Z1U@@xzzVl7oOmQK2pt6u_@tVXA1x@UlX
C9u@x@Fa91U@@xV06q1RGH2RnI9qBRWU@t@lY4yzU@h@x@s_lth@zVFltx@y_ltZ
bCm@@@NG6CIVOWtxz@r39SonWeFOuV@@Fw39ptI8w36RkU8loLP96BLP2_@xzyUl
ttwXXjD9u@t@tzUlltx@_JbCu@U@t@@@lV@tRxlUlr9Jmlt@jzVltcL9aZy1@@lt
_xz@z@txdoKY7Z64h43_ltx93CeEP2hEPe7t3H6o9PG2H6GEaXb_@l@3PyVGc@Z_
yVOfjrxjV78h2l@@jyU@tr@j@Nut0@@@j1oOmxzURWi4Sxtx@1mW0P_vwltF2dAy
_rUR@txNr@@@5X6u@h@FG66qxL@N8e1_@thzz_lhth@F2dky@z@5XZ7Ultwzz_lx
t_@Fq7IyVlzx@@@tlzxjzVlNr@@@L8QWVh@xF0Cm@@sVeFxfNx@s_l@B@@V@OY8H
l_@l@@@N_xz_UlNxY9A1s@z_UlNxz@@@xL@@Fc8Cyz_@5JqF_x@tZ9Q3xzUh1BjX
zVlzWbOm@@tQCH9erx@FO96qwz@7iaVUlsxZYQ3lN@ztRoW@hz@eeCm_lNhx_@@e
eIm_lNRKKvG@@@FAAIylV@75r6_UltqxzVR@t_DyA9ys@tpxzVByACyMlt7U53V0
OGuLxPlNxrzVllL@z@ukUmt@lg@ltRx@Q@nTL1lt@LzUt@nTbWltVrukon@xlVSN
5PzUlFWi7y@Vx7tbA_@lz38ZGVlNxHg9X@w@@0oKnVz@RaQsu@V@FIjbirxzw_lt
sx@_l@t_@GuamsltV8SLmxjVF4E6yzsl72dV_@xryUltxxrVth@@lr@@@OxUmzUl
krx@_OxgmwltRO99utxlswltRiT_vRzUNlt@DzV@tW_Um@Vxlt@@UUh@x1zLX@zM
@OxOmzVhVGV_v@@@oUlthxlQ@e1bmN@@k@lthe1nWNx@UO9CuhzVFQGRi_@@x_z@
FQmJ61YXe1RnzMlVOYLut@jEQGNfz_l7@O5_Nxz3oWXu7@9CI9YVK5z@@@_@z@3i
aXeFCm@@xl@t@F@_@@H6OWrRlUM@@xwz_lz@xz6tL2_@N@9boleKA@Fmo7yVltYx
@@FSS6y@UBxtx@FmIFytw@_fj1BL@W@bV9fKAbNTdGWb9yYh11MkHyAIuUhtsxjV
RaQI4tb1HSYKuB94nv97hRG4dIetx@YolyB_@VvZpJmV@@l@@oVly@baIvNK_b@V
qE3Ab@@z@@@YVltFxp4yN_@YolK_d1325T3Vfy@_@o@tX@1@@o@_@@b35rZxqJmV
v@@W0COfy@FKqY2oOfOK@nx@@l@@U9fNwzjDpW@z@Vx@t@_@xlz@x@xUlqFur4yV
ltp_@@Fa13YHz1@IvNq@zUHv@@xtV@lZ@7yt_@w_@zsVf@VmhFu@zUFa13yl@x@o
V29x@G83FO@torzt@V83C7a16XCyGKjG6Mo3XxgY@@w@uWVuAU32POo0POGltljz
R@MV@@_XCyWsl@UUlVxwt_@BIs0zVlzn1ZXxtUVjtxz_@@UTxt@Vu@31POWt@@VV
lVl_t_@x_@1@t_@yVlzrx@VlKj1_l@@3B13@@@UUxtxP@@@78J81PyVG6S6hj4_z
@@3aPi_BP8i4jy@b@7o0m1oai@@xV@_@zHdtLiz6CUI2XCOl@@I9fKAb1BzW@@B@
0zzml@BL0PLu@VvVG@7y@o@x@@bYVfyVW_p4G661wpmw@94elAs@@x3q@mWbunV@
@l@j@@OKPGlM@VG6H5wp3xGRGWC8blH2Hr_WQ@@@0zpfqV32qFaykD8ygby@Ulht
xjCi4myV@@7Mo@1wRWltlr0ogmzQlVSmL4c83_@l_zxzR5ZQ8_@xrr@@t7eV5sl@
@VowXm4hm@@zx0@Cu@rwFGV9YScXQqD8GV3Oz_l5eV5X9oW@s@Nt@js1w7Ylt_@G
uSoMx@VW_Fu_jKMBtoT8SFuB@RnzNwT0oa8@VlF0P3yV@t6Ov3_V@b3JC1Atx@iy
@@J@@1j@@@Xm1J0Pju@V@EU_4syt0@@t@1zzVuLGw@w@FmoPyt@@7q7OXxcWlM@L
@w@@XY_W@VzVNBz_UfSB3UrW0zDm@rwVmIFu@@wtlM@TGuXu@lMt@@VTv@Fu@@Vr
@@@NO964yg4yVft3MQZmIg8G@7ytV@7@uC_@@z3qN2w@@@XNP6zUftmhUm@@@cS@
@@0Bj9Dt7Mvt0IvtB1wBX@x@UV@@@XmLz1zF4AAL1BzG0PL4Wi41BnJ0ov4kBCnQ
Jo_t64eV5jDRGmh@7eF3f_PG0oxvz@@FGV9AuFXGgXnUlNBx@UVl@xtXbmWV@@VV
@Vhk@Qlj@xzpw@@VmV322FXmThGjs@VW_Iu@@st@@@Fl_hT@@@N18@Gch6ur@zFG
@Jy@V@v@xlFU_DyUhr7FV5_@j@Thtxxz_lD8S92fM2x@Uhg@@@3q73_j_@_@Rz3q
N2@@@RnpFJf@64wZ4wz_j2RdX0azGj@@V8rIm_ltFGVIylr@7el4_@@rRdlYWmbm
Rz@@W0C4el4k@Rz3RlYWmbm@@tQGuIu@VhFG@JwsZXl_D8izMi@@t6sE6_@xrqQj
N74_3_@j_32tWepJm@@ll@@@_GgdnVx@lx@th0zbusU3YEdX0zD8KK68@Uf4IjA_
UhrqwjV7s_3_R@@ZrU9@xjVXjla@@@tGHFn@x@cS@@xuvJmz@@kV@@@m4VWsx@gQ
l@@uvVm@z@R8rFu@@Nt@t@VeeIu@@tpxzVVmIF4ce4Qltx3tjB@_lrs@jMZEd4@l
z@1wd3@tRz0oKnNAbYIfSBAtoju_@b3PW1V@b@Qv_B9bojeSB@FUU62qt0yxz_1z
n0AtIPjKAbnpZHmh64qt3XCOW@RvV_lto1XRGOxUu@@tpRvU@mVC4elD_@x@3qF4
@@tl1wNdt@@V@@rUUlNx3qN2@@@N_lr@TltBhz_lt@ltl@@VFl@@@ky@@zVl_7om
3_@l_zhzRRvMArz@@lV@zxg@Vm_h@l@@NR@rw@1w@W@t@TzV@@X9QWb@z@KoI80v
DytV@Fk83_Vl_twd1Vhtxwj_l3RN2@@j@Ux@x3RN2zs@@1w@W@s@t0Psms@@l@j_
Fhz@@1w7bzs@@mszm@x@cV@@xWNb8GV6urwlhNx@FU_7y@lt62N5npBHO9d4FV51
Xx4jVlNr@@@1w@W@@j@uv7BCHC25rWmII8KK62BfeGHt8i4v2qF7@@_@XjFc@@UD
ltxr_UzMTx@@7e@3_@zxTjtxxz_l@Ha42lwXEADm@@zlVlUBhtQji_@@3qN2xl@@
_@Vlzth@7UL51av1@txLrU@@1wdWzUhNtRz@HNcW@Nx@j_PmtRzkUlzRR@sl1wBX
t@@s0zJm@t@VuLFa5T2_x@VTxtQxjMhDG@Dys@@7Ur31aHYzUhrmhsmM@@@2@94G
M2U@Nl3qN2@VlNs@r_T@@l7AQ21wd0js@z0zb8CH9y@UBxtx@FSN3iUl@7eV5sV@
_h7aXv@Jm@_lMukmuRzVtlz@VW_IuUlrF0vAyx@MJ@txDizMy@tQ7eFCyVht3zH5
VlNxwz_lj_xt6bN2y@@zzN@@xxl_tx@VFlMlTrV@@1wpGeF64F@3k_xzrQlN7FV5
s@t@zls@vz@@ttx@RW_Cu@t@tzV@l@R@@GRI8ur7y@@wRjtxbr@@VW_6KUh1k@@@
FABXuvVmUhthx@UxG6Um_@@llz@T@Vltq_zs3z1Z0zJm@@Uhlt@DzUx@1wZ1h@xz
0zdn@slbtxjs0zFn@VjcMhrw0zD8el4y@Vz7el1kNhrzQzNdxV2X9cWVzNBh@Qj1
wdWVl@hF0C8GV9y@w@x@@rAO992qdXO0DOVU9e@QjgMh@FG@4y@VzFsB3XYoMyyj
SPS2XKhbVl@xuvVWth@U8SIu@_lDSN9yx@@7FlD_N@zqQjs7yQK_@@t3qd1R@Uhn
QBHmIEn_zMJhr@V8rXiml1XmHI8rC42NB1oOG8Sd4Ij4XmHb@z@@ms9Pc892RtC@
@rUUjtx3RVOVhtRXj7Y@@x@GgZwsS32qNhuLwAAA92qtZCgIOgV3cLbXWmtp@@NT
W_ma3c1j_dmW0C4XJcnpNHyAL4ske1w@GcX94FVN1XFMaQC4oWksxzQZCOimsL9s
k4Yr66lrxz1PqOqW64Fl4_@@NzV@@7Du6H6CMW_jOz@@FEOXyt_@FmF3newHW_Kn
x@QFaQRYSsWpfJG@@VVKjO4f6OHEdW@@UxOjn8wSCY64Z_@D8_n425rCh@@@npRW
lNV@Oxmul932qNYu7D8gMCYuyXOx6BwS3e@@@7TUH1XxXV@z@W_ko@@xb@U@V@@r
_H6OMqWQ5@OEH6OM0Pg4nf1H3EJ83D6TUKH6WS83@7Bn@1PyVq7@7lIl_@@trxzU
Rl@@rz@ldtxzUUltxwz@lztxzwUltR603y@@_R@txr@U@d@@zVVl@xwzUlztx@cG
j171OmR06uzUld@xzUP06u_@@pxzUFl@@@61OeKV3y@xzxU@@t@z_Ved6iz@3hxB
HAz9utxzUNU6y@z@NA53_z_@7@t0ltx@y_@tJ6m0tx@UV@dW@VlNt@zV_@@xv@_l
htxztV@@l@@VV@t@zF4mGo06aST2p5aWzU@@a1C8B1pcLGYP0oeC0PERW1lt@zyU
l@zx@VRlt@tzUl@e3IuxzUN@txTB1La2i1DHaWtxz@I8Omxz@@c1B5BX1x3mGM2i
bNnOPJaWx@VlG6Cm@@@Tl29amH2_@x@y@@@dmH5XCaG279CxX19SOG836KMV5h0K
HL0gay@3bGmGw3NbRG2HV8KQ1CipV2PYamN2ZDPY4V@RW@ltV@@@@_t@z7sF1@@V
@k@x@y@l@7Ck1NEuX@@@tl7Om_@@@X_6K1G2RmRmY@9Cil1_V@ttqdXIzneW56It
NYTkDuc0FYeuaB1a8tb4QdG2t@zV7r@GkBUy_V2vkOmw_L4833l@dWx@V@0PI833
IMtOcTpbek3LohWD@@Vl7LamA8UK8IBPudmJ2QTFl4lL4oUApaXH2_V@@Vvt0l@@
@_@x@z@@@w@@@sNzsdkl@V@@@@kTl@zds@pl@@t@@xh@@@VvtU_yV@@v@l@pPzTF
d26u@@@x@_@FJW4y@y@x@@Ft@@@ld@@V@@v@_@@@y@z@vztdru@tlV@@Vz@t@yV@
@v@@tv@s@tV@ll@j@Ut@t@_7_vrR@Vt@l1o@@@z@z@N8W1__@@z@@zR@l@t_t@h@
l@T@@@x_k@@yzlxhVl@t@h@lx@lNyl@t_tVojR@@Rvxst@@jl@@zNtzplsk@zzFt
tR@V_JzFxlzrlRlVVzs@x@j_T@wxhVt@@@kl@@E@@@@_@@_lnr0@V@@k@@dz@x@x
@@zt@zwlVxpTdTV@_@T@z@t@h@@@d_@ilt9tFjt@wUV@xz@@@nxNxrd@xds@@V@@
z@_@@Szt@@tVG2hvBX@@nNsw@l_t@tjR@@I@_@t@@vVK26uzz@ttxVl@@@V@@7__
@@xdb23@Fz@_@@Jj@@@xfx@t@Vwl@@@7V@@@_mp@Lp@Vhlx@Nt@Vd@@kV@t@l_@@
@zd@@xt@Vt@Vvl_@@V_@rt_@@xj@@xRV@@Vs13i@@@xxx@t@@__oEsiR06FgyZ@1
xF@zt@f2uKZGWv@ssszjzjxxRRsttsijjjF0O0ssssijjlPRRVp_s_szjz@V0jms
s__FWMEtlYN48yXW3JaQ3@ll@BlPW@@tN@@llJ0OW@@@N@l@lV2HY@ttNl@llUV@
Vz_@_M8W1H2OGC06uzz@@lAmg6m0@_z@F@dW@lVV@@@__z@zvx@@V5n9@rLHi64_
On@DUyVHP@4LZDNEY1@@@@OL8f2oAu@@@@7m9TtnZ@@@Nlll@UVVVz@__xll@@0W
1ytt@xll@Te43y___7mM8_VV@@3u1@zz@U@V@z__@UPoOfral@@VRstssl1bGWG6
mssstjjjjRRRRssstrgvnV0@u@@@70;

BOOLEAN A24[214488] = @
xY600uVzxt@@@l@@@VlDv@_@_@p6e_@_t@@@l@@@J@@@@_@t@7QW@@xV@@_@w@@@
7RW@z@V@@V@4O@@zVHWv@l@rl@@lx0uV@@@z_@l_lB1t@@lxQW@@@Vl@@@_@@@zz
@@@j1_V@1z@_@Ji@@tGWyl@HuV@@@19W0@@@@2w@@zF@@x@@@tF@@l@1uV@_@@_z
zVzxh@x@@@VK6u@Vv3@ynFkzlRV@@@__l@z@@@pV@@d@@@VrIuS9u_z300x@FnA2
031md_5X@T307u@@1000000W0000000000W000000000@@VV8148mV@J04wKt@nx
@W1e@10o@ZF00uV@7Ggs@@xr6I@xlF@52@VZ4_z@GnWFnWBOXaH200W@iY00WWat
20013Gt30aj7ewe20W0108L00Hbe09U@300W00081u200kV@00m_l7P6uN0_tD0S
W@@@@CI2@Z01vX4ne4bW49XDIX949_vXiX0IzVxJUUs@@xrs@@x@tHo@@zfz@@V@
@B2_@c@9m@@BXV@t@tzl@d@@72OH6a3PM60QG8p@1P@7zzVOft_@@@c0amMG3I4Q
m403w1aGWC8d9iHMH3wFcman4gFQGuXeYm5bV@z@H0Fq2mW8084oOr_ORu@l@VLg
1X7YAceJtNPuj03bODe7m31PAjsR2ZWD84m3X7YAAQKU@z@h9dmFn4YAcmNHj2B5
LRR3wRdmPN6_xoGu1dYx6rZ19A8RM0vkQljHuXeYKxa@@VVx@@@_@@zx1qW80GO4
W4218XGV4TU56_ixX63D8y0gYjBA@tV@VhmGwA9yte19iyGmIScr83bJQmUZFS5f
1X74LqWTDGP2LKMHeFkcr59X78KyZm4889ha8Hke6GWl@@nK3y@@tR@@@t@8@l@t
@Vk@@@_@@@9nGZv@q_r@@@B4_@V@Bm@HaQWV_@@0BzBUb4ylM@xl@tFYi7McWgG6
Yo@@dg@@@Vvj@@_lj@z@@l3f@@FsJ3y@@tu@@@s@9yVid945m6_@@4Y28XmhKCKq
93sC4@@@qRkoWtx@@UVDOQN3yz@zSzg1c@@zDz@@hvx@t@@xd@@@Vu@Q@_@mFv@@
zFoh1_@@@rpx@xVX@FaXF3oeqiuK9CnIhYoW9xg8a1cT@_@pg@Ps@d_l@@@Q@@@@
kzsX8v@avtx@VHR3y@@sxe@@7Y@yVGVD6an@X9suJg6Kcu3XbGRfhCqNv6rlAKWC
@78JKQ@@@zVV@7om@1a5b@@F0@@@_8@@@7p@X0oU8A0F8m@@FES51wdst@IylP51
Bjj@@lN@@@@g@@@zo@@lMjDnphb@@t@HEJ8e062anR0y@@_lk@3av@0oIBCn4w@F
1@V_@nydW@@tzu_Cm@@YW@l@V2y@@m@@@z@x@7qNQvWZXz@@@MsDerH3y@@@6Zi1
_F@@z@@@xV@dFCnIj@@vv@@@NR@@VmpFu@l@VY_4y@@0uVz@N8@@l@Bw@hdbm@@V
HWblDxF6l@RW@@@_xsb8el@3qNk_yPOOeA2J4rGgJm@EzVmh9u@@t8N@4y@z@7FA
3_@T7Cq@VgkV@t@@ZW@lvVRy@@z@RGO9xDcV25pNH9oL4ygbQv@@zFx@@pU5v@pG
K09Oy@@t@Nz@x@F4UbSx6JIJuR4qNi18@GmIO4GM218JuAx9qQE61l_VW_iDzF3N
wdmo_F4kBmv_pW@@yF@tVzw@@@j_H@xVwVrFV@Nz@Cu@F@t@@tTW_xzsi1gl@@z@
@lv@@@tx@zVG1Iu@VzF0vaT@@@Z@@@t@@iVu@9u@lNVoe7Cp@@7e@U_l@@z@@@TF
l1k@@@z@@V@Gl1djdW@lx@Ggxr@@RU8rCOe@@Ntz@l@@Vk8HDm@U@l@@zl_@DWv@
@VOY1w@X_FON3giKYM@JmV_@VeebwVo@Fjz42t53@7m@_VRoz@@@Ji@@t@Gzl@N7
Wm4DWp@@l@l@@j_C8mI@IavXA@D8eW42R7L@7Gg_@Vo3vF18z@@XyRW@@@6@@@t_
FX@3vt0t@V00u@@HU8xxVnAo@@3bJ1uV@@9OH1aGdb60W@@FGV5tPuXuwD8G@Oz@
_@xl@t@Ft4yz@BVLl1_@@zrx@@JVp@t@@@lo@@VIV@yc7lVj_@tv@V@t@t_l@@@V
2@s@_ld@t2PZ0z1p@z_l@ttyPcDOeF62AmW_@Dm@_VVmI9t@V2Kx@@zFK@x@@1Cu
L3ax@@x@@@t@@@OukAsuF315OGap64eVfH8_GO9Ou_@@70@@l@3P@GHD8i4B@_Fa
msPsU3@F@V@7@@@@_w@@z@h@xk@@_RV3y@V@xv@@70@@l@1utITg8aQpy@Uhx@@V
tV@@l@@xV@@@x_@V@3AWX8SCm@_lVW_bse06XxoWz@d7@Zy@2@@@x@t0jFq@_t_V
z@@@Z@@@t@x@VOY4gt@@@vO3MaXXW2I8izdz@_tRp@Vd@l@l@jhV@@@MkFw@z@ly
dhl1_xVTy@@dv@@@d@@zVOxxv_T@t@_@l@@@Uz@@@_@@ih@FXW2CmR@@VW_FBW@@
t_a@lz@@U@@@@_@VaYOo0@@B2XYQGCM64wJZ78BH8rFdnF3_@f@x@t0R@@@_tm@z
@@N6yQWPQNHG194i4gXy@G8SOu_z300@ZS8S9uK06o@V2cV@@@GuoCTt72UtWmsP
k8d42RtoW2Om@x@VKzL4eFXBKtIIzLSnD91wJOJvXKgV2X7iKiTfbm_CXj3Pu1c5
oGQ@WtL83J_XkDnpJro_9qj@3vN6LmhfLxX7X7iKSmKbuC6FRRW@@@_uMR9iaCFs
FXm3SAoPggScXNdJ8uP6YVCm0aFP7S6kg7Zm3SAMRgyV@zNtZM1XdMNZg4UmIHdJ
LavOyREL1BHOu1E5ULQ1PuQa187om@nIyVq7@7Mo@n4fev1O60W500uLai9GA200
0080S7W300@lFvox@@z@xxx@@@t@2yVq_60Po3n@@3bJ1xNrz@@4ux@1mF_d7G50
000I0WW80G8403Gm662000044000000z300G400m000S50301000G00i7W400W@p
8G2p3mDsmR00mhOvJWK400qFG0uV0703z@BX@@7Wa1a00@ZSa1Cu@@1mF@FVc@Lu
k@@t@d@g@@kAB@@@_@@@z@@Bu@V@rl@_dV_@N@wllTeRW@l@@D_JeWU3ovt08J_@
_@Vey@@@cbW1_@7@z@@@x@G_t@@VBm_@@S2CeduAYdl2@@Vgl_@W@f@@bzbm_@@@
xnF4fl1s@@@z@z@Fol1__@@z@l@x@l@Ilzrjx@@V@@@jsx@@ez@_v@@@t@__l@@F
Vjdl@s@V@zx@EJVtVF4w7q@@@d9G2c@@@z@v@x@@Vs@@@lF@@V@@t@k@ltz_iZx@
_@r@@tl@_tVx@l@_@k@r_@@v@z@dztVl@_@VmFVlw@x@z@@@lpk1k@@@z@v@Nzl1
_l@zzz@xx_V@tzl@l@V@Rz@tt_T@_vz@@Rz@lt@zolz@_V_J_kw@@bTt_@xlz@tl
@UdV_TRzl@@u__zzpVrxP@td_T@kxhVVV@@wkxtlTzx@x@t@kOR3yV@@h@@tt@@@
lx@@U@@y@U@@@zl@@hN@@LVkVcxx@Vlx@@__@_z@@wxdzV7v_rk_N@TxV@@_@Flz
QlVwV@QFzU3yVk@rV03z@BXVyrM_@x@y@zTr@lwh@@@tV_@l@@lV@@@xs@@lj@z@
x@@@tVu@l@l@@lKnmq@@l@FTV@@@Jk@@@zf@@x@V_s@@@1F@l6@@TVk@@kz@T@xx
_@N@@_l@@@F_@@l_@z@zb@zx@@ztNV@l@lVV@l@_y@@@T@@@x@ttt@@@jx@@V@__
@lsRpk1L4agG0xl@cdNbqLxgxVLqssthjllNVRRl_ssMjjjj70CWsssMjzjjQxRx
rstthj@@@FWMqsts_7GBJ8YnoNY_GMWst@@hit0@xx@_tt@d0m0@@x@s@t@VOa4x
xxx_tttj@ll@7W1D0OW@zz@O0C8Y1mg6m0l@@lnrpWxt@V@l@l_VVVJpyaLch8MZ
3Ziu@7F_VBVUElbXeQKPeSCgxtWMM39uyAy@@_@7m9Zw@Z@@zTxx@xstt@jl@@vx
@@x0W1yz@@vxVVVe43cEnW@rzuF09yz@lxV@Vt_@__fC@@3RN_VRxJ3AXzWIGRxV
hss_MjjjjQxR@@3ud_@310;

ENDDATA;
DATA TEMP_DATA;
INTEGER A0[28] =
96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[28] =
3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[28] =
3144, 1574, 716, 360, 183, 1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[28] =
32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[28] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[28] =
512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[15] =
294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[5 * 3 * 27] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0,1025, 4, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 2, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
129, 10, 98, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 97, 1, 0, 97, 0, 2, 96, 0, 1, 96,
0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0, 98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
' VARIABLES
INTEGER A17[1];
INTEGER A48[1];
INTEGER A52[1];
BOOLEAN A32[60];
BOOLEAN A33[10];
BOOLEAN A39[10];
BOOLEAN A26[5];
BOOLEAN A27[800];
BOOLEAN A28[791];
BOOLEAN A45[791];
BOOLEAN A29[791];
BOOLEAN A30[791];
BOOLEAN A31[1600];
BOOLEAN A57[1600];
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
INTEGER V3 = 0;
INTEGER V4 = 32;
BOOLEAN b;
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A18[21];
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
ENDDATA;
PROCEDURE PR_INIT_PROGRAM USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE DO_SECURE USES TEMP_DATA;
V107 = 1;
V106 = 1;
ENDPROC;
PROCEDURE DO_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_INIT_BLANKCHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
PROCEDURE PR_INIT_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
PROCEDURE PR_INIT_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
PROCEDURE PR_EXECUTE USES DEVICE_DATA, TEMP_DATA, L6, L26,
L96,
L132, L81, L68, L94,
L257,
L41, L35, L21;
CALL L6;
V3 = 0;
V4 = 2;
CALL L26;
IF (V2 == 0) THEN GOTO L5;
IF (V42 == 0) THEN CALL L132;
IF ((V42 == 0) && V102) THEN CALL L81;
IF ((V42 == 0) && V100) THEN CALL L96;
IF ((V42 == 0) && V103) THEN CALL L68;
IF ((V42 == 0) && V108) THEN CALL L94;
IF ((V42 == 0) && V107) THEN CALL L257;
L5:
IF ((V42 == 0) && V104) THEN CALL L41;
CALL L21;
EXIT V42;
ENDPROC;
PROCEDURE L6 USES DEVICE_DATA, TEMP_DATA, L30, L276, L32;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L16;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L7;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L7:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L8;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L9;
L8:
l = l + 1;
L9:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L10;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L10:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L11;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L11:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L12;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L12:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L13;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L14;
L13:
l = l + 1;
L14:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L15;
V2 = A12[i];
j = A0[V2];
L15:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L16;
V2 = A12[i];
j = A0[V2];
L16:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L17;
V2 = A12[i];
j = A0[V2];
L17:
V17 = V17 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L18;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L18:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L19;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L19:
NEXT i;
CALL L30;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF (V101) THEN CALL L32;
IF (V42 != 0) THEN GOTO L20;
A18[9..0] = $071;
V4 = 1 | 2;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $332;
V4 = 256;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $044;
V4 = 512;
CALL L276;
WAIT 10000 USEC;
L20:
ENDPROC;
PROCEDURE L21 USES DEVICE_DATA, TEMP_DATA, L31, L276, L32, L35;
IF (V42 == 1) THEN GOTO L25;
CALL L31;
IF (!V76) THEN GOTO L22;
A18[9..0] = $003;
V4 = 32;
CALL L276;
L22:
A18[9..0] = $079;
V4 = 1 | 2;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $006;
V4 = 256;
CALL L276;
A18[9..0] = $04A;
V4 = 512;
CALL L276;
WAIT 10000 USEC;
L23:
IF (!V76) THEN GOTO L24;
V80 = 0;
CALL L32;
IF (V42 != 0) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L25;
L24:
A18[9..0] = $3FF;
CALL L276;
IF (V105) THEN CALL L35;
L25:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF (V42 == 10) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF (V42 == 10) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
ENDPROC;
PROCEDURE L26 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L27;
V2 = 0;
V3 = 0;
GOTO L29;
L27:
V2 = A12[j - 1];
V3 = j;
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512))
THEN GOTO L29;
IF (V58) THEN GOTO L28;
A41[9..0] = $066;
GOTO L29;
L28:
A41[9..0] = $006;
L29:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L30 USES DEVICE_DATA, TEMP_DATA, L31
, L272
;
CALL L31;
IF (V32 == 0) THEN CALL L272;
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L31 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
NEXT i;
ENDPROC;
PROCEDURE L32 USES DEVICE_DATA, TEMP_DATA, L31;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L31;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[9..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & 32) != 0) THEN
A18[9..0] = $006;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L33;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L34;
L33:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L34:
V27 = V27 + 1;
NEXT i;
V27 = 0;
FOR i = 0 TO V1;
IF(A61[i] != 0) THEN GOTO L32_3;
IF(A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
NEXT i;
GOTO L32_4;
L32_3:
V145 = 0;
FOR j = 0 TO 31;
IF(A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
V27 = V27 + 32;
IF(A61[i] != V145) THEN
V42 = 6;
NEXT i;
L32_4:
ENDPROC;
PROCEDURE L35 USES DEVICE_DATA, TEMP_DATA, L31, L276, L39;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L37;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L38;
L36:
j = V84;
k = V84;
L37:
CALL L31;
V4 = 256;
A18[9..0] = $006;
CALL L276;
V4 = 512;
A18[9..0] = $04A;
CALL L276;
WAIT 10000 USEC;
A18[9..0] = $3FF;
CALL L276;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (V4 != 0) THEN CALL L39;
POP k; POP j; POP i;
NEXT i;
L38:
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA, L276, L40;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 512) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
CALL L276;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L40;
ENDPROC;
PROCEDURE L40 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L41 USES DEVICE_DATA, TEMP_DATA, L31
, L47
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L43;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L44;
L42:
j = V84;
k = V84;
L43:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L31;
V86 = 0;
IF (((A17[V1 - V84] & 2) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L47;
POP k; POP j; POP i;
NEXT i;
L44:
ENDPROC;
PROCEDURE L47 USES DEVICE_DATA, TEMP_DATA, L222, L194, L50;
V4 = 2;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 2) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] & ~4;
NEXT i;
V2 = A12[j];
L48:
V11 = 4114;
CALL L222;
V49 = 1;
CALL L194;
k = 0;
FOR i = 2 TO 20;
IF ((i == 8) || (i == 9) || (i == 16)) THEN GOTO L49;
V27 = V24 - 1 - i - V84;
IF (A31[V27]) THEN V86 = V86 | (1 << k);
k = k + 1;
L49:
NEXT i;
CALL L50;
ENDPROC;
PROCEDURE L50 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
PROCEDURE L68 USES DEVICE_DATA, TEMP_DATA, L30, L222, L247, L31;
PRINT "programming 9K device(s)...";
CALL L30;
FOR V11 = 1035 TO 1196;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L222;
CALL L247;
CALL L31;
NEXT V11;
V49 = 1;
FOR V11 = 4097 TO 4114;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 4869 TO 4886;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L222;
CALL L247;
NEXT V11;
V49 = 1;
FOR V11 = 8965 TO 8982;
CALL L222;
CALL L247;
NEXT V11;
ENDPROC;
PROCEDURE L69 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = A40[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V38 * 1000) USEC;
IF (V58) THEN GOTO L70;
IF (V82) THEN V83 = 20000;
A18[9..0] = $06A;
CALL L276;
V83 = 5;
A18[9..0] = $06E;
CALL L276;
L70:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L71 USES DEVICE_DATA, TEMP_DATA, L276;
A18[9..0] = A41[9..0];
CALL L276;
A18[9..0] = $00A;
CALL L276;
IF (V58) THEN V56 = 1;
WAIT (V37 * 100) USEC;
IF (V58) THEN GOTO L72;
A18[9..0] = $06E;
CALL L276;
L72:
A18[9..0] = A44[9..0];
CALL L276;
ENDPROC;
PROCEDURE L81 USES DEVICE_DATA, TEMP_DATA, L276, L69;
A18[9..0] = $392;
CALL L276;
A18[9..0] = $01E;
CALL L276;
DRSCAN V17, A30[(V17 - 1)..0];
CALL L69;
A18[9..0] = $01E;
CALL L276;
DRSCAN V17, A29[(V17 - 1)..0];
ENDPROC;
PROCEDURE L94 USES DEVICE_DATA, TEMP_DATA, L30, L222, L194, L31;
IF (V74) THEN PRINT "blank checking 9K device(s)...";
IF (!V74) THEN PRINT "verifying 9K device(s)...";
CALL L30;
FOR V11 = 1035 TO 1196;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 1196;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L222;
CALL L194;
CALL L31;
IF (V42 != 0) THEN V11 = 2074;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 4097 TO 4113;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 4113;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V45 = 1;
V11 = 4114;
CALL L222;
CALL L194;
V45 = 0;
IF (V42 != 0) THEN GOTO L95;
FOR V11 = 4869 TO 4886;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 4886;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 8210;
NEXT V11;
IF (V42 != 0) THEN GOTO L95;
FOR V11 = 8965 TO 8982;
CALL L222;
CALL L194;
IF (V42 != 0) THEN V11 = 8982;
NEXT V11;
L95:
ENDPROC;
PROCEDURE L96 USES DEVICE_DATA, TEMP_DATA
, L94
;
V74 = 1;
IF (V4 == 2) THEN CALL L94;
V74 = 0;
ENDPROC;
PROCEDURE L132 USES DEVICE_DATA, TEMP_DATA, L30, L222, L194, L290;
CALL L30;
V37 = 100;
V38 = 100;
V29 = 1;
V11 = 8192;
CALL L222;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L133;
CALL L194;
GOTO L134;
L133:
CALL L290;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L134:
V30 = V24 - 1;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L152;
V2 = A12[i];
V30 = V30 - (A4[V2] - 1);
FOR j = 0 TO 14;
INTEGER V70 = 0;
A16[j] = 0;
V27 = 0;
IF (j > 7) THEN GOTO L135;
V27 = j * 8;
V70 = 8;
L135:
IF (j != 8) THEN GOTO L136;
V27 = 64;
V70 = 5;
L136:
IF (j != 9) THEN GOTO L137;
V27 = 69;
V70 = 3;
L137:
IF (j != 10) THEN GOTO L138;
V27 = 72;
V70 = 3;
L138:
IF (j != 11) THEN GOTO L139;
V27 = 75;
V70 = 5;
L139:
IF (j != 12) THEN GOTO L140;
V27 = 80;
V70 = 3;
L140:
IF (j != 13) THEN GOTO L141;
V27 = 83;
V70 = 5;
L141:
IF (j != 14) THEN GOTO L142;
V27 = 88;
V70 = 1;
L142:
FOR k = 0 TO (V70 - 1);
INTEGER V71 = 0;
l = 0;
IF (V2 != 8) THEN GOTO L143;
IF ((k + V27) >= 57) THEN V71 = 1;
IF ((k + V27) >= 83) THEN V71 = 3;
L143:
IF (V2 != 9) THEN GOTO L144;
IF ((k + V27) >= 65) THEN V71 = 1;
L144:
IF (V2 != 10) THEN GOTO L145;
IF ((k + V27) >= 73) THEN V71 = 1;
L145:
IF (V2 != 11) THEN GOTO L146;
IF ((k + V27) >= 81) THEN V71 = 1;
L146:
l = 3 * (k + V27 + V71);
IF (USE_FIXED_ALGORITHM) THEN GOTO L147;
IF (A31[l + V30]) THEN
A16[j] = A16[j] | (1 << ((V70 - 1) - k));
GOTO L148;
L147:
IF ((A55[j << 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A31[l + V30] = 1;
IF ((A55[(j << 1) + 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A57[l + V30] = 1;
L148:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A55[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L149;
PUSH i;
CALL L194;
POP i;
IF (V39) THEN V42 = 6;
L149:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L152;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[8] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 100;
V73 = 100;
IF ((A17[i] & 64) == 0) THEN
GOTO L150;
V72 = 300;
V73 = 100;
L150:
IF (((V36 & 24) == 8) || ((V36 & 24) == 16)) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1]) ||
(((A17[i] & 64) != 0) && (j != 1))) THEN
GOTO L151;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L151;
V72 = A14[A16[11] & 31];
V73 = A15[A16[10] & 7];
A48[i] = A48[i] | 64;
L151:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L152:
V30 = V30 - 1;
NEXT i;
ENDPROC;
PROCEDURE L188 USES DEVICE_DATA, TEMP_DATA, L276
;
A18[9..0] = A19[9..0];
A18[19..10] = A19[19..10];
A18[20] = 1;
IF (V57) THEN GOTO L189;
CALL L276;
GOTO L190;
L189:
V57 = 0;
CALL L276;
V57 = 1;
L190:
A18[20] = 0;
WAIT 15 USEC;
A18[9..0] = A20[9..0];
CALL L276;
IF (V34 == 0) THEN GOTO L191;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L193;
L191:
IF (V74) THEN GOTO L192;
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A24[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L193;
L192:
DRSCAN V24, A29[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L193:
IF (!V40) THEN V39 = 1;
ENDPROC;
PROCEDURE L194 USES DEVICE_DATA, TEMP_DATA, L290, L276, L188, L305;
V39 = 0;
V40 = 1;
IF (V49) THEN CALL L290;
IF (V34 == 1) THEN GOTO L195;
V30 = V15;
V31 = V30 + (V24 - 1);
GOTO L196;
L195:
V30 = 0;
V31 = V24 - 1;
L196:
V28 = 0;
IF ((V10 & 64512) == 1024) THEN GOTO L197;
IF ((V10 & 64512) == 2048) THEN GOTO L204;
GOTO L207;
L197:
IF (V29 == 0) THEN
A19[9..0] = $042;
IF (V29 == 0) THEN
A19[19..10] = $042;
IF (V29 == 1) THEN
A19[9..0] = $03E;
IF (V29 == 1) THEN
A19[19..10] = $062;
IF (V29 == 2) THEN
A19[9..0] = $03E;
IF (V29 == 2) THEN
A19[19..10] = $03E;
V81 = 0;
IF ((V10 >= 1059) && (V10 <= 1172)) THEN
V28 = 4;
IF (V28 == 0) THEN GOTO L198;
A18[9..0] = $396;
CALL L276;
DRSCAN V22, A27[(V22 - 1)..0];
L198:
FOR i = 0 TO V28;
IF (i == V28) THEN V81 = 1;
PUSH i;
FOR j = 0 TO 4;
IF (V10 > 1172) THEN GOTO L200;
k = 10 * j;
A20[9..0] = A36[(k + 9)..k];
PUSH j;
CALL L188;
IF (V29 != 0) THEN GOTO L199;
A19[9..0] = $03E;
CALL L188;
A19[9..0] = $042;
L199:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L200:
IF (V10 < 1059) THEN GOTO L202;
k = 10 * j;
A20[9..0] = A37[(k + 9)..k];
PUSH j;
CALL L188;
IF (V29 != 0) THEN GOTO L201;
A19[9..0] = $03E;
CALL L188;
A19[9..0] = $042;
L201:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L202:
NEXT j;
IF (V81) THEN GOTO L203;
A18[9..0] = $396;
CALL L276;
POP i;
DRSCAN V22, A27[(((i + 2) * V22) - 1)..((i + 1) * V22)];
PUSH i;
L203:
POP i;
NEXT i;
GOTO L212;
L204:
IF (V29 == 0) THEN
A19[9..0] = $03A;
IF (V29 == 0) THEN
A19[19..10] = $03A;
IF (V29 == 1) THEN
A19[9..0] = $036;
IF (V29 == 1) THEN
A19[19..10] = $052;
IF (V29 == 2) THEN
A19[9..0] = $036;
IF (V29 == 2) THEN
A19[19..10] = $036;
FOR i = 0 TO (V33 - 1);
V57 = 1;
j = 10 * i;
A20[9..0] = A38[(j + 9)..j];
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L205;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L205:
NEXT j;
PUSH i;
CALL L188;
IF (V29 != 0) THEN GOTO L206;
A19[9..0] = $036;
V57 = 1;
CALL L188;
A19[9..0] = $03A;
L206:
POP i;
V30 = V30 + V24;
V31 = V31 + V24;
NEXT i;
GOTO L212;
L207:
IF (V29 == 0) THEN
A19[9..0] = $04A;
IF (V29 == 0) THEN
A19[19..10] = $04A;
IF (V29 == 1) THEN
A19[9..0] = $046;
IF (V29 == 1) THEN
A19[19..10] = $05E;
IF (V29 == 2) THEN
A19[9..0] = $046;
IF (V29 == 2) THEN
A19[19..10] = $046;
IF ((V10 & 64512) == 4096) THEN
A20[9..0] = $032;
IF ((V10 & 64512) == 8192) THEN
A20[9..0] = $02E;
IF (V10 != 8192) THEN GOTO L208;
A18[9..0] = $04E;
CALL L276;
L208:
IF (!V45) THEN GOTO L209;
b = 0;
CALL L305;
L209:
CALL L188;
IF (V29 != 0) THEN GOTO L210;
A19[9..0] = $046;
CALL L188;
A19[9..0] = $04A;
L210:
IF (!V45) THEN GOTO L211;
b = 1;
CALL L305;
L211:
V30 = V30 + V24;
V31 = V31 + V24;
L212:
V15 = V30;
IF (!V39 || (V34 == 1)) THEN
GOTO L213;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L213:
ENDPROC;
PROCEDURE L222 USES DEVICE_DATA, TEMP_DATA, L276;
V31 = 0;
A18[9..0] = $01E;
CALL L276;
IF ((V11 == 1035) || ((V11 & 64512) == 1024)) THEN GOTO L226;
IF ((V11 == 2069) || ((V11 & 64512) == 2048)) THEN GOTO L229;
IF ((V11 == 4097) || (V11 == 4869) || ((V11 & 64512) == 4096)) THEN GOTO L232;
IF ((V11 == 8192) || (V11 == 8193) || (V11 == 8965) || ((V11 & 64512) == 8192)) THEN GOTO L235;
IF (V11 == 0) THEN GOTO L223;
L223:
i = V11;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L224;
V31 = V31 + 790;
A28[V31 - i] = 1;
L224:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L225;
V31 = V31 + 790;
A28[V31 - i] = 0;
L225:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L226:
i = V11 - 1035;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L227;
V31 = V31 + 790;
A28[V31 - 619 - i] = 1;
A28[V31 - 467 - i] = 1;
A28[V31 - 315 - i] = 1;
A28[V31 - 163 - i] = 1;
A28[V31 - 11 - i] = 1;
L227:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L228;
V31 = V31 + 790;
A28[V31 - 619 - i] = 0;
A28[V31 - 467 - i] = 0;
A28[V31 - 315 - i] = 0;
A28[V31 - 163 - i] = 0;
A28[V31 - 11 - i] = 0;
L228:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L229:
i = V11 - 2069;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L230;
V31 = V31 + 790;
A28[V31 - 765 - i] = 1;
A28[V31 - 629 - i] = 1;
A28[V31 - 613 - i] = 1;
A28[V31 - 477 - i] = 1;
A28[V31 - 461 - i] = 1;
A28[V31 - 325 - i] = 1;
A28[V31 - 309 - i] = 1;
A28[V31 - 173 - i] = 1;
A28[V31 - 157 - i] = 1;
A28[V31 - 21 - i] = 1;
L230:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L231;
V31 = V31 + 790;
A28[V31 - 765 - i] = 0;
A28[V31 - 629 - i] = 0;
A28[V31 - 613 - i] = 0;
A28[V31 - 477 - i] = 0;
A28[V31 - 461 - i] = 0;
A28[V31 - 325 - i] = 0;
A28[V31 - 309 - i] = 0;
A28[V31 - 173 - i] = 0;
A28[V31 - 157 - i] = 0;
A28[V31 - 21 - i] = 0;
L231:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L232:
i = V11 - 4097;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L233;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L233:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L234;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L234:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L235:
IF (V11 == 8192) THEN GOTO L238;
i = V11 - 8193;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L236;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L236:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L237;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L237:
V31 = V31 + 1;
NEXT j;
GOTO L239;
L238:
DRSCAN V17, A28[(V17 - 1)..0];
L239:
A18[9..0] = $392;
CALL L276;
V10 = V11;
ENDPROC;
PROCEDURE L247 USES DEVICE_DATA, TEMP_DATA, L290, L71, L276;
V30 = V14;
IF (V49) THEN CALL L290;
V31 = V30 + (V23 - 1);
IF ((V10 & 64512) == 0) THEN GOTO L248;
IF ((V10 & 64512) == 1024) THEN GOTO L249;
IF ((V10 & 64512) == 2048) THEN GOTO L251;
IF ((V10 & 64512) == 4096) THEN GOTO L253;
IF ((V10 & 64512) == 8192) THEN GOTO L254;
L248:
CALL L71;
GOTO L256;
L249:
IF (V10 > 1172) THEN GOTO L250;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A34[(j + 9)..j];
PUSH i;
CALL L276;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L71;
L250:
IF (V10 < 1059) THEN GOTO L256;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A35[(j + 9)..j];
PUSH i;
CALL L276;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L71;
GOTO L256;
L251:
FOR i = 0 TO (V33 - 1);
j = 10 * i;
A18[9..0] = A38[(j + 9)..j];
V57 = 1;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L252;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L252:
NEXT j;
PUSH i;
CALL L276;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L71;
POP i;
NEXT i;
GOTO L256;
L253:
A20[9..0] = $032;
GOTO L255;
L254:
A20[9..0] = $02E;
L255:
A18[9..0] = A20[9..0];
CALL L276;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L71;
L256:
V14 = V30;
ENDPROC;
PROCEDURE L257 USES DEVICE_DATA, TEMP_DATA, L30, L287, L276
, L222, L247
;
IF (V107 == 0) THEN GOTO L271;
CALL L30;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L258;
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L258:
NEXT i;
IF (!V106 && (V75 == 0)) THEN
GOTO L271;
IF (V106 && (V75 == 0)) THEN
GOTO L263;
V11 = 0;
CALL L222;
CALL L247;
L263:
IF (!V106) THEN GOTO L271;
IF (V4 == 1) THEN
A18[9..0] = $03E;
IF ((V4 == 2) || (V4 == 256)) THEN
A18[9..0] = $3FF;
CALL L276;
CALL L30;
V75 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L266;
IF ((A17[i] & 16) != 0) THEN GOTO L264;
A17[i] = A17[i] | 16;
GOTO L265;
L264:
A17[i] = A17[i] & ~16;
L265:
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L266:
NEXT i;
IF (V75 == 0) THEN GOTO L271;
V11 = 0;
CALL L222;
CALL L247;
L271:
V75 = 0;
ENDPROC;
PROCEDURE L272 USES DEVICE_DATA, TEMP_DATA
, L275
;
IF (V4 == 2) THEN CALL L275;
ENDPROC;
PROCEDURE L275 USES DEVICE_DATA, TEMP_DATA;
V32 = 8983;
ENDPROC;
PROCEDURE L276 USES DEVICE_DATA, TEMP_DATA;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L277;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L277;
V27 = 50;
A32[49..0] = A30[49..0];
L277:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L278;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L280;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L281;
L278:
IF ((A17[i] & 2) != 0) THEN GOTO L279;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L281;
L279:
IF (!V57) THEN GOTO L280;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L281;
L280:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
L281:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L282;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L282:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L283;
STATE IDLE;
WAIT 3 CYCLES;
L283:
ENDPROC;
PROCEDURE L287 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L288;
V2 = A12[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L289;
L288:
IF (V74) THEN A30[V24] = 0;
L289:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L290 USES DEVICE_DATA, TEMP_DATA, L293, L294, L295, L296;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L291;
V2 = A12[i];
IF (((V10 >= 1035) && (V10 <= 1197)) ||
(V10 == 0)) THEN
CALL L293;
IF ((V10 >= 2069) && (V10 <= 2074)) THEN
CALL L294;
IF (((V10 >= 4097) && (V10 <= 4114)) ||
((V10 >= 4869) && (V10 <= 4886))) THEN
CALL L295;
IF (((V10 >= 8192) && (V10 <= 8210)) ||
((V10 >= 8965) && (V10 <= 8982))) THEN
CALL L296;
GOTO L292;
L291:
IF (V74) THEN A30[V24] = 0;
L292:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
PROCEDURE L293 USES DEVICE_DATA, TEMP_DATA;
V25 = A1[V2];
V26 = A5[V2];
ENDPROC;
PROCEDURE L294 USES DEVICE_DATA, TEMP_DATA;
V25 = A2[V2];
V26 = V25;
ENDPROC;
PROCEDURE L295 USES DEVICE_DATA, TEMP_DATA;
V25 = A3[V2];
V26 = V25;
ENDPROC;
PROCEDURE L296 USES DEVICE_DATA, TEMP_DATA;
V25 = A4[V2];
V26 = V25;
ENDPROC;
PROCEDURE L305 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L306;
V2 = A12[i];
j = j + (A3[V2] - 1);
FOR V27 = 27 TO 31;
A30[j - V27] = b;
NEXT V27;
L306:
j = j + 1;
NEXT i;
ENDPROC;
' END OF FILE
CRC 73AE;
