Приклад 1. 

pip install 'SomeProject'

pip install 'SomeProject==1.4' 

pip install 'SomeProject>=1,<2' 

pip install 'SomeProject~=1.4.2'

Приклад 2.
>>> g = nx.Graph()
>>> gd = nx.DiGraph()
>>> mg = nx.MultiGraph()
>>> mgd = nx.MultiDiGraph()


Приклад 3.
>>> g.add_node(1)
>>> g.add_node(k)
>>> g.add_nodes_from([2 ,3])
>>> h = nx.path_graph(10)
>>> g.add_nodes_from(h)
>>> g.remove_node(2)  


Приклад 4.
import networkx as nx
import math
g=nx.Graph()
h = nx.path_graph(10)
g.add_nodes_from(h) 
g.add_node(math.cos)
fh=open('tmp.txt','w')
g.add_node(fh)
print(g.nodes())


Приклад 5.
>>> g.add_edge(0,3)
>>> e=(2,3)
>>> g.add_edge(*e)
>>> g.add_edges_from([(1 ,2) ,(1 ,3)])
>>> g.add_edges_from(h.edges())
>>> g.remove_edge(1,2)

>>> import networkx as nx
>>> g = nx.Graph()
>>> g.add_edges_from([(1 ,2) ,(1 ,3)])
>>> g.add_node('a')
>>> g.number_of_nodes()

>>> g.order()



>>> g.number_of_edges()
g.size()

>>> g.nodes()

>>> g.edges()
[(1, 2), (1, 3)]
>>> g.neighbors(1)

>>> g.degree(1)


>>> g.add_node(1, time='5pm')
>>> g.node[1]['time']

>>> g.node[1] 

>>> g.add_edge(1, 2, weight=4.0 )
>>> g[1][2]['weight'] = 5.0
>>> g[1][2] 


>>> g.add_edge(1,2)
>>> for node in g.nodes():
... 	print (node, g.degree(node)) 


>>> g.add_edge(1,3,weight=2.5)
>>> g[1][2]['weight'] = 1.5
>>> for n1,n2,attr in g.edges(data=True):
... 	print(n1,n2,attr['weight']) 


>>> mg = nx.MultiGraph()
>>> mg.add_weighted_edges_from([(1,2,.5), (1,2,.75),(2,3,.5)])
>>> mg.degree()


>>> petersen=nx.petersen_graph()
>>> tutte=nx.tutte_graph()
>>> maze=nx.sedgewick_maze_graph()
>>> tet=nx.tetrahedral_graph() 



>>> K_5=nx.complete_graph(5)

>>> K_3_5=nx.complete_bipartite_graph(3,5) 


>>> barbell=nx.barbell_graph(10,10)

>>> lollipop=nx.lollipop_graph(10,20) 



>>> er=nx.erdos_renyi_graph(10,0.15) 

>>> ws=nx.watts_strogatz_graph(10,3,0.1) 



>>> ba=nx.barabasi_albert_graph(10,5)

>>> red=nx.random_lobster(20,0.9,0.9) 


>>> import pylab as plt
>>> g = nx.erdos_renyi_graph(10,0.15)
>>> nx.draw(g)
>>> nx.draw_random(g)
>>> nx.draw_circular(g)
>>> nx.draw_spectral(g)
>>> plt.savefig('graph.png')


>>> import networkx as nx
>>> import pylab as plt
>>> g = nx.Graph()
>>> g.add_edge(1,2,weight=0.1)
>>> g.add_edge(2,3,weight=1.5)
>>> g.add_edge(1,3,weight=1.0)
>>> g.add_edge(3,4,weight=2.2)
>>> nx.draw_networkx(g,
 	pos=nx.spring_layout(g),
 	arrows=True, with_labels=True)
>>> print(nx.shortest_path(g,2,4))



>>> D = nx.Graph()
>>>D=nx.dodecahedral_graph()
>>> nx.draw_networkx(D,
 	pos=nx.spring_layout(D),
 	arrows=True, with_labels=True) 


import matplotlib.pyplot as plt
plt.ylabel('Numbers')
<matplotlib.text.Text object at 0x05678430>
plt.ylabel('Numbers')
<matplotlib.text.Text object at 0x05678430>
plt.plot([1,1.1,1.2,2,3.1,3.5,4])
[<matplotlib.lines.Line2D object at
0x0569B910>]
plt.show() 


import matplotlib.pyplot as plt
plt.plot([1,2,3,4], [1,4,9,16], 'ro')
plt.axis([0, 6, 0, 20])
plt.xlabel("Modified plot")
plt.show() 


import numpy as np
import matplotlib.pyplot as plt
 
t = np.arange(0., 5., 0.2)
 
plt.plot(t, t, 'r??', t, t**2, 'bs', t, t**3, 'g^')
plt.show()









