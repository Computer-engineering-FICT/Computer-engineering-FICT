#example1
>>> str(), str([l,2]), str((3,4)), str({"x": 1})
('', '[1, 2]', '(3, 4)', "{'х': 1}")
>>> print("рядок1\nрядок2")
Рядок1
рядок2
   #"strict"-при невідомому символі Unicodedecodeerror
   #"replace"-при невідомому символі \ufffd)
   #"ignore" - невідомі символи ігноруються:

#example2
>>> repr("Рядок"), repr([1,2,3]),repr({"x": 5})
("'Рядок'", '[1, 2, 3]', "{'x': 5}")
#Інтерпретатор:
>>> repr("рядок1\nрядок2")
"'рядок1\\nрядок2'"
#Компілятор:
print(repr("рядок1\nрядок2"))
'рядок1\nрядок2'

#example3
>>> ascii([1, 2, 3]), ascii({"х":5})
('[1, 2, 3]', "{'х': 5}")
>>> ascii("рядок")
"'\\u0440\\u044f\\u0434\\u043e\\u043a'"

#example4
>>>len("Python"), len("\r\n\t"),len(r"\r\n\t")
(6, 3, 6)
>>> lеn("рядок")
5
>>> a=bytes("рядок", "utf-8")
>>> len(a)
10
>>> a=bytearray("рядок", "utf-8")
>>> len(a)
10

#example5
>>> s1, s2 = " str\n\r\v\t", "strstrstrokstrstrstr"
>>> "'%s' ‐ '%s'" % (s1.strip(), s2.strip("tsr"))
"'str' ‐ 'ok'"
>>> s1, s2 = " str\n\r\v\t", "strstrstrokstrsmrstr"
>>> "'%s' ‐ '%s'" % (s1.strip(), s2.strip("tsr"))
"'str' ‐ 'okstrsm'"

#example6
>>> s1, s2 = " \tstr ", "strstrstrokstrstrstr"
>>> "'%s' ‐ '%s'" % (s1.lstrip(), s2.lstrip("tsr"))
"'str ' ‐ 'okstrstrstr'"

#example7
>>> s1, s2 = " str\t ", "strstrstrokstrstrstr"
>>> "'%s' ‐ '%s'" % (s1.rstrip(), s2.rstrip("tsr"))
"' str' ‐ 'strstrstrok'"

#example8
>>> s = "word1 word2 word3"
>>> s.split(),
['word1','word2','word3']
>>> s.split(None, 1)
['word1','word2 word3']
>>> s = "word1\nword2\nword3"
>>> s.split("\n")
['word1', 'word2', 'word3']

#example9
>>> s = "word1 word2 word3 "
>>> s.split()
 ['word1', 'word2', 'word3']

>>> s = ",,word1,,word2,,word3,,"
>>> s.split(",")
['','','word1','','word2','','word3','','']
>>> "1,,2,,3".split(",")
['1', '', '2', '', '3']

>>> "word1 word2 word3".split("\n")
['word1 word2 word3']

#example10
>>> s = "word1 word2 word3"
>>> s.rsplit()
['word1', 'word2', 'word3']
>>> s = "word1 word2 word3"
s.rsplit(None,1)
['word1 word2', 'word3']
>>> "word1\nword2\nword3".rsplit("\n")
['word1', 'word2', 'word3']

#example11
>>> "word1\nword2\nword3".splitlines()
[ 'word1', 'word2', 'word3']
# - True – роздільник включено у список
>>> "word1\nword2\nword3".splitlines(True)
['word1\n', 'word2\n', 'word3']
# - False - еквівалентно пустому параметру
>>> "word1\nword2\nword3".splitlines(False)
[ 'word1', 'word2', 'word3']
>>>"word1 word2 word3".splitlines()#Роздільника немає
['word1 word2 word3']

#example12
>>> "word1 word2 word3".partition(" ")
('word1', ' ', 'word2 word3')
>>> "word1 word2 word3".partition("\n ")
('word1 word2 word3', '', '')

#example13
>>> "word1 word2 word3".rpartition(" ")
( 'word1 word2 ', ' ', 'word3' )
>>> "word1 word2 word3".rpartition("\n" )
('', '', 'word1 word2 word3')

#example14
>>> "=>" .join(["word1", "word2", "word3"] )
'word1=>word2=>word3'
>>> " ".join(("word1", "word2", "word3"))
'word1 word2 word3'

#example15
>>> " ".join(("word1", "word2", 5))
Traceback (most recent call last):
 File "<input>", line 1, in <module>
Typeerror: sequence item 2: expected str
instance, int found

#example16
>>> s = "Python"
>>> arr = list(s); arr # Перетворимо рядок у
список
['Р', 'у', 't', 'h', 'о', 'n']
>>> arr[0] = "J"; arr # Змінюємо елемент по
індексу
['J', 'у', 't', 'h', 'о', 'n']
>>> s = "".join(arr); s # Перетворимо список у
рядок
'Jython'

#example17
>>> s = "python"
>>> b = bytearray(s, "cp1251"); b
bytearray(b'python')
>>> b[0] = ord("j" ); b
bytearray(b'jython')
>>> s = b.decode("cp1251"); s
'jython'

#example18
>>> print(chr(1055))
П
>>> print (ord ( "П"))
1055

#example19
>>> import locale
>>> # Для кодування windows‐1251
>>> locale.setlocale(locale.LC_ALL, "Ukrainian_Ukraine.1251")
' Ukrainian_Ukraine.1251'
>>># встановлюємо локаль за замовчуванням 
>>> locale.setlocale(locale.LC_ALL, "")
'Russian Russia.1251'
>>> #отримуємо поточне значення локалі для всіх категорій 
>>> locale.getlocale()
( 'Russian_Russia', '1251')
>>> # Одержуємо поточне значення категорії locale. LC COLLATE
>>> locale.getlocale(locale.LC_COLLATE)
( 'Russian_Russia', '1251')

#example20
>>> locale. localeconv()
{'p_sign_posn': 1, 'n_cs_precedes': 0,
'negative_sign': '-', 'decimal_point': ',',
'int_curr_symbol': 'RUB', 'thousands_sep':
'\xa0', 'mon_thousands_sep': '\xa0',
'mon_decimal_point': ',', 'n_sign_posn': 1,
'positive_sign': '', 'p_cs_precedes': 0,
'currency_symbol': '?', 'p_sep_by_space': 1,
'mon_grouping': [3, 0], 'grouping': [3, 0],
'n_sep_by_space': 1, 'frac_digits': 2,
'int_frac_digits': 2}

#example21
>>> print("рядок".upper())
РЯДОК

>>> print("РЯДОК".lower())
рядок

#example22
>>> print("РЯДОК рядок".swapcase())
рядок РЯДОК

#example23
>>> print("рядок рядок".capitalize())
Рядок рядок

#example24
>>> s = "перша буква кожного слова стане
прописною"
>>> print(s.title())
Перша Буква Кожного Слова Стане Прописною

#example25
>>> "Python".casefold()=="python".casefold()
True
>>> "grosse".casefold() == "groβe".casefold()
False

#example26
>>> s = "приклад приклад Приклад"
>>> s.find(" при")
7
>>> s.find(" При")
15
>>> s.find("тест")
-1
>>> s.find(" при",9)
-1
s.find(" при",0,6)
-1
s.find(" при",7,12)
7

#example27
>>> s = "приклад приклад Приклад"
>>> s.index(" при")
7
s.index(" при", 7, 12)
7
s.index(" При", 1)
15
>>> s.index("тест")
Traceback (most recent call last):
 File "<input>", line 1, in <module>
Valueerror: substring not found

#example28
>>> s = "приклад приклад Приклад Приклад"
>>> s.rfind("при")
8
s.rfind("При")
24
s.rfind("тecт")
-1
>>> s.find(" при",0,61)
7
s.find(" При",10,20)
15

#example29
>>> s = "приклад приклад Приклад Приклад"
>>> s.rindex(" при")
7
>>> s.rindex(" при",0,11)
7
>>> s.rindex("тест")
Traceback (most recent call last):
 File "<input>", line 1, in <module>
Valueerror: substring not found

#example30
>>> s = "приклад приклад Приклад Приклад"
>>> s.count(" при")
1
>>> s.count(" при", 6)
1
>>> s.count(" При")
2
>>> s.count("тecт")
0

#example31
>>> "0123".isalnum()
True
>>> "123аbс".isalnum()
True
>>> "рядок".isalnum()
True
>>> "".isalnum()
False
>>> "123 аbс".isalnum()
False
>>> "аbс, 123.".isalnum()
False

#example32
>>> "string".isalpha()
True
>>> "рядок".isalpha()
True
>>> "".isalpha()
False
>>> "123аbс".isalpha()
False
>>> "str str".isalpha()
False
>>> "st,st". isalpha()
False

#example33
>>> "0123".isdigit()
True
>>> "1.3".isdigit()
False
>>> "123abc".isdigit()
False
>>> "abcl23".isdigit()
False

#example34
>>> "123".isdecimal()
True
>>> "123cтp".isdecimal()
False
>>> "⅔".isdecimal()
False

#example35 - Приклад аналізу рядка з використанням методу split() та isdecimal()
a = input("Ведіть число")
c = a.split(".")
print(c)
if len(c)==2:
if c[0].isdecimal() and c[1].isdecimal():
 result = float(a)
print("float:", result)
else: print("str:", a)
elif len(c)==1:
if c[0].isdecimal():
 result = int(a)
print("int:", result)
else: print("str:", a)

#example36
>>> "\u2155".isnumeric() # символ ⅕
True
>>> "\u2155".isdigit ()
False
>>> print("\u2155")
⅕
>>> "⅕".isnumeric()
True
>>> "⅕".isdigit()
False

#example37
>>> "STRING".isupper()
True
>>> "РЯДОК".isupper()
True
>>> "".isupper()
False
>>> "String1". isupper()
False
>>> "РЯДОК,123".isupper()
True
>>> "123".isupper()
False
>>> "string".isupper(), "String".isupper()
(False, False)

#example38
>>> "srting".islower()
True
>>> "рядок".islower()
True
>>> "".islower()
False
>>> "string1".islower()
True
>>> "s tr, 123".islower()
True
"123".islower()
False
>>> "STRING".islower(), "Рядок".islower()
(False, False)

#example39
>>> "Str Str".istitle()
True
>>> "Стр Стр".istitle()
True
>>> "Str Str 123".istitle()
True
>>> "Стр Стр 123".istitle()
True
>>> "Str str".istitle(), "Стр cтp".istitle()
(False, False)
>>> "".istitle(), "123".istitle()
(False, False)

#example40
>>>"123".isprintable()
True
>>> "РНР Python".isprintable()
True
>>> "\n".isprintable()
False

#example41
>>> "".isspace()," \n\r\t".isspace(),"strstr".isspace()
(False, True, False)

#example42
>>> "s".isidentifier()
True
>>> "func".isidentifier()
True
>>> "123func".isidentifier()
False

#example43
>>> import keyword
>>> keyword. iskeyword ("else")
True
>>> keyword.iskeyword("elsewhere")
False

#example44 -  Додавання довільної кількості чисел
print("Введіть слово 'stop' для отримання
результату")
suma = 0
while True:
    x = input("Введіть число: ")
    if x == "stop":
        break # вихiд з циклу
    if x == "":
        print("Ви не ввели значення!")
        continue
    if x[0] == "-": # Якщо першим символом є мінус
        if not x[1:].isdigit(): # Якщо фрагмент не складається з цифр
            print("Необхідно ввести число, а не рядок!")
            continue
    else: # Якщо мінуса немає, то перевіряємо весь рядок
        if not x.isdigit(): # Якщо рядок не складається з цифр
            print("Необхідно ввести число, а не рядок!")
            continue
    х = int(x) # Перетворюємо рядок в число
    suma += х
print("Cyмa чисел дорівнює:", suma)
