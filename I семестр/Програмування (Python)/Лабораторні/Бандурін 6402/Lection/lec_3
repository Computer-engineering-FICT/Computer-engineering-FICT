Ex_1
size=int(input("write the number"))
if size >= 0:
    print('number positive')
else:
    print('number negative')

Ex_2

>>> size = 1
>>> size < 0
False
>>> size = 0
>>> size < 0
False
>>> size = -1
>>> size < 0
True

Ex_3

>>> True + True
2
>>> True - False
1
>>> True * False
0

Ex_4

>>>type(2147483647),
type(999999999999999999999999)
(<class 'int'>, <class 'int'>)
Ex_5
# Десяткове число
>>> 123445567788778
123445567788778
# Двійкове число (починається з префікса 0b)
>>> 0b001101011010101010101010101
28136789
# Вісімкове число (починається з префікса 0o)
>>> 0o1237645
343973
# Шістнадцяткове число (починається з префікса 0x)
>>> 0xdec1F
912415

Ex_6

>>> float(5.4)
5.4
>>> float(8.9e-4)
0.00089
>>> float(8.9e-12)
8.9e-12
Ex_7
>>> 2+5J
(2+5j)
>>> 23j
23j
>>> 11+3j, 23+12j
((11+3j), (23+12j))
Ex_8

my_variable = None
if my_variable is None:
    print('my_variable is None')
else:
    print('my_variable is not None')

Ex_9

>>> S = "Spam"
>>> len(S) #довжина
4
>>> S[0] #перший елемент в S
"S"
>>> S[1] #другий елемент зліва
"p"


Ex_10

>>> list1=[1,2,3,4]
>>> print(list1)
[1, 2, 3, 4]
>>> list2 = [x**2 for x in range(10)]
>>> print(list2)
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]
>>> list3 = list("abcde")
>>> print(list3)
['a', 'b', 'c', 'd', 'e']
Ex_11
>>> for s in "one","two": print(s)
one #цикл за значеннями кортежу
two
>>>p = (1.2, 3.4, 0.9)#точка в тривимірному просторі
>>> print(p)
(1.2, 3.4, 0.9)
>>> p1 = 1, 3, 9 #без дужок
>>> print(p1)
(1, 3, 9)
>>> p2 = 1, 2, 3, 4, #кома ігнорується
>>> print(p2)
(1, 2, 3, 4)
Ex_12
>>> for i in range(5):
print(i)
0
1
2
3
4
>>> for i in range(3, 6):
 print(i)
3
4
5
>>> for i in range(4, 10, 2):
 print(i)
4
6
8
>>> for i in range(0,‐10,‐2):
print(i)
0
‐2
‐4
‐6
‐8
Ex_13
dan={'Name':'Ivan','Age':17,'Course':1}
print(dan)
print('Name: ',dan['Name'])
------
{'Course': 1, 'Age': 17, 'Name': 'Ivan'}
Name: Ivan
Ex_14
Group={"Galenko","Petrenko","Sydorko"}
Total=len(Group)
print(Group)
print("Total: ",Total)
if " Petrenko " in Group:
print("Petrenko is a student")
Group.add("Trump")
print(Group)
------
{'Galenko', 'Sydorko', 'Petrenko'}
Total: 3
Petrenko is a student
{'Galenko', 'Sydorko', 'Trump', 'Petrenko'}
Ex_15
>>> arr = [1,2,3]
>>> arr[0]=0 #змінюємо перший елемент списку
>>> arr
[0, 2, 3]
Ex_16
>>> strl = "авто"
>>> str2 = "транспорт"
>>> str3 = strl + str2 # Конкатенація
>>> print(str3)
автотранспорт
Ex_17
Вивести елементи списку можна так:
>>> arr = [1, 2, 3]
>>> i = iter(arr)
>>> next(i)
1
>>> next(i)
2
>>> next(i)
3
Ex_18
Механізм ітераторів для словника (тип dict)
На кожній ітерації повертається ключ:
d = {"х": 1, "y": 2}
i = iter(d)
c = next(i)
print(c,':',d[c])
c = next(i)
print(c,':',d[c])
Ex_19
>>> for i in [1, 2]: print(i)
1
2
Ex_20
>>> for i in "Рядок": print(i)
Р
я
д
о
к
Ex_21
>>> d = {"х": 1, "y": 2}
>>> for key in d:
print(d[key])
1
2
Ex_22
>>> х = y = [1, 2] #Наче створили два об'єкти
>>> х, y
([1, 2], [1, 2])
>>> y[1] = 100 # Змінюємо другий елемент
>>> х, y
([1, 100], [1, 100])
Як видно з прикладу, зміна значення в змінній y
привела також до зміни значення в змінній х.
Таким чином, обидві змінні посилаються на той самий
об'єкт, а не на два різні об'єкти.
Щоб одержати два об'єкти, необхідно робити
роздільне присвоювання:
>>> х = [1, 2]
>>> y = [1, 2]
>>> y[l] = 100 # Змінюємо другий елемент
>>> х, y
([1, 2], [1, 100])
Ex_23
>>> x = y = [1,2] #один об'єкт
>>> x is y
True
>>> x = [1,2] #різні об'єкти
>>> y = [1,2] #різні об'єкти
>>> x is y
False
Ex_24
З метою підвищення ефективності коду
інтерпретатор виконує кеширування малих цілих чисел і
невеликих рядків.
Це означає, що якщо ста змінним присвоєне число 2,
то в цих змінних буде збережено посилання на той
самий об'єкт.
>>> х = 2; y = 2; z = 2
>>> х is y, y is z
(True, True)

>>> import sys # Підключаємо модуль sys
>>> sys.getrefcount(2)
304
Ex_25
>>> х, y, z = 1, 2, 3
>>> х, y, z
(1, 2, 3)
Ex_26
>>> х, y = 1, 2; х, y
(1, 2)
>>> х, y = y, х; х, y
(2, 1)
Ex_27
>>> х, y, z = ”123” # Рядок
>>> х, y, z
('1', '2', '3')
>>> х, y, z = [1, 2, 3] # Список
>>> х, y, z
[1, 2, 3]
>>> х, y, z = (1, 2, 3) # Кортеж
>>> х, y, z
(1, 2, 3)
>>> [х, y, z] = (1, 2, 3)#Список ліворуч, кортеж праворуч
>>> х, y, z
(1, 2, 3)
Ex_28
>>>х,y,*z=(1,2,3,4)
>>>х,y,z
(1,2,[3, 4])
>>>х,*y,z = ( 1,2,3,4)
>>>х,y,z
(1,[2,3],4)
>>>*х,y,z =(1,2,3,4)
>>>х,y,z
([1,2],3,4)
>>>х,y,*z =(1,2,3)
>>>х,y,z
(1,2,[3])
>>>х,y*z=1,2)
>>>х,y,z
(1,2,[])
>>> *х, y, *z = (1, 2, 3, 4)
Syntaxerror: two starred expressions in
assignment
Ex_29
>>> a = 'Рядок' #тип str
>>> a = 7 #тепер змінна має тип int
Ex_30
>>>bool(0),bool(l),bool(""),bооl("Рядок"),bool([l,2])
(False, True, False, True, True)
>>>bool([])
False
Ex_31
>>> int(7.5),int("71")
(7, 71)
>>>int("71",10),int("71",8),int("0o71",8),int("A",16)
(71, 57, 57, 10)
Ex_32
>>> float(7),float("7.l")
(7.0, 7.1)
>>> float("Infinity"), float("-inf")
(inf, -inf)
>>> float("Infinity") + float("-inf")
nan
Ex_33
>>> list("12345") #Рядок str list
['1', '2', '3', '4', '5']
>>> list("Рядок") #Рядок str list
['Р', 'я', 'д', 'о', 'к']
>>> list({1,2,3,4,5}) #Множина set list
[1, 2, 3, 4, 5]
>>> list({"x": 5, "y": 10})
['x', 'y'] #Словник dict list
Ex_34
>>> tuple("123456") #Рядок str tuple
('1', '2', '3', '4', '5', '6')
>>> tuple([1,2,3,4,5]) #Список list tuple
(1, 2, 3, 4, 5)
>>> tuple(({"x": 5, "y": 10}))
('x', 'y') #Словник dict tuple
Ex_35
х = input("x = ") # Уводимо 5
y = input("y = ") # Уводимо 12
print (х + y)
512
x = str
y = ing
string
Ex_36
х = int(input("x = ")) # Вводимо 5
y = int(input("y = ")) # Вводимо 12
print (х + y)
17
Ex_37
>>> x=20; x
20
>>> del x
>>> x
Traceback (most recent call last):
File "<input>", line 1, in <module>
Nameerror: name 'x' is not defined

