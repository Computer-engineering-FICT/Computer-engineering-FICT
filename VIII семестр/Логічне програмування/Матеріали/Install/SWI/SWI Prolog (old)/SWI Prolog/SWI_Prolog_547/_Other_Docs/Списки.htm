<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0070)http://www.ctc.msiu.ru/materials/Book2/ch_10_prolog/12_list/index.html -->
<HTML><HEAD><TITLE>Списки</TITLE>
<META http-equiv=Content-Type content="text/html; charset=koi8-r"><LINK 
href="Списки.files/list.css" type=text/css rel=stylesheet>
<SCRIPT language=javascript1.2 src="Списки.files/cookie.js">
</SCRIPT>

<SCRIPT language=javascript1.2>
function onLoad () {
  parent.nav.set_cookie ("Source", "./ch_10_prolog/12_list/index.html", 1000);
}
</SCRIPT>

<META content="MSHTML 6.00.2900.2180" name=GENERATOR></HEAD>
<BODY><A 
href="http://www.ctc.msiu.ru/materials/Book2/ch_10_prolog/11_number_task/index.html"><IMG 
alt="Предыдущий раздел" src="Списки.files/prev.gif" border=0></A> <A 
href="http://www.ctc.msiu.ru/materials/Book2/ch_10_prolog/index.html"><IMG 
alt="Уровень выше" src="Списки.files/up.gif" border=0></A> <A 
href="http://www.ctc.msiu.ru/materials/Book2/ch_11_ruby/index.html"><IMG 
alt="Следующий раздел" src="Списки.files/next.gif" border=0></A> <A 
onmousedown="document.images['cont'].src='../../Images/ContentsDown.gif'" 
onmouseout="document.images['cont'].src='../../Images/Contents.gif'" 
href="http://www.ctc.msiu.ru/materials/Book2/contents.html"><IMG 
src="Списки.files/Contents.gif" border=0 name=cont></A> 
<H2>Списки</H2><IMG src="Списки.files/blank.gif"> 
<P>Списки - одна из наиболее часто употребляемых структур в Прологе. При записи 
список заключают в квадратные скобки, а элементы списка разделяют запятыми, 
например, <PRE>[слон, лошадь, обезьяна, собака]
</PRE>Это список из четырех атомов - <TT>слон, лошадь, обезьяна, собака</TT>. 
<P>Элементами списка могут быть любые термы Пролога, т.&nbsp;е. атомы, числа, 
переменные и составные термы, что позволяет, в частности, составлять списки из 
списков. Пустой список записывается как <TT>[&nbsp;]</TT>. 
<P>Вот пример списка с несколько более сложной структурой: <PRE>[слон, [ ], X, предок(Х, том), [a,b,c], f(22)]
</PRE>
<P>Первый элемент непустого списка называется <B>головой</B>, а остальная часть 
списка носит название <B>хвост</B>. У списка, состоящего только из одного 
элемента головой является этот единственный элемент, а хвостом - пустой список. 
Обозначение <TT>[H|T]</TT> используется для представления списка с головой 
<TT>H</TT> и хвостом <TT>T</TT>. Если символ <TT>|</TT> помещен перед последним 
термом списка, то это означает, что этот последний терм определяет другой 
список. Полный список получится, если соединить этот подсписок с 
последовательностью элементов, расположенных до черты. 
<P>В следующем примере 1 - голова списка, а <TT>[2, 3, 4, 5]</TT> - хвост. 
Пролог покажет это при помощи сопоставления списка чисел с образцом, состоящим 
из головы и хвоста. <PRE>?- [1, 2, 3, 4, 5] = [Head | Tail].
Head = 1
Tail = [2, 3, 4, 5]
Yes
</PRE>
<P>Здесь <TT>Head</TT> и <TT>Tail</TT> - только имена переменных. Мы могли бы 
использовать <TT>X</TT> и <TT>Y</TT> или какие-нибудь другие имена переменных с 
тем же успехом. Заметим, что хвост списка всегда является списком. Голова, в 
свою очередь, есть элемент списка, что верно и для всех других элементов, 
расположенных до вертикальной черты. Это позволяет получить, скажем, второй 
элемент списка. 
<P><BR><B>Пример</B><BR>Используем анонимные переменные для головы и списка, 
стоящего после черты, если нам нужен только второй элемент списка: <PRE>?- [слон, лошадь, осел, собака] = [_, X | _ ].
X = лошадь
Yes
</PRE>
<P>Рассмотрим несколько процедур обработки списков. Обратите внимание, что все 
они используют рекурсию, в которой терминальное (базовое) правило определено для 
пустого списка. 
<P><BR><B>Пример</B><BR>Напишем предикат для вычисления суммы всех элементов 
списка чисел. <PRE>сумма_списка([],0).
сумма_списка([H|T],S):- number(H), сумма_списка(T,S1),
                        S is S1+H.
</PRE>
<P><BR><B>Пример</B><BR>Предикат <TT>место/3</TT> успешен, если третий аргумент 
есть список, полученный вставкой первого аргумента в произвольное место списка, 
являющегося вторым аргументом. <PRE>место(E, L, [E|L]).
место(E, [H|L], [H|Y]):-  место(E, L,Y).
</PRE>Посмотрим на результаты некоторых запросов, использующих этот предикат. <PRE>?- место(1,[2,3],X).
X = [1, 2, 3] ;
X = [2, 1, 3] ;
X = [2, 3, 1] ;
No

?- место(1,L,[2,1,3]).
L = [2, 3] ;
No

?- место(X,[2,3],[2,1,3]).
X = 1 ;
No
</PRE>
<P><BR><B>Пример</B><BR>Предикат <TT>перестановка/2</TT> выдает списки, 
полученные перестановкой элементов своего первого аргумента. <PRE>перестановка([],[]).
перестановка([H|L],Z):- перестановка(L,Y), место(H,Y,Z).
</PRE>Пример использования: <PRE>?- перестановка([a,b,c],X).
X = [a, b, c] ;
X = [b, a, c] ;
X = [b, c, a] ;
X = [a, c, b] ;
X = [c, a, b] ;
X = [c, b, a] ;
No
</PRE>И, наконец, приведем правило для печати всех возможных перестановок 
списка: <PRE>все_перестановки(L):- перестановка(L,R), write(R), nl, fail.
</PRE>
<P>Первая подцель предиката вычисляет очередную перестановку, печатает ее и 
переходит к последней подцели - <TT>fail</TT>. Эта подцель всегда неуспешна, что 
заставляет Пролог вернуться к началу правила и продолжить поиск решения. Работа 
процедуры завершится, когда все перестановки будут исчерпаны: <PRE>?- все_перестановки(['маркиза', 'ваши прекрасные глаза',
|            'сулят мне смерть от любви']).

[маркиза, ваши прекрасные глаза, сулят мне смерть от любви]
[ваши прекрасные глаза, маркиза, сулят мне смерть от любви]
[ваши прекрасные глаза, сулят мне смерть от любви, маркиза]
[маркиза, сулят мне смерть от любви, ваши прекрасные глаза]
[сулят мне смерть от любви, маркиза, ваши прекрасные глаза]
[сулят мне смерть от любви, ваши прекрасные глаза, маркиза]
 
No
</PRE>
<P><BR><B>Пример</B><BR>В старояпонском календаре был принят 60-летний цикл, 
состоящий из пяти 12-летних подциклов. Подциклы обозначались названиями цветов: 
зеленый, красный, желтый, белый и черный. Внутри каждого подцикла года носили 
названия животных: крыса, корова, тигр, заяц, дракон, змея, лошадь, овца, 
обезьяна, курица, собака и свинья. Например, 1984 год - год начала очередного 
цикла - назывался Годом Зеленой Крысы. 
<P>Составим программу, которая по заданному номеру года нашей эры n печатает его 
название в старояпонском календаре. Рассмотрим два случая: 
<P>(1) значение n не меньше, чем 1984; 
<P>(2) значение n - любое натуральное число. 
<P>Воспользуемся встроенным предикатом <TT>nth0</TT>(индекс, список, элемент), 
который будет успешным, если элемент находится на месте с номером индекс, считая 
от 0. Для случая (1) используем предикат nam, для случая (2) предикат - nm. <PRE>color(N,X):- N1 is ((N-1984) mod 60)//12,  
             nth0(N1, ['зеленый',
                       'красный', 'желтый', 
                       'белый', 'черный'], 
                  X).

animal(N,X):- N1 is (N-1984) mod 12, 
              nth0(N1,
                   ['крыса',  'корова', 'тигр',
	            'заяц',   'дракон', 'змея', 
                    'лошадь', 'овца',   'обезьяна', 
                    'курица', 'собака', 'свинья'],
                   X).

nam(N,[X,Y]):- number(N), color(N,X), animal(N,Y).

nm(N,X):- N&gt;1983, nam(N,X).
nm(N,X):- N&lt;1984, N1 is N+60, nm(N1,X).
</PRE>
<P><BR><B>Задание</B><BR>Напишите процедуры на языке Пролог для решения 
следующих задач и приведите примеры использования этих процедур. 
<OL>
  <LI>Определите максимальный элемент списка чисел. 
  <LI>Найдите второй по величине элемент списка. 
  <LI>Сформируйте новый список из тех элементов данного списка, которые стоят на 
  нечетных позициях. Например, из списка чисел <TT>[1, 2, 3, 4, 5, 6, 7]</TT> 
  нужно получить следующий: <TT>[1, 3, 5, 7]</TT>. </LI></OL><BR clear=all><A 
href="http://www.ctc.msiu.ru/materials/Book2/ch_10_prolog/11_number_task/index.html"><IMG 
alt="Предыдущий раздел" src="Списки.files/prev.gif" border=0></A> <A 
href="http://www.ctc.msiu.ru/materials/Book2/ch_10_prolog/index.html"><IMG 
alt="Уровень выше" src="Списки.files/up.gif" border=0></A> <A 
href="http://www.ctc.msiu.ru/materials/Book2/ch_11_ruby/index.html"><IMG 
alt="Следующий раздел" src="Списки.files/next.gif" border=0></A> </BODY></HTML>
