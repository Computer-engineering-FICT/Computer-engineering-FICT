<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="Template"
content="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Процедуры и подпрограммы</title>
</head>

<body background="fill1816.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/fill1816.gif" link="#0000FF"
vlink="#800080">

<p><a name="Процедуры и подпрограммы"></a><font
size="5" face="Times New Roman"><strong>3. Процедуры и
подпрограммы</strong></font></p>

<hr size="4" color="#000000">

<p><font size="4" face="Times New Roman">При
разработке МК-систем могут быть
использованы два способа
организации прикладных программ:
монолитный и модульный. При первом
способе вся прикладная программа
МК разрабатывается как единое
целое, а при втором строится из
отдельных программных блоков,
каждый из которых реализует
некоторую процедуру обработки
данных или управления. Взаимосвязь
блоков определяется разработчиком
при монтаже из этих блоков БСА и
законченной прикладной программы.</font></p>

<p><font size="4" face="Times New Roman">Отдельные
фрагменты прикладной программы МК
могут быть получены в виде линейной
последовательности блоков, другие
(многократно используемые) обычно
оформляются в виде подпрограмм, к
которым прикладная программа,
называемая основной, имеет
возможность обратиться по мере
необходимости. Подпрограмма должна
обладать следующими свойствами</font><font
size="4">:</font><font size="4" face="Times New Roman">
выполнять законченную процедуру
обработки данных, иметь только один
вход и один выход и не обладать
эффектом последействия, при
котором текущее выполнение
подпрограммы оказывало бы влияние
на ее последующие выполнения. </font></p>

<p><font size="4" face="Times New Roman"><b>Вызов
подпрограммы.</b> Обращение к
подпрограмме осуществляете” по
команде вызова CALL MARK, где MARK -
символическое имя процедуры. Имя
процедуры используется в качестве
метки, отмечающей одну из команд
(чаще всего первую) подпрограммы.
Для</font><font size="4"> </font><font size="4"
face="Times New Roman">МК51 мнемоническое
значение CALL является обобщенным и
транслируется в одну из команд ACALL
или LCALL в зависимости от адресного
расстояния вызываемой
подпрограммы.</font></p>

<p><font size="4" face="Times New Roman">По команде CALL
в стеке сохраняется значение
счетчика команд и возврат из
подпрограммы осуществляется в то
место основной программы, откуда
был осуществлен вызов (к команде
основной программы, следующей за
командой CALL). Для этого любая
подпрограмм должна заканчиваться
командой возврата RET,
осуществляющей восстановление
содержимого счетчика команд из
стека.</font></p>

<p><font size="4" face="Times New Roman">Достаточно
часто возникает необходимость
такой организации вычислительного
процесса, при которой подпрограмма
вызывает другую подпрограмму, та в
свою очередь вызывает следующую и
т.д. Этот процесс называется
вложением подпрограмм. Число
подпрограмм, которые могут быть
вызваны таким образом (глубина
вложенности подпрограмм),
ограничивается только емкостью
стека.</font></p>

<p><font size="4" face="Times New Roman"><b>Сохранение
параметров основной программы.</b>
Иногда при обращении к
подпрограмме возникает
необходимость сохранить не только
адрес возврата в основную
программу, но и содержимое
отдельных рабочих регистров.
Удобным способом для этого
является переключение банка
регистров. Например, если основная
программа использует банк
регистров 0, то подпрограмма может
использовать банк регистров 1.
Однако переключение банка
регистров не обеспечивает
сохранение содержимого
аккумулятора, что приводит к
необходимости создавать в одном из
рабочих регистров или в РПД
&quot;копию&quot; аккумулятора.</font></p>

<p><font size="4" face="Times New Roman"><b>Параметризуемые
подпрограммы.</b> Для успешной
работы любой подпрограммы
необходимо однозначно определить
способ передачи в нее исходных
данных и способ вывода результата
ее работы. Подпрограмма, которой
требуется дополнительная
информация в виде параметров ее
настройки или операндов,
называется параметризуемой.
Примером параметризуемой
подпрограммы может служить
подпрограмма временной задержки,
если основной программе требуется
реализация временных задержек
различной длительности. Основная
программа при этом должна
обеспечить передачу в подпрограмму
уставок, обеспечивающих требуемое
время задержки.</font></p>

<p><font size="4" face="Times New Roman">Получили
распространение три способа
передачи параметров: через память,
через регистры общего назначения и
через регистр признаков. При
передаче входных параметров через
память основная программа
обязательно содержит команды
загрузки некоторых ячеек памяти, а
подпрограмма </font><font size="4">–</font><font
size="4" face="Times New Roman"> команды
считывания из этих ячеек. При
передаче выходных параметров
подпрограмма должна загрузить
некоторые ячейки памяти, а основная
программа </font><font size="4">–</font><font size="4"
face="Times New Roman"> считать. Передача
параметров через регистры
осуществляется аналогичным
образом. Третий способ передачи
параметров </font><font size="4">–</font><font
size="4" face="Times New Roman"> через регистр
признаков </font><font size="4">–</font><font size="4"
face="Times New Roman"> удобно использовать
при передаче выходных параметров
(например, в подпрограммах
сравнения чисел). В этом случае
подпрограмма должна установить
(или сбросить) соответствующие
признаки, а основная программа </font><font
size="4">–</font><font size="4" face="Times New Roman">
проанализировать их значение. В МК48
для этой цели целесообразно
использовать флаги, сохраняемые в
PSW (С и F</font><font size="4">0</font><font size="4"
face="Times New Roman">). Гораздо большими
возможностями для передачи
параметров через признаки обладает
МК51, в котором имеется 128 флагов
пользователя, доступных для
модификации и анализа. Кроме
перечисленных способов передачи
параметров (общих для МК48 и MK</font><font
size="4">51</font><font size="4" face="Times New Roman">) в
МК51 имеется еще возможность
передачи параметров через стек.
Этот способ, в частности, позволяет
использовать в качестве параметра
содержимое счетчика команд.</font></p>

<p><font size="4" face="Times New Roman">Использование
процедур, оформленных в виде
подпрограмм, при разработке
программного обеспечения имеет ряд
достоинств. Прежде всего</font><font
size="4"> </font><font size="4" face="Times New Roman">относительно
простые модули, выделенные из
сложной программы, могут
программироваться несколькими
разработчиками с целью сокращения
времени проектирования. Еще более
важным является то, что любая
подпрограмма допускает автономную
отладку. Это, как правило,
многократно сокращает время
отладки всего прикладного
программного обеспечения. И,
наконец, механизм использования
подпрограмм, реализующих требуемый
набор процедур, уменьшает длину
прикладной программы, что имеет
своим следствием уменьшение
требующейся емкости памяти
программ.</font></p>

<p><font size="4" face="Times New Roman">Существенным
является и то обстоятельство, что
отлаженные процедуры организуются
разработчиками в библиотеки
параметризуемых подпрограмм и
могут быть многократно
использованы в проектной работе.
Отметим, что библиотека
параметризуемых подпрограмм
строится на основе соглашения о
едином способе обмена параметрами.</font></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a href="#процедуры и подпрограммы"><font
color="#0000FF" size="4">Процедуры и
подпрограммы</font></a></p>

<hr size="4" color="#008000">
<div align="center"><center>

<table border="0" cellpadding="30" cellspacing="0">
    <tr>
        <td><p align="center"><a href="strategyofdevelop.htm" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/strategyofdevelop.htm"><font
        color="#0000FF" size="4">Методика
        разработки прикладного
        программного обеспечения
        МК-систем</font></a></p>
        </td>
        <td valign="top"><p align="center"><a href="start.htm" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/start.htm"><font
        color="#0000FF" size="4">Первая страница</font></a></p>
        </td>
    </tr>
</table>
</center></div>
</body>
</html>
