<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="Author" content>
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title></title>
</head>

<body background="fill_mk48.jpg" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/fill_mk48.jpg" link="#000000">

<p align="left"><a name="Содержание"></a><font
color="#000000" size="5"><b>2. Структурная схема
МК48</b></font></p>

<ul type="disc">
    <li><a
        href="struct_shema_mk48.htm#арифметико-логическое устройство" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/struct_shema_mk48.htm#арифметико-логическое устройство"><font
        color="#0000FF" size="4">2.1.
        Арифметико-логическое
        устройство</font></a></li>
    <li><a
        href="struct_shema_mk48.htm#память микроконтроллера" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/struct_shema_mk48.htm#память микроконтроллера"><font
        color="#0000FF" size="4">2.2. Память
        микроконтроллера</font></a></li>
    <li><a
        href="struct_shema_mk48.htm#организация ввода/вывода информации" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/struct_shema_mk48.htm#организация ввода/вывода информации"><font
        color="#0000FF" size="4">2.3. Организация
        ввода/вывода информации</font></a></li>
    <li><a
        href="struct_shema_mk48.htm#устройство управления микроконтроллера" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/struct_shema_mk48.htm#устройство управления микроконтроллера"><font
        color="#0000FF" size="4">2.4. Устройство
        управления микроконтроллера</font></a></li>
</ul>

<hr size="4" color="#000000">

<p><font size="4">На</font><font color="#FF0000" size="4"> </font><a
href="#рис.2.2"><font color="#FF0000" size="4">рис. 2.2.</font></a><font
color="#FF0000" size="4"> </font><font size="4">показана
структурная схема МК48. Основу
структуры МК образует внутренняя
двунаправленная 8-битная шина,
которая связывает между собой все
устройства БИС:</font></p>

<ul>
    <li><font size="4">арифметическо -
        логическое устройство (АЛУ);</font></li>
    <li><font size="4">устройство управления;
        </font></li>
    <li><font size="4">память и порты
        ввода/вывода информации. </font></li>
</ul>

<p><font size="4">Рассмотрим
последовательно основные элементы
структуры и особенности
организации МК.</font></p>

<p align="center"><a href="javascript:if(confirm('http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/graph/mk48.gif  \n\nThis file was not retrieved by Teleport Pro, because the server reports that this file cannot be found.  \n\nDo you want to open it from the server?'))window.location='http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/graph/mk48.gif'" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/graph/mk48.gif" name="рис.2.2"><img
src="structure_mk48.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/structure_mk48.gif" border="3" width="550"
height="661"></a></p>

<p align="center"><font size="4"><b>Рис.
2.2.Структурная схема МК48</b></font></p>

<p align="center">&nbsp;</p>

<p align="left"><a href="#содержание"><font
color="#0000FF" size="4">Структурная схема МК48</font></a></p>

<hr color="#008000">

<p align="left"><a
name="Арифметико-логическое устройство"></a><font
color="#000000" size="5"><b>2.1.
Арифметико-логическое устройство </b></font></p>

<hr color="#008000">

<p><font size="4">В состав АЛУ входят
следующие блоки: комбинационная
схема обработки байтов, регистры Т,
регистр-аккумулятор А, схема
десятичного корректора и схема
формирования признаков .
Аккумулятор используется в
качестве регистра операнда и
регистра результата. Регистр
временного хранения операнда Т1
программно недоступен и
используется для временного
хранения второго операнда при
выполнении двухоперандных команд.
Комбинационная схема АЛУ может
выполнять следующие операции:
сложение байтов с переносом или без
него; логические операции И, ИЛИ и
исключающее ИЛИ; инкремент,
декремент, инверсию, циклический
сдвиг влево, вправо через (или
минуя) флаг переноса, обмен тетрад в
байте; десятичную коррекцию
содержимого аккуму-лятора. </font></p>

<p><font size="4">При выполнении операций
обработки данных в АЛУ
вырабатываются флаги (признаки),
которые (за исключением флага
переноса С) формирует фор-мируются
на комбинационной схеме и не
фиксируются на триггерах. К таким
флагам относятся флаг нулевою
содержимого аккумулятора и флаг
наличия единицы в селектируемом
бите аккумулятора. Логика условных
переходов по указанным флагам
позволяет выполнять команды
передачи управления (JZ, JNZ, JB0 - JB7) без
их фиксации на тригерах. </font></p>

<p><font size="4">Флаги переноса и
вспомогательного переноса (перенос
из млад-шей тетрады в старшую)
фикси-руются на триггерах, входящих
в состав регистра слова состояния
программы (ССП). Формат ССП показан
на </font><a href="#рис.2.3"><font color="#FF0000" size="4">рис.
2.3</font></a><font size="4"> Кроме
пере-численных признаков логика
условных переходов МК оперирует
флагами FO и FI, функциональ-ное
назначение которых определяется
разработчиком; флагом
пе-реполнения таймера TF, сигналами
на входах Т0 и Т1. Программистом
могут быть также использованы
флаги рабочего банка регистров BS и
выбранного банка внешней памяти
программ МВ. Кроме того, логикой
переходов после оконча-ния каждого
машинного цикла опрашивается еще
один флаг, а именно флаг
разрешения/запрета прерывании.</font></p>

<p align="center"><a name="рис.2.3"></a></p>

<p align="center"><font color="#0000FF"><img
src="psw_mk48.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/psw_mk48.gif" border="3" width="309" height="265"></font></p>

<p align="center"><font size="4"><b>Рис. 2.3 Формат
слова состояния программы</b></font></p>

<p align="center">&nbsp;</p>

<p align="left"><a href="#содержание"><font
color="#0000FF" size="4">Структурная схема МК48</font></a></p>

<hr color="#008000">

<p align="left"><a
name="Память микроконтроллера"></a><font
color="#000000" size="5"><b>2.2. Память
микроконтроллера </b></font></p>

<hr color="#008000">

<p><font size="4"><b>Память программ.</b>
Память программ и память данных в
МК48 физически и логически
разделены. Память программ
реализована в резидентном СППЗУ
емкостью 1 Кбайт. Максимальное
адресное пространство, отводимое
для программ, составляет 4 Кбайта.
Счетчик команд (СЧ) содержит 12 бит,
но инкрементируются в процессе
счета только младшие 11 бит. Поэтому
счетчик команд из предельного
состояния 7FFH (если только по этому
адресу не расположена команда
передачи управле-ния) перейдет в
состояние 000Н. Состояние старшего
бита счетчика команд может быть
изменено специальными командами (SEL
МВ0, SEL МB1), Подобный режим работы
счетчика команд позволяет создать
два банка памяти емкостью по 2
Кбайта каждый. Карта адресов памяти
программ показана на </font><a
href="#рис.2.4"><font color="#FF0000" size="4">рис. 2.4.</font></a></p>

<p align="center"><a name="рис.2.4"><font color="#0000FF"
size="4"><b><img src="memory_program_mk48.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/memory_program_mk48.gif"
border="3" width="419" height="656"></b></font></a></p>

<p align="center"><font size="4"><b>Рис. 2.4. Карта
адресов памяти программ</b></font></p>

<p><font size="4">В резидентной памяти
программ имеется три
специализированных адреса : </font></p>

<dir>
    <li><font size="4">адрес 0, к которому
        передается управление сразу
        после окончания сигнала СБР; по
        этому адресу должна находиться
        команда безусловного перехода
        к началу программы; </font></li>
    <li><font size="4">адрес 3, по которому
        расположен вектор прерывания
        от внешнего источника; </font></li>
    <li><font size="4">адрес 7. по которому
        расположены вектор прерывания
        от таймера или начальная
        команда подпрограммы
        обслуживания прерывания по
        призна-ку переполнения
        таймера/счетчика. </font></li>
    <li><font size="4">Память программ
        разделяется не только на банки
        емкостью 2 Кбайта, но и на
        страницы по 256 байт в каждой. В
        командах условного перехода
        задается 8 -битный адрес
        передачи управления в пределах
        текущей страницы. В случае,
        когда в программе необходимо
        иметь много переходов по
        условию, из-за небольшого
        размера страницы возникает
        проблема размещении
        соответствующих программных
        модулей в границах страницы.
        Команда вызова подпрограмм
        модифицирует 11 бит счетчика
        команд. обеспечивая тем самым
        межстраничные переходы в
        пределах выбранного банка
        памяти программа.</font><p><font size="4">В
        МК-системе, работающем с
        внешней памятью программ,
        возникает проблема размещения
        подпрограмм в двух банках,
        памяти. Проблема эта связана с
        тем, что МК не имеет средств
        считывания и анализа флага МВ,
        равного содержимому старшего
        бита счетчика команд СК</font><font
        size="2">11. </font><font size="4">По этому в
        каждый текущий момент
        исполнения программы,
        состоящей из потока вызовов
        подпрограмм, нет возможности
        определения номера банка
        памяти, из которого
        осуществляется выборка. Так
        как переходы между банками
        выполняются только по командам
        SEL MB, необходимо следить за тем,
        чтобы подпрограммы, взаимно
        вызывающие друг друга,
        располагались в пределах
        одного банка памяти. В
        противном случае возникает
        необходимость модификации
        признака МВ в вызываемой
        подпрограмме и восстановления
        его при возврате в вызывавшую
        подпрограмму. Но если вызов
        такой подпрограммы носит
        условный характер, то проблема
        восстановления может
        оказаться неразрешимой. </font></p>
        <p><font size="4">При обработке
        запросов прерываний в МК48
        старший бит счетчика команд СК</font><font
        size="2">11 </font><font size="4">принудительно
        устанавливается в 0. Это
        приводит к необходимости
        подпрограмму обслуживания
        прерывания и все подпрограм-мы,
        вызываемые ею, размещать в
        пределах банка памяти 0.</font></p>
        <p><font size="4"><b>Память данных.</b>
        Резидентная память данных
        емкостью 64 байта имеет в своем
        составе два банка рабочих
        регистров 0-7 и 24-31 по восемь
        регистров в каждом. Выбор
        одного из банков регистров
        выполняется по команде SEL RB.
        Рабочие регистры доступны по
        командам с прямой адресацией, а
        все ячейки РПД доступны по
        командам с косвенной
        адресацией. В качестве
        регистров косвенного адреса
        используются регистры R0, R1 и R0*,
        R1* (</font><a href="#рис.2.5"><font color="#FF0000"
        size="4">рис. 2.5 .</font></a><font size="4">) </font></p>
        <p align="center"><a name="рис.2.5"><font
        color="#0000FF" size="4"><b><img
        src="memory_data_mk48.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/memory_data_mk48.gif" border="3"
        width="309" height="656"></b></font></a></p>
        <p align="center"><font size="4"><b>Рис. 2.5.
        Карта адресов памяти данных</b></font>
        </p>
        <p><font size="4">Ячейки РПД с адресами
        8-23 адресуются указателем стека
        из ССП и могут быть
        использованы в качестве
        8-уровневого стека. В случае,
        если уровень вложенности
        подпрограмм меньше восьми,
        незадействован-ные в стеке
        ячейки могут использоваться
        как ячейки РНД. При
        пере-полнении стека,
        регистр-указатель стека,
        построенный на основе 3-
        битного счетчика, переходит из
        состояния 7 в состояние 0. Малая
        емкость стека ограничивает
        число возможных внешних
        источников прерывания в
        МК-системе. МК48 не имеет команд
        загрузки байта в стек или его
        из-влечения из стека, и в нем
        фиксируется только содержимое
        счетчика команд и старшая
        тетрада ССП (флаги). В силу
        этого разработчику необходимо
        следить за тем, чтобы вложенные
        подпрограммы не использовали
        одни и те же рабочие регистры. </font></p>
        <p><font color="#000000" size="4">Практически
        все команды с обращением к РПД
        оперируют с одним байтом.
        Однако по командам вызова и
        возврата осуществляется
        доступ к двухбайтным словам. <em><tt>В
        памяти данных слова хранятся
        так, что старший байт слова
        располагается в ячейке с
        большим адресом. Отметим, что в
        памяти программ порядок
        расположения байтов по
        старшинству при хранении
        двухбайтных слов обратный. </tt></em></font></p>
        <p><font size="4">В МК-системах, где
        используется внешнее ОЗУ,
        через регистры косвенного
        адреса R0 и RI возможен доступ к
        ВПД емкостью 256 байт. </font></p>
    </li>
</dir>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a href="#содержание"><font color="#0000FF" size="4">Структурная
схема МК48</font></a></p>

<hr color="#008000">

<p align="left"><a
name="Организация ввода/вывода информации"></a><font
color="#000000" size="5"><b>2.3. Организация
ввода/вывода информации </b></font></p>

<hr color="#008000">

<p><font size="4">Для связи МК48 с объектом
управления, для ввода и вывода
инфор-мации используются 27 линий.
Эти лилии сгруппированы в три порта
по восемь линий в каждом и могут
быть использованы для ввода или для
ввода/вывода через двунаправленные
линии. Кроме портов ввода/вывода
имеються три линии, сигналы из
которых могут изменять ход
программы по командам условного
перехода: линия ЗПР используется
для ввода в МК сигнала запроса
прерывания от внешнего источника;
линия Т0 используется для ввода
тестирующего сигнала от двоичного
датчика объекта управлениям; кроме
того, под управлением программы (по
команде ЕNТ0 CLK.) по этой линии может
выдаваться сигнал синхронизации;
линия Т1 используется для ввода
тести-рующего сигнала или в
качестве входа счетчика событий (по
команде STRT CNT) . </font></p>

<p><font size="4"><b>Порты ввода/вывода Р1 и
Р2. </b>Специальная схемотехника
портов Р1 и Р2, которая получила
название квазидвунаправленной,
позволяет выполнять ввод, вывод или
ввод/вывод. Каждая линия портов Р1 и
Р2 может быть программным путем
настроена на ввод, вывод или на
работу с двунаправленной линией
передачи. Для того чтобы настроить
некото-рую линию на режим ввода в
МК, необходимо перед этим в
буферным триггер этой линии
записать 1. Сигнал СБР
автоматически записывает во все
линии портов Р1 и Р2 сигнал 1.
Квазидвупанравленная структура
портов Р1 и Р2 для программиста МК 1816
специфична тем, что в процессе
ввода информации выполняется
операция логического И над
вводимыми данными и текущими
(последними) выведенными данными.
Квазидвунаправленные схемы портов
Р1 и Р2 и команды логических
операции ANI. и ORL предоставляют
разработчику эффективное средст-во
маскирования для обработки
однобитных входных и выходных
пе-ременных. </font></p>

<p><font size="4">В системе команд МК есть
команды, которые позволяют
выполнять запись нулей и единиц в
любом разряд или группу разрядов
порта, но так как в этих командах
маска задается непосредственным
операндом, то необходимо знать
распределение сбрасываемых и
устанавливаемых линий на этапе
разработки прикладной программы. В
том случае, если маска вычисляется
программой и заранее не известна, в
ОЗУ необходимо иметь копию
состояния порта вывода. Эта копия
по командам логиче-ских операций
объединяется с вычисляемой маской
в аккумуляторе и затем загружается
в порт. Необходимость этой
процедуры вызвана тем, что в МК
отсутствует возможность выполнить
операцию чтения значений портов Р1
и Р2 для определения прежнего
состояния порта вывода. Порт Р2
отличается от порта Р1 тем, что его
младшие четыре бита могут быть
использованы для расширения
МК-системы по вводу/выводу. Через
младшую тетраду порта Р2 по
специальным командам обращения
возможен доступ к четырем внешним
четырехбитным портам ввода/вы-вода
Р4-Р7. Работа этих внешних портов
синхронизируется сигналом ПРОГ. </font></p>

<p><font size="4"><b>Порт ввода/вывода BUS</b>
представляет собой
двунаправленный буфер с тремя
состояниями и предназначен для
побайтного ввода, вывода или
ввода/вывода информации. Если порт
BUS используется для
двунаправленных передач, то обмен
информацией через него выполняются
по командам MOVX. При выводе байта
генерируется стробирующий сигнал
ЗП, а выводимый байт фиксируется в
буферном регистре. При выводе байта
генерируется стробирующий сигнал
ЧТ, но вводимый байт в буферном
регистре не фиксируется. В
отсутствие передач порт BUS по своим
выходам находится в
высокоимпедансном состоянии. Если
порт BUS используется как
однонаправленный, то вывод через
него выполняется по команде OUTL, а
ввод - по команде INS. </font></p>

<p><font size="4">Вводимые и выводимые
через порт BUS байты можно
маскировать с помощью команд ORL и ANL,
что позволяет выделять и
обрабатывать в байте отдельный бит
или группу бит. </font></p>

<p><font size="4">В МК -системах простой
конфигурации, когда порт BUS не
используется в качестве
порта-расширителя системы, обмен
выполняется по командам INS, OUTU и MOVX.
Возможно попеременное
использование команд OUTL и МOVX.
Однако при этом необходимо помнить,
что выводимый по команде OUTL байт
фиксируется в буферном регистре
парта BIJS, а команда MOVX уничтожает
содержимое буферного регист-ра
порта BUS. (Команда INS не уничтожает
содержимое буферного ре-гистра
порта.) В МК-системах имеющих
внешнюю память программ, порт BUS
используется для выдачи адреса
внешней памяти и для приема команды
из внешнем памяти программ.
Следовательно, в таких систе-мах
использование команды OUTL лишено
смысла. </font></p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<p><a href="#содержание"><font color="#0000FF" size="4">Структурная
схема МК48</font></a></p>

<hr color="#008000">

<p align="left"><a
name="Устройство управления микроконтроллера"></a><font
color="#000000" size="5"><b>2.4. Устройство
управления микроконтроллера</b> </font></p>

<hr color="#008000">

<p><font size="4">Устройство управления МК
совместно с логической схемой
переходов в каждом цикле команды
формирует последовательность
сигналов, управляющих функциями
всех блоков МК и системой их
взаимосязи. Рассмотрение МК и
особенностей реализации тех или
иных процедур удобно выполнить
путем анализа работы отдельных
блоков МК в различных режимах его
работы. </font></p>

<p><font size="4"><b>Синхронизация МК.</b>
Опорную частоту синхронизации
определяет или кварцевый
резонатор, подключаемый к выводам
Х1 и Х2, или LC-цепь.Х1 является входом,
а Х2 - выходом генератора,
способного работать в диапазоне
частот от 1 до 6 МГц. На вход XI может
подаваться сигнал от источника
внешней синхронизации. Варианты
схем синхронизации МК показаны на </font><a
href="#рис.2.6&amp;7"><font color="#FF0000" size="4">рис.
2.6.</font></a><font size="4"> В состав
генератора МК входят два счетчика с
модулями пересчета 3 и 5. Первый
используется для формирования
сигнала системной синхронизации СС
(0.5 мкс). Этот же сигнал поступает на
счетчик машинных циклов, на выходе
которого через каждые пять
сигналов синхронизации
формируется сигнал САВП (2.5 мкс),
идентифицирующий машинный цикл и
используемым в расширенных
МК-системах для стробирования
адреса внешней памяти. </font></p>

<p><font size="4"><b>Системный сброс.</b> В
обслуживаемых МК-системах для
инициализации используется кнопка
СБРОС, которая заземляет
соответствующий вход МК. В
необслуживаемых МК-системах, к
входу СБР подсоединяет-ся
конденсатор емкостью 1 мкФ, что
обеспечивает подачу сигнала
близкого к потенциалу земли,
длительностью не менее 50 мк после
того, как напряжение
электропитания устанавливается (</font><a
href="#рис.2.6&amp;7"><font color="#FF0000" size="4">рис.
2.7.</font></a><font size="4">). Сигнал СБР
производит следующие действия:
сбрасывает счетчик команд и
указатель стека; устанавливает
порт BUS в высокоимпедансное
состояние, а порты Р1 и Р2 - на режим
ввода; выбирает банк регистров 0 и
банк памяти 0; запрещает прерывания;
останавливает таймер и выдачу
синхросигнала на вывод Т0;
сбрасывает флаг переполнения
таймера TF и флаги пользователя F0 и
F1. </font></p>

<p align="center"><a name="рис.2.6&amp;7"></a></p>
<div align="center"><center>

<table border="2" cellpadding="0" cellspacing="0"
bgcolor="#FFFFFF" bordercolor="#000000">
    <tr>
        <td><a href="javascript:if(confirm('http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/sinhro.gif  \n\nThis file was not retrieved by Teleport Pro, because the server reports that this file cannot be found.  \n\nDo you want to open it from the server?'))window.location='http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/sinhro.gif'" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/sinhro.gif"><img
        src="sinhro_mk48.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/sinhro_mk48.gif" border="0" width="424"
        height="206"></a></td>
        <td><img src="init_mk48.gif" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/images/init_mk48.gif" width="270"
        height="222"></td>
    </tr>
</table>
</center></div>

<p><font size="4"><b>           Рис
2.6.Варианты схем синхронизации
МК48              Рис 2.7. Схема
начальной
                                                                                                         установки
МК48</b></font></p>

<p align="left"><font size="4"><b>Логика условных
переходов.</b> Логическая схема
условных переходов МК позволяет
программе проверять не только
признаки, но и условия, внешние по
отношению к МК. По командам
условного перехода в случае
удовлетворения проверяемого
условия в счетчике команд (биты 0-7)
из второго байта команды
загружается адрес перехода. Логика
переходов МК оперирует с набором
условий, перечисляемых в </font><a
href="#таблица 1"><font color="#FF0000" size="4">табл.
1.</font></a></p>

<p align="center"><a name="Таблица 1"></a><font size="4"><b>Таблица
1 . Условия переходов по программе</b></font>
</p>
<div align="center"><center>

<table border="1" cellpadding="0" cellspacing="0"
bgcolor="#FFFFFF">
    <tr>
        <td align="center"><p align="center"><font size="4">Устройство
        </font></p>
        </td>
        <td align="center"><p align="center"><font size="4">Условие
        перехода</font> </p>
        <p align="center"><font size="4">инверсное</font>
        </p>
        </td>
        <td align="center"><p align="center"><font size="4">Условие
        перехода</font> </p>
        <p align="center"><font size="4">прямое</font> </p>
        </td>
    </tr>
    <tr>
        <td align="center"><font size="4">Аккумулятор</font></td>
        <td align="center"><font size="4">Не все нули </font></td>
        <td align="center"><font size="4">Все нули </font></td>
    </tr>
    <tr>
        <td align="center"><font size="4">Выбранный
        бит аккумулятора</font></td>
        <td align="center"><font size="4">-</font> </td>
        <td align="center"><font size="4">1</font> </td>
    </tr>
    <tr>
        <td align="center"><font size="4">Флаг
        переноса С</font></td>
        <td align="center"><font size="4">0 </font></td>
        <td align="center"><font size="4">1</font> </td>
    </tr>
    <tr>
        <td align="center"><font size="4">Флаги
        пользователя F0 и F1</font></td>
        <td align="center"><font size="4">-</font> </td>
        <td align="center"><font size="4">1</font> </td>
    </tr>
    <tr>
        <td align="center"><font size="4">Флаг
        переполнения таймера TF</font></td>
        <td align="center"><font size="4">-</font> </td>
        <td align="center"><font size="4">1</font> </td>
    </tr>
    <tr>
        <td align="center"><font size="4">Тестовые
        выходы (Т0, Т1)</font></td>
        <td align="center"><font size="4">0</font> </td>
        <td align="center"><font size="4">1</font> </td>
    </tr>
    <tr>
        <td align="center"><font size="4">Вход запроса
        прерывания ¬ЗПР</font></td>
        <td align="center"><font size="4">0 </font></td>
        <td align="center"><font size="4">-</font> </td>
    </tr>
</table>
</center></div>

<p align="left"><font size="4"><b>Режим
прерывания.</b> Линия запроса
прерывания от внешнего источни-ка
ЗПР проверяется каждый машинный
цикл во время действия сигна-ла
САВП, но передача управления ячейке
3, где расположена команда JMP,
выполняется только по завершению
цикла команды. При обработ-ке
прерывания, как и при вызове
подпрограммы, содержимое счетчика
команд и старшей тетрады ССП
сохраняется в стеке. Ко входу ЗПР
микроконтроллера через монтажное
ИЛИ от схемы с открытым коллектором
могут быть подключены несколько
источников прерывания. После
распознавания прерывания все
последующие запросы прерывания
игнорируются до тех пор, пока по
команде возврат RETR вновь будет
разрешена работа логики
прерываний. Режим прерываний может
быть запрещен или разрешен
программам по командам DIS I и ЕN I.
Сигнал ЗПР должен быть снят внешним
устройством перед окончанием
под-программы обслуживания, т.е. до
исполнения команды RETR. В том случае,
если внешнее устройство не
сбрасывает свой флаг запроса
прерываний при обращении МК к его
буферному регистру, одна из
выходных линий МК используется
подпрограммой обслуживания
прерывания для сброса этого флага
во внешнем устройстве. Так как вход
3ПР может быть проверен по команде
условного перехода JNI, то при
запрещенном режиме вход ЗПР может
быть использован в качестве
дополнительного тестирующего
входа подобноТ0 и Т1.</font></p>

<p align="left"><font size="4">При необходимости
в МК можно создать двухуровневую
систему прерываний. Для этого надо
разрешим прерывания от таймера,
загрузить в него число FFH и
перевести в режим подсчета внешних
событий, фиксируемых на входе Т1.
Переход сигнала на входе Т1 из
состояния 1 в состояние 0 приведет к
прерыванию по вектору в ячейке 7. В
случае одновременного запроса
прерываний от внешнего источника и
запроса от флага переполнения
таймера приоритет остается за
источником, воздействующим на вход
ЗПР. При входе в подпрограммы
обслуживания прерывании старший
бит счетчика команд СК11
принудительно устанавливается в
нуль. Следовательно, вся процедура
обработки прерывания должна быть
размещена в банке памяти 0.</font></p>

<p align="left"><font size="4"><b>Таймер/счетчик.</b>
Внутренний 8-битный двоичный
Суммирующий счетчик может быть
использован для формирования
временные задержек и для подсчета
внешних событий. Содержимое
таймера/счетчика (Т/С) можно
прочитать (MOV А, Т) или изменить (МOV T,
A). Две команды STRT Т и STRT CNT
настраивают и запускают
таймер/счетчик в режиме таймера или
в режиме счетчика событий
соответственно. Остановить работу
(но не сбросить содержимое)
таймера/счетчика можно или
командой STOP TCNT, или сигналом
системного сброса СБР. Из
макси-мального состояния FFH
таймер/счетчик переходит в
начальное состоя-ние 00Н. При этом
устанавливается в 1 флаг
переполнения, который мо-жет
вызывать прерывание, если оно
разровнено командой EN TCNTI.
Прерывание от таймера/счетчика
может быть запрещено командой DIS
TCNTI, но при этом флаг переполнения
может быть опрошен по команде
условного перехода JTF, как и
пе-ревод к подпрограмме обработки
прерывания по вектору с адресом 7,
сбрасывает флаг переполнения
таймера/счетчика. </font></p>

<p align="left"><font size="5" face="Times New Roman"><strong><tt>В
режиме таймера</tt></strong></font><font size="4">
на вход таймера/счетчика через
делитель частоты на 32 поступают
основные синхросигналы машинного
цикла САВП (400 КГц), и счетчик
увеличивает свое состояние на 1
через каждые 80 мкс (12.5 КГц). Путем
программной установки таймера/
счетчика в исходное состояние и
анализа флага переполнения могут
быть реализованы различные
временные задержки, лежащие в
диапазоне ото 80 мкс до 20.48 мс.
Временные задержки, превышающие по
длительности 20 мс (256 состояний
счетчика), могут быть получены
накоплением переполнений в рабочем
регистре под управлением
про-граммы. </font></p>

<p align="left"><font size="5" face="Times New Roman"><strong><tt>В
режиме счетчика событий</tt></strong></font><font
size="4"><strong> </strong>внутренний счетчик
уве-личивает свое состояние на 1
каждый раз, когда сигнал на входе Т1
пере-ходит из состояния 1 в
состояние 0. Минимально возможное
время меж-ду двумя входными
сигналами равно 7.5 мкс (3 машинных
цикла при использовании резонатора
6 МГц). Минимальная длительность
единичного сигнала на входе Т1
составляет 0.5 мкс.</font></p>

<p>&nbsp;</p>

<p><a href="#содержание"><font color="#0000FF" size="4">Структурная
схема МК48</font></a></p>

<hr size="4" color="#008000">
<div align="center"><center>

<table border="0" cellpadding="20" cellspacing="0">
    <tr>
        <td><a href="start_mk48.htm" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk48/start_mk48.htm"><font color="#0000FF"
        size="5" face="Times New Roman"><strong><tt>КМ1816ВЕ48</tt></strong></font></a></td>
        <td><a href="start_mk51.htm" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/mk51/start_mk51.htm"><font
        color="#0000FF" size="5" face="Times New Roman"><strong><tt>КМ1816ВЕ51</tt></strong></font></a></td>
        <td><a href="start.htm" tppabs="http://ofap.ulstu.ru/res/REFER_BOOK_MK48&MK51/start.htm"><font color="#0000FF" size="4">Первая
        страница</font></a></td>
    </tr>
</table>
</center></div>
</body>
</html>
