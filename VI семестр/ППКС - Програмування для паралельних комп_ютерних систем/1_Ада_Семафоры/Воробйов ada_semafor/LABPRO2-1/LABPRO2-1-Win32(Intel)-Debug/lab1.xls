Source file: ..\lab1   Wed Feb 16 22:47:05 2011

    1 ----------------------------------------------------------------
    2 --              Paralel and distributed computing             --
    3 --             Laboratory work #1. Ada. Semaphores            --
    4 --                  Func: a = MIN(MO*MX+alfa*MR)              --
    5 --                   IO-83 Vorobyev Vitaliy                   --
    6 --                        9.02.2011                           --
    7 ----------------------------------------------------------------
    8 
    9 with Package1; use Package1;
   10 with Ada.Text_IO; use Ada.Text_IO;
   11 with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;
   12 with Ada.Synchronous_Task_Control; use Ada.Synchronous_Task_Control;
   13 
   14 procedure Lab1 is
   15 
   16 
   17    MO, MX, MR: Matr;
   18    a:          integer := 500000; --min - shared variable
   19    Alfa:           Integer;
   20 
   21    --semaphores
   22    S1, S2, S3, var1, var2: Suspension_Object; 
   23 
   24    procedure Task_start is
   25       task T1;
   26       task body T1 is
   27          alfa1: integer;
   28                  Sum: Integer := 0;
   29                  A1: Integer := 530000;
   30          MO1: Matr;
   31       begin
   32          Put_Line("T1 start");
   33          --Data entering
   34          Matr_Input(MR);
   35                  Matr_Input(MX);
   36 
   37          Set_True(S1);                   --S2-1
   38                  Suspend_until_true(S2); --W2-1
   39 
   40                  -- Calculating function
   41                  Suspend_Until_True(Var1);
   42          alfa1 := alfa;
   43          MO1 := MO;
   44          Set_True(Var1);
   45 
   46                  for i in 1.. N loop
   47             for j in 1 .. H loop
   48                            sum := 0;
   49                for z in 1 .. N loop
   50                   sum := sum + MO1(i)(z) * MX(Z)(J);
   51                end loop;
   52                            Sum := Sum + Alfa1 * MR(I)(J);
   53                            if (A1 > Sum) then
   54                                   A1 := Sum;
   55                            end if;
   56                            Sum := 0;
   57                         end loop;
   58          end loop;
   59                  Sum := 0;
   60 
   61          Suspend_until_true(Var2);
   62          if (a > a1) then
   63             a := a1;
   64          end if;
   65          Set_True(Var2);
   66 
   67          Set_True(S3);           --S2-2
   68 
   69          Put_Line("T1 stop");
   70       end T1;
   71 
   72       task T2;
   73       task body T2 is
   74          alfa2: integer;
   75                  A2: Integer := 540000;
   76                  Sum: Integer := 0;
   77          MO2: Matr;
   78       begin
   79          Put_Line("T2 start");
   80          --Data entering
   81          Matr_Input(MO);
   82                  alfa := 1;
   83 
   84                  Suspend_until_true(S1); --W1-1
   85                  Set_True(S2);                   --S1-1
   86 
   87                  -- Calculating function
   88                  Suspend_until_true(Var1);
   89          alfa2 := alfa;
   90          MO2 := MO;
   91          Set_True(Var1);
   92 
   93                  for i in 1.. N loop
   94             for j in H+1 .. N loop
   95                            sum := 0;
   96                for z in 1 .. N loop
   97                   sum := sum + MO2(i)(z) * MX(Z)(J);
   98                end loop;
   99                            Sum := Sum + Alfa2 * MR(I)(J);
  100                            if (A2 > Sum) then
  101                                   A2 := Sum;
  102                            end if;
  103                            Sum := 0;
  104                         end loop;
  105          end loop;
  106                  Sum := 0;
  107 
  108          Suspend_until_true(Var2);
  109          if (a > a2) then
  110                         A := A2;
  111          end if;
  112          Set_True(Var2);
  113 
  114          Suspend_until_true(S3); --W1-2
  115 
  116                  Constant_Out(A);
  117 
  118          Put_Line("T2 stop");
  119       end T2;
  120 
  121    begin
  122       null;
  123    end Task_start;
  124 
  125 begin
  126    Set_True(Var1);
  127    Set_True(Var2);
  128    Task_start;
  129 end Lab1;

NAME                 KIND/FILE            DEF    REFERENCES (* if assigned)
---------------------------------------------------------------------------
A1                   object              29      53 54* 62 63 
A2                   object              75      100 101* 109 110 
Ada                  #2:ada.ada                  10 11 12 
Alfa                 object              19      42 82* 89 
Constant_Out         #1:package1.adb             116 
H                    #1:package1.adb             47 94 
Integer_Text_IO      #4:ada.integer_text_io.ada  11 
Lab1                 library subp body   14      129 
MO                   object              17      43 81* 90 
MO1                  object              30      43* 50 
MO2                  object              77      90* 97 
MR                   object              17      34* 52 99 
MX                   object              17      35* 50 97 
Matr                 #1:package1.adb             17 30 77 
Matr_Input           #1:package1.adb             34 35 81 
N                    #1:package1.adb             46 49 93 94 96 
Package1             #1:package1.adb             9 
Put_Line             #3:ada.text_io.spc          32 69 79 118 
S1                   object              22      37* 84* 
S2                   object              22      38* 85* 
S3                   object              22      67* 114* 
Set_True             external                        37 44 65 67 85 91 112 
                                                 126 127 
from file 5:ada.synchronous_task_control.spc
Sum                  object              28      48* 50* 52* 53 54 56* 
                                                 59* 
Sum                  object              76      95* 97* 99* 100 101 103* 
                                                 106* 
Suspend_until_true   external                        38 41 61 84 88 108 114 
from file 5:ada.synchronous_task_control.spc
Suspension_Object    external                        22 
from file 5:ada.synchronous_task_control.spc
Synchronous_Task_Control
                     external                        12 
from file 5:ada.synchronous_task_control.spc
T1                   object              25      25 
T1                   task body           26      70 
T2                   object              72      72 
T2                   task body           73      119 
Task_start           subprogram body     24      123 128 
Text_IO              #3:ada.text_io.spc          10 
a                    object              18      62 63* 109 110* 116* 
alfa1                object              27      42* 52 
alfa2                object              74      89* 99 
i                    object              46      50 52 
i                    object              93      97 99 
j                    object              47      50 52 
j                    object              94      97 99 
var1                 object              22      41* 44* 88* 91* 126* 
var2                 object              22      61* 65* 108* 112* 127* 
z                    object              49      50 
z                    object              96      97 

    File #1 ..\package1.adb
    File #2 ada.ada
    File #3 ada.text_io.spc
    File #4 ada.integer_text_io.ada
    File #5 ada.synchronous_task_control.spc
