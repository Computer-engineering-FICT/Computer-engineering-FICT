Source file: ..\lab4.adb   Wed Apr 27 00:03:33 2011

    1 ----------------------------------------------------------------
    2 --              Paralel and distributed computing             --
    3 --             Laboratory work #4. Ada. Semaphores            --
    4 --                  Func: MA = MB + ALfa * (MC * MZ)          --
    5 --                   IO-83 Gulchenko Vova                     --
    6 --                        27.04.2011                          --
    7 ----------------------------------------------------------------
    8 
    9 with Package1; use Package1;
   10 with Ada.Text_IO; use Ada.Text_IO;
   11 with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;
   12 
   13 procedure Lab4 is
   14    MZ, MA, MB: Matr;
   15 
   16 -----------------------------------------------------------
   17 ---------------ОПИСАТЕЛЬНАЯ ЧАСТЬ ЗАЩИЩЕННЫХ МОДУЛЕЙ-------
   18 -----------------------------------------------------------
   19 
   20 ----ЗАЩИЩЕННЫЙ МОДУЛЬ Synchro
   21         protected Monitor is
   22                 --Синхронизация
   23                 procedure Input;
   24                 procedure EndСount;
   25                 --Общие ресурсы
   26                 procedure SetMC(M: in Matr);
   27                 function GetMC return Matr;
   28                 procedure SetAlfa(M: in Integer);
   29                 function GetAlfa return Integer;
   30                 --Защищённые входы (синхронизация)
   31                 entry InputSynchro;
   32                 entry OutputSynchro;
   33         --приватная часть защищенного модуля
   34         private
   35                 --Синхронизация
   36                 F1: integer := 0;
   37                 F2: integer := 0;
   38                 --Общие ресурсы
   39                 MC: Matr;
   40                 alfa: Integer;
   41         end Monitor;
   42 
   43 -----------------------------------------------------------
   44 ------------------ТЕЛА ЗАЩИЩЕННЫХ МОДУЛЕЙ------------------
   45 -----------------------------------------------------------
   46 
   47 --ЗАЩИЩЕННЫЙ МОДУЛЬ Synchro
   48         protected body Monitor is
   49 -- REALIZE Синхронизация
   50                 procedure Input is 
   51                         begin
   52                                 F1 := F1 + 1;
   53         end Input;
   54 
   55                 procedure EndСount is
   56                         begin
   57                                 F2 := F2 + 1;
   58         end EndСount;
   59 -- REALIZE Общие ресурсы MO
   60                 procedure SetMC(M: in Matr) is
   61                 begin   
   62                         for i in 1 .. N loop
   63                     for j in 1 .. N loop
   64                        MC(i)(j) := M(i)(j);
   65                     end loop;
   66                  end loop;      
   67                 end SetMC;
   68                 function GetMC return Matr is
   69                 begin
   70                         return MC;
   71                 end;
   72 -- REALIZE Общие ресурсы B              
   73                 procedure SetAlfa(M: in Integer) is
   74                 begin   
   75                         Alfa := M;      
   76                 end SetAlfa;
   77                 function GetAlfa return Integer is
   78                 begin
   79                         return Alfa;
   80                 end;
   81 --Защищённые входы (синхронизация)
   82                 entry InputSynchro when F1 = 3 is --1
   83                 begin
   84                                 null;
   85                 end InputSynchro;
   86 
   87                 entry OutputSynchro when F2 = P - 1 is --2
   88                 begin
   89                                 null;
   90                 end OutputSynchro;
   91         end Monitor;
   92 
   93 -----------------------------------------------------------
   94 ------------------------З А Д А Ч И------------------------
   95 -----------------------------------------------------------
   96         task T1;
   97         task T2;
   98         task T3;
   99         task T4;
  100 
  101 -----------------------ЗАДАЧА Т1 --------------------------
  102         task body T1 is
  103                 Sum1: Integer;
  104                 MC1: Matr; alfa1: Integer;
  105 
  106         begin
  107                 Put_Line("T1 start");
  108 --1.    Ввод MZ
  109                 Matr_Input(MZ);
  110 --2.    Cигнал задачам Т2, Т3, Т4 о завершении ввода
  111                 Monitor.Input;
  112 --3.    Ожидание ввода в задачах Т3, Т4
  113                 Monitor.InputSynchro;
  114 --4.    Копирование Alfa1:=Alfa, MС1:=MС
  115                 Alfa1 := Monitor.GetAlfa;
  116                 MC1 := Monitor.GetMC;
  117 --5.    Счёт MAH = MBH + Alfa1 * (MC1 * MZH)
  118                  for i in 1.. N loop
  119             for j in 1 .. H loop
  120                            sum1 := 0;
  121                for z in 1 .. N loop
  122                   sum1 := sum1 + MZ(Z)(J) * MC1(I)(Z);
  123                end loop;
  124                            MA(I)(J) := Sum1 * Alfa1 + MB(I)(J);
  125                         end loop;
  126          end loop;
  127 --6.    Сигнал задаче Т4 о конце счёта  
  128                 Monitor.EndСount;
  129 
  130                 Put_Line("T1 stop");
  131     end T1;
  132 
  133 -----------------------ЗАДАЧА Т2 --------------------------
  134         task body T2 is
  135                 Sum1: Integer;
  136                 MC2: Matr; alfa2: Integer;
  137         begin
  138                 Put_Line("T2 start");
  139 
  140 --1.    Ожидание ввода в задачах Т1, Т3, Т4
  141                 Monitor.InputSynchro;
  142 --2.    Копирование Alfa2:=Alfa, MС2:=MС 
  143                 Alfa2 := Monitor.GetAlfa;
  144                 MC2 := Monitor.GetMC;
  145 --3.    Счёт MAH = MBH + Alfa2 * (MC2 * MZH)
  146                  for i in 1.. N loop
  147             for j in H+1 .. 2*H loop
  148                            sum1 := 0;
  149                for z in 1 .. N loop
  150                   sum1 := sum1 + MZ(Z)(J) * MC2(I)(Z);
  151                end loop;
  152                            MA(I)(J) := Sum1 * Alfa2 + MB(I)(J);
  153                         end loop;
  154          end loop;
  155 --4.    Сигнал задаче Т4 о конце счёта  
  156                 Monitor.EndСount;
  157 
  158                 Put_Line("T2 stop");
  159     end T2;
  160 
  161 -----------------------ЗАДАЧА Т3 ----------------------------
  162         task body T3 is
  163                 Sum1: Integer;
  164                 MC3: Matr; alfa3: Integer;
  165         begin
  166                 Put_Line("T3 start");
  167 
  168 --1.    Ввод MС
  169                 Matr_Input(MC3);
  170                 Monitor.SetMC(MC3);
  171 --2.    Cигнал задачам Т1, Т2, Т4 о завершении ввода
  172                 Monitor.Input;
  173 --3.    Ожидание ввода в задачах Т1, Т4
  174                 Monitor.InputSynchro;
  175 --4.    Копирование ?3:=?, MС3:=MС
  176                 Alfa3 := Monitor.GetAlfa;
  177 --5.    Счёт MAH = MBH + ?3 * (MC3 * MZH)
  178                 for i in 1.. N loop
  179             for j in 2*H+1 .. 3*H loop
  180                            sum1 := 0;
  181                for z in 1 .. N loop
  182                   sum1 := sum1 + MZ(Z)(J) * MC3(I)(Z);
  183                end loop;
  184                            MA(I)(J) := Sum1 * Alfa3 + MB(I)(J);
  185                         end loop;
  186          end loop;
  187 --6.    Сигнал задаче Т4 о конце счёта                      
  188                 Monitor.EndСount;               
  189 
  190                 Put_Line("T3 stop");
  191     end T3;     
  192 
  193 -----------------------ЗАДАЧА Т4 --------------------------
  194         task body T4 is
  195                 Sum1: Integer;
  196                 MC4: Matr; alfa4: Integer;
  197         begin
  198                 Put_Line("T4 start");
  199 
  200 --1.    Ввод MB, Alfa
  201                 Matr_Input(MB);
  202                 Alfa4 := 1;
  203                 Monitor.setAlfa(Alfa4);
  204 --2.    Cигнал задачам Т1, Т2, Т3 о завершении ввода
  205                 Monitor.Input;
  206 --3.    Ожидание ввода в задачах Т1, Т3
  207                 Monitor.InputSynchro;
  208 --4.    Копирование ?4:=?, MС4:=MС
  209                 MC4 := Monitor.GetMC;
  210 --5.    Счёт MAH = MBH + ?4 * (MC4 * MZH)
  211                 for i in 1.. N loop
  212             for j in 3*H+1 .. N loop
  213                            sum1 := 0;
  214                for z in 1 .. N loop
  215                   sum1 := sum1 + MZ(Z)(J) * MC4(I)(Z);
  216                end loop;
  217                            MA(I)(J) := Sum1 * Alfa4 + MB(I)(J);
  218                         end loop;
  219          end loop;
  220 --6.    Ожидание окончания счёта в Т1, Т2, Т3
  221                 Monitor.OutputSynchro;
  222 --7.    Вывод МА
  223                 Put_Line("             ");
  224                 Matr_Print(MA);     
  225           
  226                 Put_Line("T4 stop");
  227     end T4;     
  228 
  229 begin
  230    null;
  231 end Lab4;
